Index: ag7100.c
===================================================================
--- ag7100.c	(revision 18057)
+++ ag7100.c	(working copy)
@@ -307,7 +307,7 @@
 ag7100_stop(struct net_device *dev)
 {
     ag7100_mac_t *mac = (ag7100_mac_t *)netdev_priv(dev);
-    int flags;
+    unsigned long flags;
 
     spin_lock_irqsave(&mac->mac_lock, flags);
     napi_disable(&mac->mac_napi);
@@ -411,30 +411,8 @@
 {
     ag7100_ring_t *tx = &mac->mac_txring, *rx = &mac->mac_rxring;
     ag7100_desc_t *r0, *t0;
-#ifdef CONFIG_AR9100 
-#ifndef CONFIG_PORT0_AS_SWITCH
-    if(mac->mac_unit) {
-#ifdef CONFIG_DUAL_F1E_PHY
-    ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN | AG7100_MAC_CFG1_TX_EN));
-#else
-    ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN | AG7100_MAC_CFG1_TX_EN));
-#endif
-    }
-    else {
-	 ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN | AG7100_MAC_CFG1_TX_EN));
-   }
-#else
-   if(mac->mac_unit) {
-    ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN |AG7100_MAC_CFG1_TX_EN));
-    }
-    else {
-         ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN | AG7100_MAC_CFG1_TX_EN));
-   }
-#endif
-#else
-	ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN |
-        AG7100_MAC_CFG1_TX_EN));
-#endif
+    ag7100_reg_wr(mac, AG7100_MAC_CFG1, (AG7100_MAC_CFG1_RX_EN | AG7100_MAC_CFG1_TX_EN | AG7100_MAC_CFG1_STX | AG7100_MAC_CFG1_SRX));
+
     ag7100_reg_rmw_set(mac, AG7100_MAC_CFG2, (AG7100_MAC_CFG2_PAD_CRC_EN | AG7100_MAC_CFG2_LEN_CHECK));
     ag7100_reg_wr(mac, AG71XX_REG_MAC_MFL, AG71XX_TX_MTU_LEN);
 
@@ -450,8 +428,8 @@
     ag7100_reg_wr(mac, AG7100_MAC_FIFO_CFG_1, 0xfff0000);
     ag7100_reg_wr(mac, AG7100_MAC_FIFO_CFG_2, 0x1fff);
 #else
-    ag7100_reg_wr(mac, AG7100_MAC_FIFO_CFG_1, 0xfff0000);
-    ag7100_reg_wr(mac, AG7100_MAC_FIFO_CFG_2, 0x1fff);
+    ag7100_reg_wr(mac, AG7100_MAC_FIFO_CFG_1, 0x0fff0000);
+    ag7100_reg_wr(mac, AG7100_MAC_FIFO_CFG_2, 0x00001fff);
     /*
     * Weed out junk frames (CRC errored, short collision'ed frames etc.)
     */
@@ -686,7 +664,7 @@
         (mac->mac_speed !=  speed || mac->mac_fdx !=  fdx)) 
     {   
        /* workaround for PHY4 port thru RGMII */
-       phy_mode_setup();
+//       phy_mode_setup();
        is_setup_done = 1;
     }
 #endif
@@ -868,11 +846,13 @@
     ag7100_ring_t   *r     = &mac->mac_txring;
     int              head  = r->ring_head, tail = r->ring_tail;
     ag7100_desc_t   *ds;
-#if 1//DMA tx hang
-    ag7100_buffer_t *bf;
-#endif
+    uint32_t rx_ds;
     ag7100_buffer_t *bp;
+    int mask,int_mask;
+    unsigned long flags;
+    unsigned int w1 = 0, w2 = 0;
 
+
     ar7100_flush_ge(mac->mac_unit);
 
     while (tail != head)
@@ -881,16 +861,60 @@
         bp   =  &r->ring_buffer[tail];
 
         if(ag7100_tx_owned_by_dma(ds)) {
-                        if ((jiffies - bp->trans_start) > (1 * HZ)) {
-//                printk(MODULE_NAME ": Tx Dma status : %s\n",
-//                ag7100_tx_stopped(mac) ? "inactive" : "active");
-#if 0
-//                printk(MODULE_NAME ": timestamp:%u jiffies:%u diff:%d\n",bp->trans_start,jiffies,
-//                             (jiffies - bp->trans_start));
-#endif
-               ag7100_dma_reset(mac);
-                           return 1;
-           }
+            if ((ag7100_get_diff(bp->trans_start,jiffies)) > ((1 * HZ/10))) {
+
+                 /*
+                  * If the DMA is in pause state reset kernel watchdog timer
+                  */
+        
+                printk(MODULE_NAME ": Tx Dma status eth%d : %s\n",mac->mac_unit,
+                            ag7100_tx_stopped(mac) ? "inactive" : "active");                               
+
+                spin_lock_irqsave(&mac->mac_lock, flags);
+                                                                                                
+                int_mask = ag7100_reg_rd(mac,AG7100_DMA_INTR_MASK);
+
+                ag7100_tx_stop(mac);
+                ag7100_rx_stop(mac);
+
+                rx_ds = ag7100_reg_rd(mac,AG7100_DMA_RX_DESC);
+                mask = ag7100_reset_mask(mac->mac_unit);
+
+                /*
+                 * put into reset, hold, pull out.
+                 */
+                ar7100_reg_rmw_set(AR7100_RESET, mask);
+                udelay(10);
+                ar7100_reg_rmw_clear(AR7100_RESET, mask);
+                udelay(10);
+
+                ag7100_hw_setup(mac);
+
+                ag7100_reg_wr(mac,AG7100_DMA_TX_DESC,ag7100_desc_dma_addr(r,ds));
+                ag7100_reg_wr(mac,AG7100_DMA_RX_DESC,rx_ds);
+                /*
+                 * set the mac addr
+                 */
+                 
+                addr_to_words(mac->mac_dev->dev_addr, w1, w2);
+                ag7100_reg_wr(mac, AG7100_GE_MAC_ADDR1, w1);
+                ag7100_reg_wr(mac, AG7100_GE_MAC_ADDR2, w2);
+
+                ag7100_set_mac_from_link(mac, mac->mac_speed, mac->mac_fdx);
+                
+
+                ag7100_tx_start(mac);
+
+                ag7100_rx_start(mac);
+               
+                /*
+                 * Restore interrupts
+                 */
+                ag7100_reg_wr(mac,AG7100_DMA_INTR_MASK,int_mask);
+
+                spin_unlock_irqrestore(&mac->mac_lock,flags);
+                break;
+            }
         }
         ag7100_ring_incr(tail);
     }
@@ -936,7 +960,7 @@
     {
         if (carrier)
         {
-//            printk(MODULE_NAME ": unit %d: phy not up carrier %d\n", mac->mac_unit, carrier);
+            printk(MODULE_NAME ": unit %d: phy not up carrier %d\n", mac->mac_unit, carrier);
             netif_carrier_off(dev);
         }
         goto done;
@@ -956,16 +980,16 @@
     if (carrier && (speed == mac->mac_speed) && (fdx == mac->mac_fdx)) 
         goto done;
 
-//    printk(MODULE_NAME ": unit %d phy is up...", mac->mac_unit);
-//    printk("%s %s %s\n", mii_str[mac->mac_unit][mii_if(mac)], 
-//        spd_str[speed], dup_str[fdx]);
+    printk(MODULE_NAME ": unit %d phy is up...", mac->mac_unit);
+    printk("%s %s %s\n", mii_str[mac->mac_unit][mii_if(mac)], 
+        spd_str[speed], dup_str[fdx]);
 
     ag7100_set_mac_from_link(mac, speed, fdx);
 
-//    printk(MODULE_NAME ": done cfg2 %#x ifctl %#x miictrl %#x \n", 
-//        ag7100_reg_rd(mac, AG7100_MAC_CFG2), 
-//        ag7100_reg_rd(mac, AG7100_MAC_IFCTL),
-//        ar7100_reg_rd(mii_reg(mac)));
+    printk(MODULE_NAME ": done cfg2 %#x ifctl %#x miictrl %#x \n", 
+        ag7100_reg_rd(mac, AG7100_MAC_CFG2), 
+        ag7100_reg_rd(mac, AG7100_MAC_IFCTL),
+        ar7100_reg_rd(mii_reg(mac)));
     /*
     * in business
     */
@@ -1106,7 +1130,7 @@
 static void
 ag7100_handle_tx_full(ag7100_mac_t *mac)
 {
-    u32         flags;
+    unsigned long         flags;
 #if defined(CONFIG_AR9100) && defined(CONFIG_AG7100_GE1_RMII)
     if(!mac->speed_10t)
 #endif
@@ -1138,7 +1162,7 @@
 
     /* force extra pkt if remainder less than 4 bytes */
     if (*len > tx_len_per_ds)
-        if (*len <= (tx_len_per_ds + 4))
+        if (*len < (tx_len_per_ds + 4))
             len_this_ds = tx_len_per_ds - 4;
         else
             len_this_ds = tx_len_per_ds;
@@ -1262,6 +1286,10 @@
         nds_this_pkt++;
         ag7100_tx_give_to_dma(ds);
     }
+    ds->res1           = 0;
+    ds->res2           = 0;
+    ds->ftpp_override  = 0;
+    ds->res3           = 0;
 
     ds->more        = 0;
     ag7100_tx_give_to_dma(fds);
@@ -1340,9 +1368,17 @@
 
     assert(isr == (isr & imr));
 
-    if (likely(isr & (AG7100_INTR_RX | AG7100_INTR_RX_OVF)))
+    if (isr & (AG7100_INTR_RX_OVF))
     {
         handled = 1;
+
+        ag7100_reg_wr(mac,AG7100_MAC_CFG1,(ag7100_reg_rd(mac,AG7100_MAC_CFG1)&0xfffffff3));
+
+        ag7100_intr_ack_rxovf(mac);
+    }
+    if (likely(isr & (AG7100_INTR_RX)))
+    {
+        handled = 1;
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
 	if (likely(napi_schedule_prep(&mac->mac_napi)))
 #else
@@ -1440,7 +1476,7 @@
 	int work_done=0,      max_work  = min(*budget, dev->quota), status = 0;
 #endif
     ag7100_rx_status_t  ret;
-    u32                 flags;
+    unsigned long                 flags;
     spin_lock_irqsave(&mac->mac_lock, flags);
 
     ret = ag7100_recv_packets(dev, mac, max_work, &work_done);
@@ -1817,6 +1853,9 @@
     */
     wmb();
 
+ag7100_reg_wr(mac,AG7100_MAC_CFG1,(ag7100_reg_rd(mac,AG7100_MAC_CFG1)|0xc));
+ag7100_rx_start(mac);
+
     r->ring_tail = tail;
     ag7100_trc(refilled,"refilled");
 
@@ -1833,7 +1872,7 @@
     int              head  = r->ring_head, tail = r->ring_tail, reaped = 0, i;
     ag7100_desc_t   *ds;
     ag7100_buffer_t *bf;
-    uint32_t    flags;
+    unsigned long    flags;
 
     ag7100_trc_new(head,"hd");
     ag7100_trc_new(tail,"tl");
@@ -1947,6 +1986,12 @@
         dma_cache_sync(NULL, (void *)bf->buf_pkt->data, AG7100_RX_BUF_SIZE, DMA_FROM_DEVICE);
         ds->pkt_start_addr  = virt_to_phys(bf->buf_pkt->data);
 
+	ds->res1           = 0;
+        ds->res2           = 0;
+	ds->ftpp_override  = 0;
+	ds->res3           = 0;
+	ds->more        = 0;
+
         ag7100_rx_give_to_dma(ds);
         ag7100_ring_incr(tail);
     }
@@ -2038,7 +2083,7 @@
     int val;
 
     ag7100_trc(data,"data");
-//    ag7100_rx_replenish(mac);
+    ag7100_rx_replenish(mac);
     if (ag7100_rx_ring_full(mac))
     {
         val = mod_timer(&mac->mac_oom_timer, jiffies+1);
@@ -2070,6 +2115,7 @@
 {
     ag7100_mac_t *mac = container_of(work, ag7100_mac_t, mac_tx_timeout);
     ag7100_trc(mac,"mac");
+    check_for_dma_hang(mac);
     ag7100_stop(mac->mac_dev);
     ag7100_open(mac->mac_dev);
 }
@@ -2089,8 +2135,7 @@
 #ifdef CONFIG_AG7100_MAC_LOCATION
     u8 *eep_mac_addr = (u8 *)( CONFIG_AG7100_MAC_LOCATION + (mac->mac_unit)*6);
 #else
-    u8 *eep_mac_addr = (mac->mac_unit) ? AR7100_EEPROM_GE1_MAC_ADDR:
-        AR7100_EEPROM_GE0_MAC_ADDR;
+    u8 *eep_mac_addr = (mac->mac_unit) ? (u8*)AR7100_EEPROM_GE1_MAC_ADDR: (u8*)AR7100_EEPROM_GE0_MAC_ADDR;
 #endif
 
 //    printk(MODULE_NAME "CHH: Mac address for unit %d\n",mac->mac_unit);
@@ -2239,7 +2284,8 @@
     * Let hydra know how much to put into the fifo in words (for tx) 
     */
     if (0 == fifo_3)
-        fifo_3 = 0x000001ff | ((AG7100_TX_FIFO_LEN-tx_len_per_ds)/4)<<16;
+	fifo_3 = 0x008001ff;
+//        fifo_3 = 0x000001ff | ((AG7100_TX_FIFO_LEN-tx_len_per_ds)/4)<<16;
 
 //    printk(MODULE_NAME ": fifo cfg 3 %08x\n", fifo_3);
 
Index: ag7100.h
===================================================================
--- ag7100.h	(revision 18057)
+++ ag7100.h	(working copy)
@@ -70,10 +70,6 @@
 
 typedef struct {
     struct net_device      *mac_dev;
-    int (*rx)(struct sk_buff *skb);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
-    struct napi_struct mac_napi;
-#endif
     uint32_t                mac_unit;
     uint32_t                mac_base;
     int                     mac_irq;
@@ -87,12 +83,15 @@
     ag7100_phy_speed_t      mac_speed;
     int                     mac_fdx;
     struct timer_list       mac_phy_timer;
-    struct timer_list       mac_dbg_timer;
     ag7100_ring_t           mac_txring_cache;
+    ag7100_trc_t            tb;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,24)
+    struct napi_struct mac_napi;
+#endif
 #if defined(CONFIG_AR9100) && defined(CONFIG_AG7100_GE1_RMII)
     int                     speed_10t;
 #endif
-    ag7100_trc_t            tb;
+    int (*rx)(struct sk_buff *skb);
 }ag7100_mac_t;
 
 #define net_rx_packets      mac_net_stats.rx_packets
@@ -159,7 +158,7 @@
  */
 #define ETHERNET_FCS_SIZE            4
 #define AG71XX_TX_FIFO_LEN	2048
-#define AG71XX_TX_MTU_LEN	1544
+#define AG71XX_TX_MTU_LEN	1540
 #define AG7100_RX_RESERVE           (64)
 #define AG7100_RX_BUF_SIZE      \
     (AG7100_RX_RESERVE + ETH_HLEN + ETH_FRAME_LEN + ETHERNET_FCS_SIZE)
@@ -250,7 +249,9 @@
 #define AG7100_MAC_CFG1_TX_RST         (1 << 18)
 #define AG7100_MAC_CFG1_LOOPBACK       (1 << 8)
 #define AG7100_MAC_CFG1_RX_EN          (1 << 2)
+#define AG7100_MAC_CFG1_SRX            (1 << 3)
 #define AG7100_MAC_CFG1_TX_EN          (1 << 0)
+#define AG7100_MAC_CFG1_STX            (1 << 1)
 #define AG7100_MAC_CFG1_RX_FCTL        (1 << 5)
 #define AG7100_MAC_CFG1_TX_FCTL        (1 << 4)
 
@@ -378,6 +379,12 @@
     return ((tail > head ? 0 : ring->ring_nelem) + tail - head);
 }
 
+static inline uint32_t
+ag7100_get_diff(uint32_t t1,uint32_t t2)
+{
+    return (t1 > t2 ? (0xffffffff - (t1 - t2)) : t2 - t1);
+}
+
 static inline int ag7100_rx_ring_full(ag7100_mac_t *mac)
 {
     ag7100_ring_t *r    = &mac->mac_rxring;
