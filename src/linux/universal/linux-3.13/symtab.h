#define SYMTAB_KEEP \
KEEP(*(___ksymtab+LzmaDecode)) \
KEEP(*(___ksymtab+PDE_DATA)) \
KEEP(*(___ksymtab+___pskb_trim)) \
KEEP(*(___ksymtab+___ratelimit)) \
KEEP(*(___ksymtab+__ablkcipher_walk_complete)) \
KEEP(*(___ksymtab+__alloc_pages_nodemask)) \
KEEP(*(___ksymtab+__alloc_percpu)) \
KEEP(*(___ksymtab+__alloc_skb)) \
KEEP(*(___ksymtab+__alloc_workqueue_key)) \
KEEP(*(___ksymtab+__ashldi3)) \
KEEP(*(___ksymtab+__bitmap_empty)) \
KEEP(*(___ksymtab+__blk_end_request)) \
KEEP(*(___ksymtab+__blk_end_request_all)) \
KEEP(*(___ksymtab+__blk_end_request_cur)) \
KEEP(*(___ksymtab+__blk_end_request_err)) \
KEEP(*(___ksymtab+__blk_iopoll_complete)) \
KEEP(*(___ksymtab+__blk_put_request)) \
KEEP(*(___ksymtab+__blk_run_queue)) \
KEEP(*(___ksymtab+__blocking_notifier_call_chain)) \
KEEP(*(___ksymtab+__break_lease)) \
KEEP(*(___ksymtab+__class_create)) \
KEEP(*(___ksymtab+__class_register)) \
KEEP(*(___ksymtab+__clocksource_updatefreq_scale)) \
KEEP(*(___ksymtab+__cond_resched_lock)) \
KEEP(*(___ksymtab+__cond_resched_softirq)) \
KEEP(*(___ksymtab+__copy_tofrom_user)) \
KEEP(*(___ksymtab+__d_drop)) \
KEEP(*(___ksymtab+__dev_get_by_index)) \
KEEP(*(___ksymtab+__dev_get_by_name)) \
KEEP(*(___ksymtab+__dev_remove_pack)) \
KEEP(*(___ksymtab+__div64_32)) \
KEEP(*(___ksymtab+__dst_destroy_metrics_generic)) \
KEEP(*(___ksymtab+__dst_free)) \
KEEP(*(___ksymtab+__ethtool_get_settings)) \
KEEP(*(___ksymtab+__fib_lookup)) \
KEEP(*(___ksymtab+__free_pages)) \
KEEP(*(___ksymtab+__generic_file_aio_write)) \
KEEP(*(___ksymtab+__genl_register_family_with_ops)) \
KEEP(*(___ksymtab+__get_free_pages)) \
KEEP(*(___ksymtab+__get_page_tail)) \
KEEP(*(___ksymtab+__hw_addr_init)) \
KEEP(*(___ksymtab+__hw_addr_sync)) \
KEEP(*(___ksymtab+__hw_addr_unsync)) \
KEEP(*(___ksymtab+__idr_remove_all)) \
KEEP(*(___ksymtab+__inet6_hash)) \
KEEP(*(___ksymtab+__inet6_lookup_established)) \
KEEP(*(___ksymtab+__inet_hash_nolisten)) \
KEEP(*(___ksymtab+__inet_inherit_port)) \
KEEP(*(___ksymtab+__inet_lookup_established)) \
KEEP(*(___ksymtab+__inet_lookup_listener)) \
KEEP(*(___ksymtab+__inet_stream_connect)) \
KEEP(*(___ksymtab+__init_rwsem)) \
KEEP(*(___ksymtab+__init_waitqueue_head)) \
KEEP(*(___ksymtab+__ioremap)) \
KEEP(*(___ksymtab+__iowrite32_copy)) \
KEEP(*(___ksymtab+__ip6_local_out)) \
KEEP(*(___ksymtab+__ip_select_ident)) \
KEEP(*(___ksymtab+__ipv6_addr_type)) \
KEEP(*(___ksymtab+__kernel_param_lock)) \
KEEP(*(___ksymtab+__kernel_param_unlock)) \
KEEP(*(___ksymtab+__kfifo_alloc)) \
KEEP(*(___ksymtab+__kfifo_free)) \
KEEP(*(___ksymtab+__kfifo_in)) \
KEEP(*(___ksymtab+__kfifo_in_r)) \
KEEP(*(___ksymtab+__kfifo_init)) \
KEEP(*(___ksymtab+__kfifo_out)) \
KEEP(*(___ksymtab+__kfifo_out_peek)) \
KEEP(*(___ksymtab+__kfifo_out_peek_r)) \
KEEP(*(___ksymtab+__kfifo_out_r)) \
KEEP(*(___ksymtab+__kfree_skb)) \
KEEP(*(___ksymtab+__kmalloc)) \
KEEP(*(___ksymtab+__lock_page)) \
KEEP(*(___ksymtab+__lock_page_killable)) \
KEEP(*(___ksymtab+__lru_cache_add)) \
KEEP(*(___ksymtab+__lshrdi3)) \
KEEP(*(___ksymtab+__mark_inode_dirty)) \
KEEP(*(___ksymtab+__module_get)) \
KEEP(*(___ksymtab+__module_put_and_exit)) \
KEEP(*(___ksymtab+__mutex_init)) \
KEEP(*(___ksymtab+__napi_complete)) \
KEEP(*(___ksymtab+__napi_schedule)) \
KEEP(*(___ksymtab+__neigh_create)) \
KEEP(*(___ksymtab+__netdev_alloc_skb)) \
KEEP(*(___ksymtab+__netdev_alloc_skb_ip_align)) \
KEEP(*(___ksymtab+__netif_schedule)) \
KEEP(*(___ksymtab+__netlink_kernel_create)) \
KEEP(*(___ksymtab+__nf_ct_expect_find)) \
KEEP(*(___ksymtab+__nf_ct_refresh_acct)) \
KEEP(*(___ksymtab+__nf_nat_mangle_tcp_packet)) \
KEEP(*(___ksymtab+__nla_put)) \
KEEP(*(___ksymtab+__nla_put_nohdr)) \
KEEP(*(___ksymtab+__nla_reserve)) \
KEEP(*(___ksymtab+__nla_reserve_nohdr)) \
KEEP(*(___ksymtab+__nlmsg_put)) \
KEEP(*(___ksymtab+__pci_complete_power_transition)) \
KEEP(*(___ksymtab+__pci_register_driver)) \
KEEP(*(___ksymtab+__platform_driver_register)) \
KEEP(*(___ksymtab+__pneigh_lookup)) \
KEEP(*(___ksymtab+__printk_ratelimit)) \
KEEP(*(___ksymtab+__pskb_copy)) \
KEEP(*(___ksymtab+__pskb_pull_tail)) \
KEEP(*(___ksymtab+__put_cred)) \
KEEP(*(___ksymtab+__rb_erase_color)) \
KEEP(*(___ksymtab+__register_chrdev)) \
KEEP(*(___ksymtab+__release_region)) \
KEEP(*(___ksymtab+__request_module)) \
KEEP(*(___ksymtab+__request_region)) \
KEEP(*(___ksymtab+__root_device_register)) \
KEEP(*(___ksymtab+__round_jiffies)) \
KEEP(*(___ksymtab+__round_jiffies_relative)) \
KEEP(*(___ksymtab+__round_jiffies_up)) \
KEEP(*(___ksymtab+__round_jiffies_up_relative)) \
KEEP(*(___ksymtab+__rtnl_af_register)) \
KEEP(*(___ksymtab+__rtnl_af_unregister)) \
KEEP(*(___ksymtab+__rtnl_link_register)) \
KEEP(*(___ksymtab+__rtnl_link_unregister)) \
KEEP(*(___ksymtab+__rtnl_register)) \
KEEP(*(___ksymtab+__secpath_destroy)) \
KEEP(*(___ksymtab+__seq_open_private)) \
KEEP(*(___ksymtab+__set_page_dirty_buffers)) \
KEEP(*(___ksymtab+__set_page_dirty_nobuffers)) \
KEEP(*(___ksymtab+__sg_alloc_table)) \
KEEP(*(___ksymtab+__sg_free_table)) \
KEEP(*(___ksymtab+__sk_dst_check)) \
KEEP(*(___ksymtab+__sk_mem_schedule)) \
KEEP(*(___ksymtab+__skb_checksum_complete)) \
KEEP(*(___ksymtab+__skb_checksum_complete_head)) \
KEEP(*(___ksymtab+__skb_dst_set_noref)) \
KEEP(*(___ksymtab+__skb_recv_datagram)) \
KEEP(*(___ksymtab+__skb_warn_lro_forwarding)) \
KEEP(*(___ksymtab+__sock_create)) \
KEEP(*(___ksymtab+__sock_recv_timestamp)) \
KEEP(*(___ksymtab+__sock_recv_ts_and_drops)) \
KEEP(*(___ksymtab+__sock_recv_wifi_status)) \
KEEP(*(___ksymtab+__sw_hweight16)) \
KEEP(*(___ksymtab+__sw_hweight32)) \
KEEP(*(___ksymtab+__sw_hweight64)) \
KEEP(*(___ksymtab+__sw_hweight8)) \
KEEP(*(___ksymtab+__task_pid_nr_ns)) \
KEEP(*(___ksymtab+__tasklet_hi_schedule)) \
KEEP(*(___ksymtab+__tasklet_hi_schedule_first)) \
KEEP(*(___ksymtab+__tasklet_schedule)) \
KEEP(*(___ksymtab+__tty_alloc_driver)) \
KEEP(*(___ksymtab+__udp4_lib_lookup)) \
KEEP(*(___ksymtab+__unregister_chrdev)) \
KEEP(*(___ksymtab+__vmalloc)) \
KEEP(*(___ksymtab+__wake_up)) \
KEEP(*(___ksymtab+__wake_up_bit)) \
KEEP(*(___ksymtab+__wake_up_locked)) \
KEEP(*(___ksymtab+__wake_up_locked_key)) \
KEEP(*(___ksymtab+__wake_up_sync)) \
KEEP(*(___ksymtab+__wake_up_sync_key)) \
KEEP(*(___ksymtab+__ww_mutex_lock)) \
KEEP(*(___ksymtab+__ww_mutex_lock_interruptible)) \
KEEP(*(___ksymtab+__xfrm_decode_session)) \
KEEP(*(___ksymtab+__xfrm_policy_check)) \
KEEP(*(___ksymtab+__xfrm_route_forward)) \
KEEP(*(___ksymtab+__xfrm_state_destroy)) \
KEEP(*(___ksymtab+_cond_resched)) \
KEEP(*(___ksymtab+_ctype)) \
KEEP(*(___ksymtab+_dev_info)) \
KEEP(*(___ksymtab+_kstrtoul)) \
KEEP(*(___ksymtab+_local_bh_enable)) \
KEEP(*(___ksymtab+_memcpy_fromio)) \
KEEP(*(___ksymtab+_memcpy_toio)) \
KEEP(*(___ksymtab+_memset_io)) \
KEEP(*(___ksymtab+add_device_randomness)) \
KEEP(*(___ksymtab+add_disk)) \
KEEP(*(___ksymtab+add_timer)) \
KEEP(*(___ksymtab+add_timer_on)) \
KEEP(*(___ksymtab+add_to_page_cache_locked)) \
KEEP(*(___ksymtab+add_uevent_var)) \
KEEP(*(___ksymtab+add_wait_queue)) \
KEEP(*(___ksymtab+add_wait_queue_exclusive)) \
KEEP(*(___ksymtab+af_alg_complete)) \
KEEP(*(___ksymtab+af_alg_wait_for_completion)) \
KEEP(*(___ksymtab+alloc_disk)) \
KEEP(*(___ksymtab+alloc_disk_node)) \
KEEP(*(___ksymtab+alloc_etherdev_mqs)) \
KEEP(*(___ksymtab+alloc_netdev_mqs)) \
KEEP(*(___ksymtab+allow_signal)) \
KEEP(*(___ksymtab+anon_transport_class_unregister)) \
KEEP(*(___ksymtab+arp_create)) \
KEEP(*(___ksymtab+arp_send)) \
KEEP(*(___ksymtab+arp_xmit)) \
KEEP(*(___ksymtab+async_schedule)) \
KEEP(*(___ksymtab+async_schedule_domain)) \
KEEP(*(___ksymtab+async_synchronize_full_domain)) \
KEEP(*(___ksymtab+async_unregister_domain)) \
KEEP(*(___ksymtab+atomic64_add_return)) \
KEEP(*(___ksymtab+atomic64_read)) \
KEEP(*(___ksymtab+atomic64_set)) \
KEEP(*(___ksymtab+atomic_dec_and_mutex_lock)) \
KEEP(*(___ksymtab+autoremove_wake_function)) \
KEEP(*(___ksymtab+bdi_destroy)) \
KEEP(*(___ksymtab+bdi_setup_and_register)) \
KEEP(*(___ksymtab+bdput)) \
KEEP(*(___ksymtab+bh_uptodate_or_lock)) \
KEEP(*(___ksymtab+bio_flush_dcache_pages)) \
KEEP(*(___ksymtab+bitmap_scnprintf)) \
KEEP(*(___ksymtab+blk_add_request_payload)) \
KEEP(*(___ksymtab+blk_cleanup_queue)) \
KEEP(*(___ksymtab+blk_complete_request)) \
KEEP(*(___ksymtab+blk_delay_queue)) \
KEEP(*(___ksymtab+blk_dump_rq_flags)) \
KEEP(*(___ksymtab+blk_end_request)) \
KEEP(*(___ksymtab+blk_end_request_all)) \
KEEP(*(___ksymtab+blk_end_request_cur)) \
KEEP(*(___ksymtab+blk_end_request_err)) \
KEEP(*(___ksymtab+blk_execute_rq)) \
KEEP(*(___ksymtab+blk_execute_rq_nowait)) \
KEEP(*(___ksymtab+blk_free_tags)) \
KEEP(*(___ksymtab+blk_get_backing_dev_info)) \
KEEP(*(___ksymtab+blk_get_queue)) \
KEEP(*(___ksymtab+blk_get_request)) \
KEEP(*(___ksymtab+blk_init_queue)) \
KEEP(*(___ksymtab+blk_init_queue_node)) \
KEEP(*(___ksymtab+blk_iopoll_complete)) \
KEEP(*(___ksymtab+blk_lookup_devt)) \
KEEP(*(___ksymtab+blk_max_low_pfn)) \
KEEP(*(___ksymtab+blk_peek_request)) \
KEEP(*(___ksymtab+blk_put_queue)) \
KEEP(*(___ksymtab+blk_put_request)) \
KEEP(*(___ksymtab+blk_queue_alignment_offset)) \
KEEP(*(___ksymtab+blk_queue_bounce_limit)) \
KEEP(*(___ksymtab+blk_queue_dma_alignment)) \
KEEP(*(___ksymtab+blk_queue_flush)) \
KEEP(*(___ksymtab+blk_queue_flush_queueable)) \
KEEP(*(___ksymtab+blk_queue_io_min)) \
KEEP(*(___ksymtab+blk_queue_io_opt)) \
KEEP(*(___ksymtab+blk_queue_lld_busy)) \
KEEP(*(___ksymtab+blk_queue_logical_block_size)) \
KEEP(*(___ksymtab+blk_queue_max_hw_sectors)) \
KEEP(*(___ksymtab+blk_queue_max_segment_size)) \
KEEP(*(___ksymtab+blk_queue_max_segments)) \
KEEP(*(___ksymtab+blk_queue_max_write_same_sectors)) \
KEEP(*(___ksymtab+blk_queue_physical_block_size)) \
KEEP(*(___ksymtab+blk_queue_prep_rq)) \
KEEP(*(___ksymtab+blk_queue_resize_tags)) \
KEEP(*(___ksymtab+blk_queue_rq_timed_out)) \
KEEP(*(___ksymtab+blk_queue_rq_timeout)) \
KEEP(*(___ksymtab+blk_queue_segment_boundary)) \
KEEP(*(___ksymtab+blk_queue_softirq_done)) \
KEEP(*(___ksymtab+blk_queue_start_tag)) \
KEEP(*(___ksymtab+blk_queue_unprep_rq)) \
KEEP(*(___ksymtab+blk_queue_update_dma_alignment)) \
KEEP(*(___ksymtab+blk_queue_update_dma_pad)) \
KEEP(*(___ksymtab+blk_register_region)) \
KEEP(*(___ksymtab+blk_requeue_request)) \
KEEP(*(___ksymtab+blk_rq_init)) \
KEEP(*(___ksymtab+blk_rq_map_kern)) \
KEEP(*(___ksymtab+blk_rq_map_sg)) \
KEEP(*(___ksymtab+blk_rq_map_user)) \
KEEP(*(___ksymtab+blk_rq_map_user_iov)) \
KEEP(*(___ksymtab+blk_rq_unmap_user)) \
KEEP(*(___ksymtab+blk_run_queue)) \
KEEP(*(___ksymtab+blk_run_queue_async)) \
KEEP(*(___ksymtab+blk_start_queue)) \
KEEP(*(___ksymtab+blk_start_request)) \
KEEP(*(___ksymtab+blk_stop_queue)) \
KEEP(*(___ksymtab+blk_unprep_request)) \
KEEP(*(___ksymtab+blk_unregister_region)) \
KEEP(*(___ksymtab+blk_update_request)) \
KEEP(*(___ksymtab+blk_verify_command)) \
KEEP(*(___ksymtab+block_is_partially_uptodate)) \
KEEP(*(___ksymtab+blocking_notifier_call_chain)) \
KEEP(*(___ksymtab+blocking_notifier_chain_register)) \
KEEP(*(___ksymtab+blocking_notifier_chain_unregister)) \
KEEP(*(___ksymtab+boot_tvec_bases)) \
KEEP(*(___ksymtab+br_should_route_hook)) \
KEEP(*(___ksymtab+brnf_call_ebtables)) \
KEEP(*(___ksymtab+build_ehash_secret)) \
KEEP(*(___ksymtab+bus_find_device)) \
KEEP(*(___ksymtab+bus_find_device_by_name)) \
KEEP(*(___ksymtab+bus_for_each_dev)) \
KEEP(*(___ksymtab+bus_get_device_klist)) \
KEEP(*(___ksymtab+bus_register)) \
KEEP(*(___ksymtab+bus_register_notifier)) \
KEEP(*(___ksymtab+bus_sort_breadthfirst)) \
KEEP(*(___ksymtab+bus_unregister)) \
KEEP(*(___ksymtab+bus_unregister_notifier)) \
KEEP(*(___ksymtab+cacheable_memcpy)) \
KEEP(*(___ksymtab+call_netdevice_notifiers)) \
KEEP(*(___ksymtab+call_netdevice_notifiers_info)) \
KEEP(*(___ksymtab+call_netevent_notifiers)) \
KEEP(*(___ksymtab+call_rcu_sched)) \
KEEP(*(___ksymtab+call_usermodehelper_setup)) \
KEEP(*(___ksymtab+cancel_delayed_work)) \
KEEP(*(___ksymtab+cancel_delayed_work_sync)) \
KEEP(*(___ksymtab+cancel_work_sync)) \
KEEP(*(___ksymtab+capable)) \
KEEP(*(___ksymtab+cdev_add)) \
KEEP(*(___ksymtab+cdev_alloc)) \
KEEP(*(___ksymtab+cdev_del)) \
KEEP(*(___ksymtab+cdev_init)) \
KEEP(*(___ksymtab+cfi_fixup)) \
KEEP(*(___ksymtab+check_disk_change)) \
KEEP(*(___ksymtab+check_submounts_and_drop)) \
KEEP(*(___ksymtab+class_destroy)) \
KEEP(*(___ksymtab+class_find_device)) \
KEEP(*(___ksymtab+class_interface_register)) \
KEEP(*(___ksymtab+class_interface_unregister)) \
KEEP(*(___ksymtab+class_unregister)) \
KEEP(*(___ksymtab+cleanup_srcu_struct)) \
KEEP(*(___ksymtab+clear_inode)) \
KEEP(*(___ksymtab+clear_nlink)) \
KEEP(*(___ksymtab+clear_page_dirty_for_io)) \
KEEP(*(___ksymtab+clock_t_to_jiffies)) \
KEEP(*(___ksymtab+complete)) \
KEEP(*(___ksymtab+complete_all)) \
KEEP(*(___ksymtab+complete_and_exit)) \
KEEP(*(___ksymtab+console_conditional_schedule)) \
KEEP(*(___ksymtab+consume_skb)) \
KEEP(*(___ksymtab+contig_page_data)) \
KEEP(*(___ksymtab+cookie_check_timestamp)) \
KEEP(*(___ksymtab+cpu_add_dev_attr_group)) \
KEEP(*(___ksymtab+cpu_remove_dev_attr_group)) \
KEEP(*(___ksymtab+crc32_be)) \
KEEP(*(___ksymtab+crc32_le)) \
KEEP(*(___ksymtab+crypto_ablkcipher_type)) \
KEEP(*(___ksymtab+crypto_aead_type)) \
KEEP(*(___ksymtab+crypto_ahash_digest)) \
KEEP(*(___ksymtab+crypto_ahash_finup)) \
KEEP(*(___ksymtab+crypto_ahash_setkey)) \
KEEP(*(___ksymtab+crypto_ahash_type)) \
KEEP(*(___ksymtab+crypto_alg_lookup)) \
KEEP(*(___ksymtab+crypto_alg_mod_lookup)) \
KEEP(*(___ksymtab+crypto_alloc_ablkcipher)) \
KEEP(*(___ksymtab+crypto_alloc_ahash)) \
KEEP(*(___ksymtab+crypto_alloc_base)) \
KEEP(*(___ksymtab+crypto_alloc_instance2)) \
KEEP(*(___ksymtab+crypto_alloc_shash)) \
KEEP(*(___ksymtab+crypto_attr_alg2)) \
KEEP(*(___ksymtab+crypto_check_attr_type)) \
KEEP(*(___ksymtab+crypto_destroy_tfm)) \
KEEP(*(___ksymtab+crypto_has_alg)) \
KEEP(*(___ksymtab+crypto_init_spawn)) \
KEEP(*(___ksymtab+crypto_init_spawn2)) \
KEEP(*(___ksymtab+crypto_larval_lookup)) \
KEEP(*(___ksymtab+crypto_lookup_aead)) \
KEEP(*(___ksymtab+crypto_lookup_skcipher)) \
KEEP(*(___ksymtab+crypto_lookup_template)) \
KEEP(*(___ksymtab+crypto_mod_put)) \
KEEP(*(___ksymtab+crypto_register_ahash)) \
KEEP(*(___ksymtab+crypto_register_alg)) \
KEEP(*(___ksymtab+crypto_register_algs)) \
KEEP(*(___ksymtab+crypto_register_instance)) \
KEEP(*(___ksymtab+crypto_register_notifier)) \
KEEP(*(___ksymtab+crypto_register_pcomp)) \
KEEP(*(___ksymtab+crypto_register_shash)) \
KEEP(*(___ksymtab+crypto_register_shashes)) \
KEEP(*(___ksymtab+crypto_register_template)) \
KEEP(*(___ksymtab+crypto_sha1_update)) \
KEEP(*(___ksymtab+crypto_sha256_update)) \
KEEP(*(___ksymtab+crypto_shash_final)) \
KEEP(*(___ksymtab+crypto_shash_finup)) \
KEEP(*(___ksymtab+crypto_shash_setkey)) \
KEEP(*(___ksymtab+crypto_shash_update)) \
KEEP(*(___ksymtab+crypto_spawn_tfm)) \
KEEP(*(___ksymtab+crypto_spawn_tfm2)) \
KEEP(*(___ksymtab+crypto_unregister_ahash)) \
KEEP(*(___ksymtab+crypto_unregister_alg)) \
KEEP(*(___ksymtab+crypto_unregister_algs)) \
KEEP(*(___ksymtab+crypto_unregister_template)) \
KEEP(*(___ksymtab+crypto_xor)) \
KEEP(*(___ksymtab+csum_ipv6_magic)) \
KEEP(*(___ksymtab+csum_partial)) \
KEEP(*(___ksymtab+csum_partial_copy_fromiovecend)) \
KEEP(*(___ksymtab+csum_partial_copy_generic)) \
KEEP(*(___ksymtab+csum_tcpudp_magic)) \
KEEP(*(___ksymtab+cur_cpu_spec)) \
KEEP(*(___ksymtab+current_fs_time)) \
KEEP(*(___ksymtab+current_kernel_time)) \
KEEP(*(___ksymtab+current_umask)) \
KEEP(*(___ksymtab+d_alloc)) \
KEEP(*(___ksymtab+d_alloc_name)) \
KEEP(*(___ksymtab+d_alloc_pseudo)) \
KEEP(*(___ksymtab+d_delete)) \
KEEP(*(___ksymtab+d_drop)) \
KEEP(*(___ksymtab+d_hash_and_lookup)) \
KEEP(*(___ksymtab+d_instantiate)) \
KEEP(*(___ksymtab+d_instantiate_unique)) \
KEEP(*(___ksymtab+d_invalidate)) \
KEEP(*(___ksymtab+d_lookup)) \
KEEP(*(___ksymtab+d_make_root)) \
KEEP(*(___ksymtab+d_materialise_unique)) \
KEEP(*(___ksymtab+d_obtain_alias)) \
KEEP(*(___ksymtab+d_rehash)) \
KEEP(*(___ksymtab+d_splice_alias)) \
KEEP(*(___ksymtab+datagram_poll)) \
KEEP(*(___ksymtab+deactivate_locked_super)) \
KEEP(*(___ksymtab+deactivate_super)) \
KEEP(*(___ksymtab+debugfs_create_bool)) \
KEEP(*(___ksymtab+debugfs_create_dir)) \
KEEP(*(___ksymtab+debugfs_create_file)) \
KEEP(*(___ksymtab+debugfs_create_symlink)) \
KEEP(*(___ksymtab+debugfs_create_u32)) \
KEEP(*(___ksymtab+debugfs_create_u32_array)) \
KEEP(*(___ksymtab+debugfs_create_u64)) \
KEEP(*(___ksymtab+debugfs_create_u8)) \
KEEP(*(___ksymtab+debugfs_create_x32)) \
KEEP(*(___ksymtab+debugfs_remove)) \
KEEP(*(___ksymtab+debugfs_remove_recursive)) \
KEEP(*(___ksymtab+debugfs_rename)) \
KEEP(*(___ksymtab+default_backing_dev_info)) \
KEEP(*(___ksymtab+default_llseek)) \
KEEP(*(___ksymtab+default_wake_function)) \
KEEP(*(___ksymtab+del_gendisk)) \
KEEP(*(___ksymtab+del_timer)) \
KEEP(*(___ksymtab+delayed_work_timer_fn)) \
KEEP(*(___ksymtab+dentry_unhash)) \
KEEP(*(___ksymtab+dentry_update_name_case)) \
KEEP(*(___ksymtab+dequeue_signal)) \
KEEP(*(___ksymtab+destroy_workqueue)) \
KEEP(*(___ksymtab+dev_add_pack)) \
KEEP(*(___ksymtab+dev_alloc_name)) \
KEEP(*(___ksymtab+dev_change_net_namespace)) \
KEEP(*(___ksymtab+dev_close)) \
KEEP(*(___ksymtab+dev_disable_lro)) \
KEEP(*(___ksymtab+dev_driver_string)) \
KEEP(*(___ksymtab+dev_err)) \
KEEP(*(___ksymtab+dev_forward_skb)) \
KEEP(*(___ksymtab+dev_get_by_flags_rcu)) \
KEEP(*(___ksymtab+dev_get_by_index)) \
KEEP(*(___ksymtab+dev_get_by_index_rcu)) \
KEEP(*(___ksymtab+dev_get_by_name)) \
KEEP(*(___ksymtab+dev_get_by_name_rcu)) \
KEEP(*(___ksymtab+dev_get_drvdata)) \
KEEP(*(___ksymtab+dev_get_flags)) \
KEEP(*(___ksymtab+dev_get_stats)) \
KEEP(*(___ksymtab+dev_kfree_skb_any)) \
KEEP(*(___ksymtab+dev_kfree_skb_irq)) \
KEEP(*(___ksymtab+dev_loopback_xmit)) \
KEEP(*(___ksymtab+dev_mc_add)) \
KEEP(*(___ksymtab+dev_mc_add_excl)) \
KEEP(*(___ksymtab+dev_mc_add_global)) \
KEEP(*(___ksymtab+dev_mc_del)) \
KEEP(*(___ksymtab+dev_mc_del_global)) \
KEEP(*(___ksymtab+dev_mc_flush)) \
KEEP(*(___ksymtab+dev_mc_sync)) \
KEEP(*(___ksymtab+dev_mc_sync_multiple)) \
KEEP(*(___ksymtab+dev_mc_unsync)) \
KEEP(*(___ksymtab+dev_notice)) \
KEEP(*(___ksymtab+dev_open)) \
KEEP(*(___ksymtab+dev_printk)) \
KEEP(*(___ksymtab+dev_printk_emit)) \
KEEP(*(___ksymtab+dev_queue_xmit)) \
KEEP(*(___ksymtab+dev_remove_pack)) \
KEEP(*(___ksymtab+dev_set_allmulti)) \
KEEP(*(___ksymtab+dev_set_drvdata)) \
KEEP(*(___ksymtab+dev_set_group)) \
KEEP(*(___ksymtab+dev_set_mac_address)) \
KEEP(*(___ksymtab+dev_set_mtu)) \
KEEP(*(___ksymtab+dev_set_name)) \
KEEP(*(___ksymtab+dev_set_promiscuity)) \
KEEP(*(___ksymtab+dev_trans_start)) \
KEEP(*(___ksymtab+dev_uc_flush)) \
KEEP(*(___ksymtab+dev_uc_sync)) \
KEEP(*(___ksymtab+dev_uc_sync_multiple)) \
KEEP(*(___ksymtab+dev_uc_unsync)) \
KEEP(*(___ksymtab+dev_valid_name)) \
KEEP(*(___ksymtab+dev_vprintk_emit)) \
KEEP(*(___ksymtab+dev_warn)) \
KEEP(*(___ksymtab+device_add)) \
KEEP(*(___ksymtab+device_attach)) \
KEEP(*(___ksymtab+device_bind_driver)) \
KEEP(*(___ksymtab+device_create)) \
KEEP(*(___ksymtab+device_create_bin_file)) \
KEEP(*(___ksymtab+device_create_file)) \
KEEP(*(___ksymtab+device_create_vargs)) \
KEEP(*(___ksymtab+device_create_with_groups)) \
KEEP(*(___ksymtab+device_del)) \
KEEP(*(___ksymtab+device_destroy)) \
KEEP(*(___ksymtab+device_for_each_child)) \
KEEP(*(___ksymtab+device_initialize)) \
KEEP(*(___ksymtab+device_register)) \
KEEP(*(___ksymtab+device_release_driver)) \
KEEP(*(___ksymtab+device_remove_bin_file)) \
KEEP(*(___ksymtab+device_remove_file)) \
KEEP(*(___ksymtab+device_rename)) \
KEEP(*(___ksymtab+device_schedule_callback_owner)) \
KEEP(*(___ksymtab+device_unregister)) \
KEEP(*(___ksymtab+devm_free_irq)) \
KEEP(*(___ksymtab+devm_ioremap)) \
KEEP(*(___ksymtab+devm_ioremap_nocache)) \
KEEP(*(___ksymtab+devm_ioremap_prot)) \
KEEP(*(___ksymtab+devm_ioremap_resource)) \
KEEP(*(___ksymtab+devm_iounmap)) \
KEEP(*(___ksymtab+devm_kfree)) \
KEEP(*(___ksymtab+devm_kzalloc)) \
KEEP(*(___ksymtab+devm_request_and_ioremap)) \
KEEP(*(___ksymtab+devm_request_threaded_irq)) \
KEEP(*(___ksymtab+devres_close_group)) \
KEEP(*(___ksymtab+devres_open_group)) \
KEEP(*(___ksymtab+devres_release_group)) \
KEEP(*(___ksymtab+devres_remove_group)) \
KEEP(*(___ksymtab+dirty_writeback_interval)) \
KEEP(*(___ksymtab+disable_irq_nosync)) \
KEEP(*(___ksymtab+disallow_signal)) \
KEEP(*(___ksymtab+dma_async_device_register)) \
KEEP(*(___ksymtab+dma_async_device_unregister)) \
KEEP(*(___ksymtab+dma_async_memcpy_buf_to_buf)) \
KEEP(*(___ksymtab+dma_async_memcpy_buf_to_pg)) \
KEEP(*(___ksymtab+dma_async_memcpy_pg_to_pg)) \
KEEP(*(___ksymtab+dma_pool_alloc)) \
KEEP(*(___ksymtab+dma_pool_create)) \
KEEP(*(___ksymtab+dma_pool_destroy)) \
KEEP(*(___ksymtab+dma_pool_free)) \
KEEP(*(___ksymtab+dma_set_mask)) \
KEEP(*(___ksymtab+dmam_alloc_coherent)) \
KEEP(*(___ksymtab+do_gettimeofday)) \
KEEP(*(___ksymtab+do_sync_read)) \
KEEP(*(___ksymtab+do_sync_write)) \
KEEP(*(___ksymtab+down)) \
KEEP(*(___ksymtab+down_interruptible)) \
KEEP(*(___ksymtab+down_killable)) \
KEEP(*(___ksymtab+down_read)) \
KEEP(*(___ksymtab+down_read_trylock)) \
KEEP(*(___ksymtab+down_timeout)) \
KEEP(*(___ksymtab+down_trylock)) \
KEEP(*(___ksymtab+down_write)) \
KEEP(*(___ksymtab+down_write_trylock)) \
KEEP(*(___ksymtab+downgrade_write)) \
KEEP(*(___ksymtab+dput)) \
KEEP(*(___ksymtab+dql_completed)) \
KEEP(*(___ksymtab+driver_attach)) \
KEEP(*(___ksymtab+driver_create_file)) \
KEEP(*(___ksymtab+driver_register)) \
KEEP(*(___ksymtab+driver_remove_file)) \
KEEP(*(___ksymtab+driver_unregister)) \
KEEP(*(___ksymtab+drop_nlink)) \
KEEP(*(___ksymtab+drop_super)) \
KEEP(*(___ksymtab+dst_alloc)) \
KEEP(*(___ksymtab+dst_cow_metrics_generic)) \
KEEP(*(___ksymtab+dst_destroy)) \
KEEP(*(___ksymtab+dst_discard)) \
KEEP(*(___ksymtab+dst_release)) \
KEEP(*(___ksymtab+dump_stack)) \
KEEP(*(___ksymtab+elv_dispatch_sort)) \
KEEP(*(___ksymtab+enable_irq)) \
KEEP(*(___ksymtab+end_page_writeback)) \
KEEP(*(___ksymtab+eth_commit_mac_addr_change)) \
KEEP(*(___ksymtab+eth_header_cache_update)) \
KEEP(*(___ksymtab+eth_mac_addr)) \
KEEP(*(___ksymtab+eth_prepare_mac_addr_change)) \
KEEP(*(___ksymtab+eth_type_trans)) \
KEEP(*(___ksymtab+eth_validate_addr)) \
KEEP(*(___ksymtab+ether_setup)) \
KEEP(*(___ksymtab+ethtool_op_get_link)) \
KEEP(*(___ksymtab+ethtool_op_get_ts_info)) \
KEEP(*(___ksymtab+eventfd_ctx_remove_wait_queue)) \
KEEP(*(___ksymtab+ewma_add)) \
KEEP(*(___ksymtab+ewma_init)) \
KEEP(*(___ksymtab+execute_in_process_context)) \
KEEP(*(___ksymtab+fasync_helper)) \
KEEP(*(___ksymtab+fib_default_rule_add)) \
KEEP(*(___ksymtab+fib_rules_lookup)) \
KEEP(*(___ksymtab+fib_rules_register)) \
KEEP(*(___ksymtab+fib_rules_unregister)) \
KEEP(*(___ksymtab+fib_table_lookup)) \
KEEP(*(___ksymtab+file_ns_capable)) \
KEEP(*(___ksymtab+file_update_time)) \
KEEP(*(___ksymtab+filemap_fault)) \
KEEP(*(___ksymtab+filemap_fdatawait)) \
KEEP(*(___ksymtab+filemap_fdatawait_range)) \
KEEP(*(___ksymtab+filemap_fdatawrite)) \
KEEP(*(___ksymtab+filemap_fdatawrite_range)) \
KEEP(*(___ksymtab+filemap_write_and_wait)) \
KEEP(*(___ksymtab+filemap_write_and_wait_range)) \
KEEP(*(___ksymtab+find_get_pages_tag)) \
KEEP(*(___ksymtab+find_next_bit)) \
KEEP(*(___ksymtab+find_next_bit_le)) \
KEEP(*(___ksymtab+find_next_zero_bit)) \
KEEP(*(___ksymtab+find_next_zero_bit_le)) \
KEEP(*(___ksymtab+find_or_create_page)) \
KEEP(*(___ksymtab+finish_no_open)) \
KEEP(*(___ksymtab+finish_open)) \
KEEP(*(___ksymtab+finish_wait)) \
KEEP(*(___ksymtab+flow_cache_lookup)) \
KEEP(*(___ksymtab+flush_dcache_page)) \
KEEP(*(___ksymtab+flush_delayed_work)) \
KEEP(*(___ksymtab+flush_scheduled_work)) \
KEEP(*(___ksymtab+flush_signals)) \
KEEP(*(___ksymtab+flush_work)) \
KEEP(*(___ksymtab+flush_workqueue)) \
KEEP(*(___ksymtab+follow_down)) \
KEEP(*(___ksymtab+follow_down_one)) \
KEEP(*(___ksymtab+follow_up)) \
KEEP(*(___ksymtab+force_sig)) \
KEEP(*(___ksymtab+fput)) \
KEEP(*(___ksymtab+free_irq)) \
KEEP(*(___ksymtab+free_netdev)) \
KEEP(*(___ksymtab+free_pages)) \
KEEP(*(___ksymtab+free_pages_exact)) \
KEEP(*(___ksymtab+free_percpu)) \
KEEP(*(___ksymtab+freeze_super)) \
KEEP(*(___ksymtab+fs_overflowgid)) \
KEEP(*(___ksymtab+fs_overflowuid)) \
KEEP(*(___ksymtab+fsl_get_sys_freq)) \
KEEP(*(___ksymtab+fsl_upm_find)) \
KEEP(*(___ksymtab+fsl_upm_run_pattern)) \
KEEP(*(___ksymtab+full_name_hash)) \
KEEP(*(___ksymtab+generic_delete_inode)) \
KEEP(*(___ksymtab+generic_fh_to_dentry)) \
KEEP(*(___ksymtab+generic_fh_to_parent)) \
KEEP(*(___ksymtab+generic_file_aio_read)) \
KEEP(*(___ksymtab+generic_file_aio_write)) \
KEEP(*(___ksymtab+generic_file_llseek)) \
KEEP(*(___ksymtab+generic_file_llseek_size)) \
KEEP(*(___ksymtab+generic_file_mmap)) \
KEEP(*(___ksymtab+generic_file_open)) \
KEEP(*(___ksymtab+generic_file_readonly_mmap)) \
KEEP(*(___ksymtab+generic_file_remap_pages)) \
KEEP(*(___ksymtab+generic_file_splice_read)) \
KEEP(*(___ksymtab+generic_fillattr)) \
KEEP(*(___ksymtab+generic_permission)) \
KEEP(*(___ksymtab+generic_read_dir)) \
KEEP(*(___ksymtab+generic_readlink)) \
KEEP(*(___ksymtab+generic_setlease)) \
KEEP(*(___ksymtab+generic_shutdown_super)) \
KEEP(*(___ksymtab+generic_write_checks)) \
KEEP(*(___ksymtab+generic_write_sync)) \
KEEP(*(___ksymtab+generic_writepages)) \
KEEP(*(___ksymtab+genl_lock)) \
KEEP(*(___ksymtab+genl_register_mc_group)) \
KEEP(*(___ksymtab+genl_unlock)) \
KEEP(*(___ksymtab+genl_unregister_family)) \
KEEP(*(___ksymtab+genl_unregister_mc_group)) \
KEEP(*(___ksymtab+genlmsg_multicast_allns)) \
KEEP(*(___ksymtab+genlmsg_put)) \
KEEP(*(___ksymtab+genphy_update_link)) \
KEEP(*(___ksymtab+get_device)) \
KEEP(*(___ksymtab+get_immrbase)) \
KEEP(*(___ksymtab+get_jiffies_64)) \
KEEP(*(___ksymtab+get_net_ns_by_pid)) \
KEEP(*(___ksymtab+get_next_ino)) \
KEEP(*(___ksymtab+get_random_bytes)) \
KEEP(*(___ksymtab+get_random_bytes_arch)) \
KEEP(*(___ksymtab+get_seconds)) \
KEEP(*(___ksymtab+get_super)) \
KEEP(*(___ksymtab+get_super_thawed)) \
KEEP(*(___ksymtab+get_task_pid)) \
KEEP(*(___ksymtab+giveup_fpu)) \
KEEP(*(___ksymtab+gnet_stats_copy_app)) \
KEEP(*(___ksymtab+gnet_stats_copy_queue)) \
KEEP(*(___ksymtab+grab_cache_page_write_begin)) \
KEEP(*(___ksymtab+groups_alloc)) \
KEEP(*(___ksymtab+groups_free)) \
KEEP(*(___ksymtab+hex_asc_upper)) \
KEEP(*(___ksymtab+hex_to_bin)) \
KEEP(*(___ksymtab+high_memory)) \
KEEP(*(___ksymtab+hrtimer_cancel)) \
KEEP(*(___ksymtab+hrtimer_init)) \
KEEP(*(___ksymtab+hrtimer_init_sleeper)) \
KEEP(*(___ksymtab+hrtimer_start_range_ns)) \
KEEP(*(___ksymtab+hwmon_device_register)) \
KEEP(*(___ksymtab+hwmon_device_unregister)) \
KEEP(*(___ksymtab+hwrng_register)) \
KEEP(*(___ksymtab+hwrng_unregister)) \
KEEP(*(___ksymtab+icmp_send)) \
KEEP(*(___ksymtab+icmpv6_send)) \
KEEP(*(___ksymtab+ida_get_new_above)) \
KEEP(*(___ksymtab+ida_pre_get)) \
KEEP(*(___ksymtab+ida_remove)) \
KEEP(*(___ksymtab+idr_alloc)) \
KEEP(*(___ksymtab+idr_alloc_cyclic)) \
KEEP(*(___ksymtab+idr_destroy)) \
KEEP(*(___ksymtab+idr_find_slowpath)) \
KEEP(*(___ksymtab+idr_for_each)) \
KEEP(*(___ksymtab+idr_init)) \
KEEP(*(___ksymtab+idr_preload)) \
KEEP(*(___ksymtab+idr_remove)) \
KEEP(*(___ksymtab+iget5_locked)) \
KEEP(*(___ksymtab+iget_failed)) \
KEEP(*(___ksymtab+iget_locked)) \
KEEP(*(___ksymtab+ihold)) \
KEEP(*(___ksymtab+ilookup)) \
KEEP(*(___ksymtab+ilookup5)) \
KEEP(*(___ksymtab+ilookup5_nowait)) \
KEEP(*(___ksymtab+in4_pton)) \
KEEP(*(___ksymtab+in6_dev_finish_destroy)) \
KEEP(*(___ksymtab+in6_pton)) \
KEEP(*(___ksymtab+in6addr_any)) \
KEEP(*(___ksymtab+in6addr_interfacelocal_allnodes)) \
KEEP(*(___ksymtab+in6addr_interfacelocal_allrouters)) \
KEEP(*(___ksymtab+in6addr_linklocal_allnodes)) \
KEEP(*(___ksymtab+in6addr_linklocal_allrouters)) \
KEEP(*(___ksymtab+in6addr_loopback)) \
KEEP(*(___ksymtab+in6addr_sitelocal_allrouters)) \
KEEP(*(___ksymtab+in_aton)) \
KEEP(*(___ksymtab+in_egroup_p)) \
KEEP(*(___ksymtab+in_group_p)) \
KEEP(*(___ksymtab+inc_nlink)) \
KEEP(*(___ksymtab+inet6_add_protocol)) \
KEEP(*(___ksymtab+inet6_del_protocol)) \
KEEP(*(___ksymtab+inet6_hash_connect)) \
KEEP(*(___ksymtab+inet6_lookup)) \
KEEP(*(___ksymtab+inet6_lookup_listener)) \
KEEP(*(___ksymtab+inet6_protos)) \
KEEP(*(___ksymtab+inet6_register_icmp_sender)) \
KEEP(*(___ksymtab+inet6_unregister_icmp_sender)) \
KEEP(*(___ksymtab+inet6addr_notifier_call_chain)) \
KEEP(*(___ksymtab+inet_accept)) \
KEEP(*(___ksymtab+inet_add_protocol)) \
KEEP(*(___ksymtab+inet_addr_type)) \
KEEP(*(___ksymtab+inet_bind)) \
KEEP(*(___ksymtab+inet_confirm_addr)) \
KEEP(*(___ksymtab+inet_csk_accept)) \
KEEP(*(___ksymtab+inet_csk_delete_keepalive_timer)) \
KEEP(*(___ksymtab+inet_csk_get_port)) \
KEEP(*(___ksymtab+inet_csk_prepare_forced_close)) \
KEEP(*(___ksymtab+inet_csk_reset_keepalive_timer)) \
KEEP(*(___ksymtab+inet_csk_update_pmtu)) \
KEEP(*(___ksymtab+inet_ctl_sock_create)) \
KEEP(*(___ksymtab+inet_del_protocol)) \
KEEP(*(___ksymtab+inet_dgram_connect)) \
KEEP(*(___ksymtab+inet_dgram_ops)) \
KEEP(*(___ksymtab+inet_ehash_secret)) \
KEEP(*(___ksymtab+inet_frag_destroy)) \
KEEP(*(___ksymtab+inet_frag_evictor)) \
KEEP(*(___ksymtab+inet_frag_find)) \
KEEP(*(___ksymtab+inet_frag_kill)) \
KEEP(*(___ksymtab+inet_frag_maybe_warn_overflow)) \
KEEP(*(___ksymtab+inet_frags_exit_net)) \
KEEP(*(___ksymtab+inet_frags_fini)) \
KEEP(*(___ksymtab+inet_frags_init)) \
KEEP(*(___ksymtab+inet_frags_init_net)) \
KEEP(*(___ksymtab+inet_getpeer)) \
KEEP(*(___ksymtab+inet_hash)) \
KEEP(*(___ksymtab+inet_hash_connect)) \
KEEP(*(___ksymtab+inet_hashinfo_init)) \
KEEP(*(___ksymtab+inet_ioctl)) \
KEEP(*(___ksymtab+inet_listen)) \
KEEP(*(___ksymtab+inet_peer_base_init)) \
KEEP(*(___ksymtab+inet_peer_xrlim_allow)) \
KEEP(*(___ksymtab+inet_putpeer)) \
KEEP(*(___ksymtab+inet_recvmsg)) \
KEEP(*(___ksymtab+inet_register_protosw)) \
KEEP(*(___ksymtab+inet_release)) \
KEEP(*(___ksymtab+inet_sendmsg)) \
KEEP(*(___ksymtab+inet_sendpage)) \
KEEP(*(___ksymtab+inet_shutdown)) \
KEEP(*(___ksymtab+inet_sk_rebuild_header)) \
KEEP(*(___ksymtab+inet_sk_rx_dst_set)) \
KEEP(*(___ksymtab+inet_sock_destruct)) \
KEEP(*(___ksymtab+inet_stream_connect)) \
KEEP(*(___ksymtab+inet_stream_ops)) \
KEEP(*(___ksymtab+inet_twsk_alloc)) \
KEEP(*(___ksymtab+inet_twsk_deschedule)) \
KEEP(*(___ksymtab+inet_twsk_purge)) \
KEEP(*(___ksymtab+inet_twsk_put)) \
KEEP(*(___ksymtab+inet_twsk_schedule)) \
KEEP(*(___ksymtab+inet_unhash)) \
KEEP(*(___ksymtab+inet_unregister_protosw)) \
KEEP(*(___ksymtab+inetpeer_invalidate_tree)) \
KEEP(*(___ksymtab+init_net)) \
KEEP(*(___ksymtab+init_pid_ns)) \
KEEP(*(___ksymtab+init_special_inode)) \
KEEP(*(___ksymtab+init_timer_key)) \
KEEP(*(___ksymtab+init_user_ns)) \
KEEP(*(___ksymtab+init_uts_ns)) \
KEEP(*(___ksymtab+inode_capable)) \
KEEP(*(___ksymtab+inode_change_ok)) \
KEEP(*(___ksymtab+inode_init_once)) \
KEEP(*(___ksymtab+inode_init_owner)) \
KEEP(*(___ksymtab+inode_owner_or_capable)) \
KEEP(*(___ksymtab+insert_inode_locked)) \
KEEP(*(___ksymtab+insert_inode_locked4)) \
KEEP(*(___ksymtab+interruptible_sleep_on)) \
KEEP(*(___ksymtab+interruptible_sleep_on_timeout)) \
KEEP(*(___ksymtab+invalidate_bdev)) \
KEEP(*(___ksymtab+invalidate_inode_pages2)) \
KEEP(*(___ksymtab+invalidate_inode_pages2_range)) \
KEEP(*(___ksymtab+io_schedule)) \
KEEP(*(___ksymtab+ioc_lookup_icq)) \
KEEP(*(___ksymtab+iomem_resource)) \
KEEP(*(___ksymtab+ioport_resource)) \
KEEP(*(___ksymtab+ioread32)) \
KEEP(*(___ksymtab+ioread32_rep)) \
KEEP(*(___ksymtab+ioread32be)) \
KEEP(*(___ksymtab+ioremap)) \
KEEP(*(___ksymtab+ioremap_bot)) \
KEEP(*(___ksymtab+ioremap_prot)) \
KEEP(*(___ksymtab+ioremap_wc)) \
KEEP(*(___ksymtab+iounmap)) \
KEEP(*(___ksymtab+iov_iter_advance)) \
KEEP(*(___ksymtab+iov_iter_copy_from_user)) \
KEEP(*(___ksymtab+iov_iter_copy_from_user_atomic)) \
KEEP(*(___ksymtab+iov_shorten)) \
KEEP(*(___ksymtab+iowrite32)) \
KEEP(*(___ksymtab+iowrite32_rep)) \
KEEP(*(___ksymtab+iowrite32be)) \
KEEP(*(___ksymtab+ip4_datagram_connect)) \
KEEP(*(___ksymtab+ip6_dst_hoplimit)) \
KEEP(*(___ksymtab+ip6_find_1stfragopt)) \
KEEP(*(___ksymtab+ip6_local_out)) \
KEEP(*(___ksymtab+ip_cmsg_recv)) \
KEEP(*(___ksymtab+ip_frag_ecn_table)) \
KEEP(*(___ksymtab+ip_generic_getfrag)) \
KEEP(*(___ksymtab+ip_getsockopt)) \
KEEP(*(___ksymtab+ip_local_out)) \
KEEP(*(___ksymtab+ip_mc_dec_group)) \
KEEP(*(___ksymtab+ip_mc_inc_group)) \
KEEP(*(___ksymtab+ip_mc_join_group)) \
KEEP(*(___ksymtab+ip_mc_leave_group)) \
KEEP(*(___ksymtab+ip_queue_xmit)) \
KEEP(*(___ksymtab+ip_route_input_noref)) \
KEEP(*(___ksymtab+ip_route_output_flow)) \
KEEP(*(___ksymtab+ip_setsockopt)) \
KEEP(*(___ksymtab+iptunnel_pull_header)) \
KEEP(*(___ksymtab+iptunnel_xmit)) \
KEEP(*(___ksymtab+iput)) \
KEEP(*(___ksymtab+ipv4_config)) \
KEEP(*(___ksymtab+ipv4_redirect)) \
KEEP(*(___ksymtab+ipv4_sk_update_pmtu)) \
KEEP(*(___ksymtab+ipv4_specific)) \
KEEP(*(___ksymtab+ipv4_update_pmtu)) \
KEEP(*(___ksymtab+ipv6_ext_hdr)) \
KEEP(*(___ksymtab+ipv6_hash_secret)) \
KEEP(*(___ksymtab+ipv6_select_ident)) \
KEEP(*(___ksymtab+ipv6_skip_exthdr)) \
KEEP(*(___ksymtab+ipv6_stub)) \
KEEP(*(___ksymtab+irq_dispose_mapping)) \
KEEP(*(___ksymtab+irq_of_parse_and_map)) \
KEEP(*(___ksymtab+is_bad_inode)) \
KEEP(*(___ksymtab+iterate_supers_type)) \
KEEP(*(___ksymtab+iunique)) \
KEEP(*(___ksymtab+jiffies)) \
KEEP(*(___ksymtab+jiffies_64)) \
KEEP(*(___ksymtab+jiffies_64_to_clock_t)) \
KEEP(*(___ksymtab+jiffies_to_clock_t)) \
KEEP(*(___ksymtab+jiffies_to_msecs)) \
KEEP(*(___ksymtab+jiffies_to_timespec)) \
KEEP(*(___ksymtab+jiffies_to_timeval)) \
KEEP(*(___ksymtab+jiffies_to_usecs)) \
KEEP(*(___ksymtab+kallsyms_lookup_name)) \
KEEP(*(___ksymtab+kasprintf)) \
KEEP(*(___ksymtab+kblockd_schedule_delayed_work)) \
KEEP(*(___ksymtab+kblockd_schedule_work)) \
KEEP(*(___ksymtab+kernel_bind)) \
KEEP(*(___ksymtab+kernel_connect)) \
KEEP(*(___ksymtab+kernel_recvmsg)) \
KEEP(*(___ksymtab+kernel_sendmsg)) \
KEEP(*(___ksymtab+kernel_setsockopt)) \
KEEP(*(___ksymtab+kernel_sock_shutdown)) \
KEEP(*(___ksymtab+kfree)) \
KEEP(*(___ksymtab+kfree_skb)) \
KEEP(*(___ksymtab+kfree_skb_list)) \
KEEP(*(___ksymtab+kfree_skb_partial)) \
KEEP(*(___ksymtab+kill_anon_super)) \
KEEP(*(___ksymtab+kill_block_super)) \
KEEP(*(___ksymtab+kill_fasync)) \
KEEP(*(___ksymtab+kill_litter_super)) \
KEEP(*(___ksymtab+kill_mtd_super)) \
KEEP(*(___ksymtab+kill_pid_info_as_cred)) \
KEEP(*(___ksymtab+kmalloc_caches)) \
KEEP(*(___ksymtab+kmem_cache_alloc)) \
KEEP(*(___ksymtab+kmem_cache_create)) \
KEEP(*(___ksymtab+kmem_cache_destroy)) \
KEEP(*(___ksymtab+kmem_cache_free)) \
KEEP(*(___ksymtab+kmemdup)) \
KEEP(*(___ksymtab+kobject_uevent)) \
KEEP(*(___ksymtab+kobject_uevent_env)) \
KEEP(*(___ksymtab+kstrdup)) \
KEEP(*(___ksymtab+kstrndup)) \
KEEP(*(___ksymtab+kstrtou8)) \
KEEP(*(___ksymtab+kstrtou8_from_user)) \
KEEP(*(___ksymtab+kstrtouint)) \
KEEP(*(___ksymtab+kstrtouint_from_user)) \
KEEP(*(___ksymtab+kstrtoul_from_user)) \
KEEP(*(___ksymtab+kstrtoull)) \
KEEP(*(___ksymtab+kstrtoull_from_user)) \
KEEP(*(___ksymtab+kthread_bind)) \
KEEP(*(___ksymtab+kthread_create_on_node)) \
KEEP(*(___ksymtab+kthread_should_stop)) \
KEEP(*(___ksymtab+kthread_stop)) \
KEEP(*(___ksymtab+ktime_get)) \
KEEP(*(___ksymtab+ktime_get_boottime)) \
KEEP(*(___ksymtab+ktime_get_clocktai)) \
KEEP(*(___ksymtab+ktime_get_monotonic_offset)) \
KEEP(*(___ksymtab+ktime_get_real)) \
KEEP(*(___ksymtab+ktime_get_ts)) \
KEEP(*(___ksymtab+kvasprintf)) \
KEEP(*(___ksymtab+kzfree)) \
KEEP(*(___ksymtab+led_blink_set)) \
KEEP(*(___ksymtab+led_blink_set_oneshot)) \
KEEP(*(___ksymtab+led_classdev_register)) \
KEEP(*(___ksymtab+led_classdev_unregister)) \
KEEP(*(___ksymtab+led_set_brightness)) \
KEEP(*(___ksymtab+led_trigger_blink_oneshot)) \
KEEP(*(___ksymtab+led_trigger_event)) \
KEEP(*(___ksymtab+led_trigger_register)) \
KEEP(*(___ksymtab+led_trigger_register_simple)) \
KEEP(*(___ksymtab+led_trigger_unregister)) \
KEEP(*(___ksymtab+led_trigger_unregister_simple)) \
KEEP(*(___ksymtab+list_sort)) \
KEEP(*(___ksymtab+load_nls)) \
KEEP(*(___ksymtab+load_nls_default)) \
KEEP(*(___ksymtab+local_bh_disable)) \
KEEP(*(___ksymtab+local_bh_enable)) \
KEEP(*(___ksymtab+local_bh_enable_ip)) \
KEEP(*(___ksymtab+lock_sock_fast)) \
KEEP(*(___ksymtab+lock_sock_nested)) \
KEEP(*(___ksymtab+lockref_get)) \
KEEP(*(___ksymtab+lockref_get_not_dead)) \
KEEP(*(___ksymtab+lockref_get_not_zero)) \
KEEP(*(___ksymtab+lockref_get_or_lock)) \
KEEP(*(___ksymtab+lookup_bdev)) \
KEEP(*(___ksymtab+lookup_one_len)) \
KEEP(*(___ksymtab+mac_pton)) \
KEEP(*(___ksymtab+macvlan_common_setup)) \
KEEP(*(___ksymtab+make_bad_inode)) \
KEEP(*(___ksymtab+match_int)) \
KEEP(*(___ksymtab+match_octal)) \
KEEP(*(___ksymtab+match_strdup)) \
KEEP(*(___ksymtab+match_strlcpy)) \
KEEP(*(___ksymtab+match_token)) \
KEEP(*(___ksymtab+mdiobus_register)) \
KEEP(*(___ksymtab+mdiobus_unregister)) \
KEEP(*(___ksymtab+mem_map)) \
KEEP(*(___ksymtab+memchr)) \
KEEP(*(___ksymtab+memchr_inv)) \
KEEP(*(___ksymtab+memcmp)) \
KEEP(*(___ksymtab+memcpy)) \
KEEP(*(___ksymtab+memcpy_fromiovec)) \
KEEP(*(___ksymtab+memcpy_fromiovecend)) \
KEEP(*(___ksymtab+memcpy_toiovec)) \
KEEP(*(___ksymtab+memcpy_toiovecend)) \
KEEP(*(___ksymtab+memdup_user)) \
KEEP(*(___ksymtab+memmove)) \
KEEP(*(___ksymtab+mempool_alloc)) \
KEEP(*(___ksymtab+mempool_alloc_pages)) \
KEEP(*(___ksymtab+mempool_alloc_slab)) \
KEEP(*(___ksymtab+mempool_create)) \
KEEP(*(___ksymtab+mempool_create_node)) \
KEEP(*(___ksymtab+mempool_destroy)) \
KEEP(*(___ksymtab+mempool_free)) \
KEEP(*(___ksymtab+mempool_free_pages)) \
KEEP(*(___ksymtab+mempool_free_slab)) \
KEEP(*(___ksymtab+mempool_kfree)) \
KEEP(*(___ksymtab+mempool_resize)) \
KEEP(*(___ksymtab+memset)) \
KEEP(*(___ksymtab+mii_check_gmii_support)) \
KEEP(*(___ksymtab+mii_ethtool_gset)) \
KEEP(*(___ksymtab+mii_ethtool_sset)) \
KEEP(*(___ksymtab+mii_link_ok)) \
KEEP(*(___ksymtab+mii_nway_restart)) \
KEEP(*(___ksymtab+misc_deregister)) \
KEEP(*(___ksymtab+misc_register)) \
KEEP(*(___ksymtab+mod_timer)) \
KEEP(*(___ksymtab+mod_timer_pending)) \
KEEP(*(___ksymtab+mod_timer_pinned)) \
KEEP(*(___ksymtab+module_put)) \
KEEP(*(___ksymtab+module_refcount)) \
KEEP(*(___ksymtab+mount_mtd)) \
KEEP(*(___ksymtab+mount_single)) \
KEEP(*(___ksymtab+msecs_to_jiffies)) \
KEEP(*(___ksymtab+msleep)) \
KEEP(*(___ksymtab+msleep_interruptible)) \
KEEP(*(___ksymtab+mtd_block_isbad)) \
KEEP(*(___ksymtab+mtd_block_markbad)) \
KEEP(*(___ksymtab+mtd_device_unregister)) \
KEEP(*(___ksymtab+mtd_erase)) \
KEEP(*(___ksymtab+mtd_erase_callback)) \
KEEP(*(___ksymtab+mtd_get_device_size)) \
KEEP(*(___ksymtab+mtd_kmalloc_up_to)) \
KEEP(*(___ksymtab+mtd_panic_write)) \
KEEP(*(___ksymtab+mtd_point)) \
KEEP(*(___ksymtab+mtd_read)) \
KEEP(*(___ksymtab+mtd_read_fact_prot_reg)) \
KEEP(*(___ksymtab+mtd_read_oob)) \
KEEP(*(___ksymtab+mtd_read_user_prot_reg)) \
KEEP(*(___ksymtab+mtd_unpoint)) \
KEEP(*(___ksymtab+mtd_write)) \
KEEP(*(___ksymtab+mtd_write_user_prot_reg)) \
KEEP(*(___ksymtab+mtd_writev)) \
KEEP(*(___ksymtab+mutex_lock)) \
KEEP(*(___ksymtab+mutex_lock_interruptible)) \
KEEP(*(___ksymtab+mutex_lock_killable)) \
KEEP(*(___ksymtab+mutex_trylock)) \
KEEP(*(___ksymtab+mutex_unlock)) \
KEEP(*(___ksymtab+n_tty_ioctl_helper)) \
KEEP(*(___ksymtab+napi_complete)) \
KEEP(*(___ksymtab+napi_gro_receive)) \
KEEP(*(___ksymtab+neigh_app_ns)) \
KEEP(*(___ksymtab+neigh_changeaddr)) \
KEEP(*(___ksymtab+neigh_connected_output)) \
KEEP(*(___ksymtab+neigh_destroy)) \
KEEP(*(___ksymtab+neigh_direct_output)) \
KEEP(*(___ksymtab+neigh_ifdown)) \
KEEP(*(___ksymtab+neigh_lookup)) \
KEEP(*(___ksymtab+neigh_lookup_nodev)) \
KEEP(*(___ksymtab+neigh_parms_alloc)) \
KEEP(*(___ksymtab+neigh_parms_release)) \
KEEP(*(___ksymtab+neigh_rand_reach_time)) \
KEEP(*(___ksymtab+neigh_resolve_output)) \
KEEP(*(___ksymtab+neigh_sysctl_register)) \
KEEP(*(___ksymtab+neigh_sysctl_unregister)) \
KEEP(*(___ksymtab+neigh_table_clear)) \
KEEP(*(___ksymtab+neigh_table_init)) \
KEEP(*(___ksymtab+neigh_update)) \
KEEP(*(___ksymtab+net_dma_find_channel)) \
KEEP(*(___ksymtab+net_msg_warn)) \
KEEP(*(___ksymtab+net_ns_type_operations)) \
KEEP(*(___ksymtab+net_ratelimit)) \
KEEP(*(___ksymtab+netdev_boot_setup_check)) \
KEEP(*(___ksymtab+netdev_change_features)) \
KEEP(*(___ksymtab+netdev_class_create_file)) \
KEEP(*(___ksymtab+netdev_class_remove_file)) \
KEEP(*(___ksymtab+netdev_err)) \
KEEP(*(___ksymtab+netdev_has_any_upper_dev)) \
KEEP(*(___ksymtab+netdev_has_upper_dev)) \
KEEP(*(___ksymtab+netdev_increment_features)) \
KEEP(*(___ksymtab+netdev_info)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_get)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_get_rcu)) \
KEEP(*(___ksymtab+netdev_master_upper_dev_link)) \
KEEP(*(___ksymtab+netdev_max_backlog)) \
KEEP(*(___ksymtab+netdev_notice)) \
KEEP(*(___ksymtab+netdev_printk)) \
KEEP(*(___ksymtab+netdev_rx_handler_register)) \
KEEP(*(___ksymtab+netdev_rx_handler_unregister)) \
KEEP(*(___ksymtab+netdev_set_default_ethtool_ops)) \
KEEP(*(___ksymtab+netdev_state_change)) \
KEEP(*(___ksymtab+netdev_update_features)) \
KEEP(*(___ksymtab+netdev_upper_dev_link)) \
KEEP(*(___ksymtab+netdev_upper_dev_unlink)) \
KEEP(*(___ksymtab+netdev_upper_get_next_dev_rcu)) \
KEEP(*(___ksymtab+netdev_warn)) \
KEEP(*(___ksymtab+netif_carrier_off)) \
KEEP(*(___ksymtab+netif_carrier_on)) \
KEEP(*(___ksymtab+netif_device_attach)) \
KEEP(*(___ksymtab+netif_device_detach)) \
KEEP(*(___ksymtab+netif_get_num_default_rss_queues)) \
KEEP(*(___ksymtab+netif_napi_add)) \
KEEP(*(___ksymtab+netif_napi_del)) \
KEEP(*(___ksymtab+netif_receive_skb)) \
KEEP(*(___ksymtab+netif_rx)) \
KEEP(*(___ksymtab+netif_rx_ni)) \
KEEP(*(___ksymtab+netlink_broadcast)) \
KEEP(*(___ksymtab+netlink_broadcast_filtered)) \
KEEP(*(___ksymtab+netlink_kernel_release)) \
KEEP(*(___ksymtab+netlink_register_notifier)) \
KEEP(*(___ksymtab+netlink_unicast)) \
KEEP(*(___ksymtab+netlink_unregister_notifier)) \
KEEP(*(___ksymtab+new_inode)) \
KEEP(*(___ksymtab+nf_afinfo)) \
KEEP(*(___ksymtab+nf_conntrack_destroy)) \
KEEP(*(___ksymtab+nf_conntrack_find_get)) \
KEEP(*(___ksymtab+nf_conntrack_helper_register)) \
KEEP(*(___ksymtab+nf_conntrack_helper_try_module_get)) \
KEEP(*(___ksymtab+nf_conntrack_helper_unregister)) \
KEEP(*(___ksymtab+nf_conntrack_register_notifier)) \
KEEP(*(___ksymtab+nf_conntrack_tuple_taken)) \
KEEP(*(___ksymtab+nf_conntrack_unregister_notifier)) \
KEEP(*(___ksymtab+nf_conntrack_untracked)) \
KEEP(*(___ksymtab+nf_ct_attach)) \
KEEP(*(___ksymtab+nf_ct_expect_alloc)) \
KEEP(*(___ksymtab+nf_ct_expect_find_get)) \
KEEP(*(___ksymtab+nf_ct_expect_init)) \
KEEP(*(___ksymtab+nf_ct_expect_put)) \
KEEP(*(___ksymtab+nf_ct_expect_related_report)) \
KEEP(*(___ksymtab+nf_ct_get_tuple)) \
KEEP(*(___ksymtab+nf_ct_get_tuplepr)) \
KEEP(*(___ksymtab+nf_ct_helper_expectfn_register)) \
KEEP(*(___ksymtab+nf_ct_helper_expectfn_unregister)) \
KEEP(*(___ksymtab+nf_ct_helper_log)) \
KEEP(*(___ksymtab+nf_ct_invert_tuple)) \
KEEP(*(___ksymtab+nf_ct_invert_tuplepr)) \
KEEP(*(___ksymtab+nf_ct_iterate_cleanup)) \
KEEP(*(___ksymtab+nf_ct_l3proto_module_put)) \
KEEP(*(___ksymtab+nf_ct_l3proto_register)) \
KEEP(*(___ksymtab+nf_ct_l3proto_try_module_get)) \
KEEP(*(___ksymtab+nf_ct_l3proto_unregister)) \
KEEP(*(___ksymtab+nf_ct_l4proto_pernet_register)) \
KEEP(*(___ksymtab+nf_ct_l4proto_pernet_unregister)) \
KEEP(*(___ksymtab+nf_ct_l4proto_register)) \
KEEP(*(___ksymtab+nf_ct_l4proto_unregister)) \
KEEP(*(___ksymtab+nf_ct_remove_expectations)) \
KEEP(*(___ksymtab+nf_ct_unexpect_related)) \
KEEP(*(___ksymtab+nf_getsockopt)) \
KEEP(*(___ksymtab+nf_hook_slow)) \
KEEP(*(___ksymtab+nf_hooks_needed)) \
KEEP(*(___ksymtab+nf_ipv6_ops)) \
KEEP(*(___ksymtab+nf_log_packet)) \
KEEP(*(___ksymtab+nf_log_register)) \
KEEP(*(___ksymtab+nf_log_set)) \
KEEP(*(___ksymtab+nf_log_unregister)) \
KEEP(*(___ksymtab+nf_log_unset)) \
KEEP(*(___ksymtab+nf_nat_follow_master)) \
KEEP(*(___ksymtab+nf_nat_l3proto_register)) \
KEEP(*(___ksymtab+nf_nat_l3proto_unregister)) \
KEEP(*(___ksymtab+nf_nat_l4proto_in_range)) \
KEEP(*(___ksymtab+nf_nat_l4proto_register)) \
KEEP(*(___ksymtab+nf_nat_l4proto_unique_tuple)) \
KEEP(*(___ksymtab+nf_nat_l4proto_unregister)) \
KEEP(*(___ksymtab+nf_nat_mangle_udp_packet)) \
KEEP(*(___ksymtab+nf_nat_setup_info)) \
KEEP(*(___ksymtab+nf_nat_used_tuple)) \
KEEP(*(___ksymtab+nf_register_afinfo)) \
KEEP(*(___ksymtab+nf_register_hooks)) \
KEEP(*(___ksymtab+nf_register_sockopt)) \
KEEP(*(___ksymtab+nf_setsockopt)) \
KEEP(*(___ksymtab+nf_unregister_afinfo)) \
KEEP(*(___ksymtab+nf_unregister_hooks)) \
KEEP(*(___ksymtab+nf_unregister_sockopt)) \
KEEP(*(___ksymtab+nfnetlink_parse_nat_setup_hook)) \
KEEP(*(___ksymtab+nfnetlink_unicast)) \
KEEP(*(___ksymtab+nla_find)) \
KEEP(*(___ksymtab+nla_memcmp)) \
KEEP(*(___ksymtab+nla_memcpy)) \
KEEP(*(___ksymtab+nla_parse)) \
KEEP(*(___ksymtab+nla_put)) \
KEEP(*(___ksymtab+nla_put_nohdr)) \
KEEP(*(___ksymtab+nla_reserve)) \
KEEP(*(___ksymtab+nla_reserve_nohdr)) \
KEEP(*(___ksymtab+nla_strcmp)) \
KEEP(*(___ksymtab+nla_strlcpy)) \
KEEP(*(___ksymtab+no_llseek)) \
KEEP(*(___ksymtab+nonseekable_open)) \
KEEP(*(___ksymtab+noop_backing_dev_info)) \
KEEP(*(___ksymtab+noop_llseek)) \
KEEP(*(___ksymtab+noop_qdisc)) \
KEEP(*(___ksymtab+ns_capable)) \
KEEP(*(___ksymtab+of_address_to_resource)) \
KEEP(*(___ksymtab+of_device_is_available)) \
KEEP(*(___ksymtab+of_device_is_compatible)) \
KEEP(*(___ksymtab+of_device_register)) \
KEEP(*(___ksymtab+of_device_unregister)) \
KEEP(*(___ksymtab+of_find_compatible_node)) \
KEEP(*(___ksymtab+of_get_property)) \
KEEP(*(___ksymtab+of_iomap)) \
KEEP(*(___ksymtab+of_match_device)) \
KEEP(*(___ksymtab+of_mdiobus_register)) \
KEEP(*(___ksymtab+of_platform_bus_probe)) \
KEEP(*(___ksymtab+of_platform_device_create)) \
KEEP(*(___ksymtab+of_property_read_string)) \
KEEP(*(___ksymtab+of_property_read_string_index)) \
KEEP(*(___ksymtab+out_of_line_wait_on_bit)) \
KEEP(*(___ksymtab+out_of_line_wait_on_bit_lock)) \
KEEP(*(___ksymtab+overflowgid)) \
KEEP(*(___ksymtab+overflowuid)) \
KEEP(*(___ksymtab+pagevec_lookup)) \
KEEP(*(___ksymtab+pagevec_lookup_tag)) \
KEEP(*(___ksymtab+panic)) \
KEEP(*(___ksymtab+panic_blink)) \
KEEP(*(___ksymtab+panic_notifier_list)) \
KEEP(*(___ksymtab+panic_timeout)) \
KEEP(*(___ksymtab+param_array_ops)) \
KEEP(*(___ksymtab+param_ops_bool)) \
KEEP(*(___ksymtab+param_ops_charp)) \
KEEP(*(___ksymtab+param_ops_int)) \
KEEP(*(___ksymtab+param_ops_string)) \
KEEP(*(___ksymtab+param_ops_uint)) \
KEEP(*(___ksymtab+param_ops_ushort)) \
KEEP(*(___ksymtab+pci_bus_read_config_byte)) \
KEEP(*(___ksymtab+pci_bus_read_config_dword)) \
KEEP(*(___ksymtab+pci_bus_read_config_word)) \
KEEP(*(___ksymtab+pci_bus_write_config_byte)) \
KEEP(*(___ksymtab+pci_bus_write_config_dword)) \
KEEP(*(___ksymtab+pci_cleanup_aer_uncorrect_error_status)) \
KEEP(*(___ksymtab+pci_dev_put)) \
KEEP(*(___ksymtab+pci_dev_run_wake)) \
KEEP(*(___ksymtab+pci_disable_device)) \
KEEP(*(___ksymtab+pci_enable_device)) \
KEEP(*(___ksymtab+pci_enable_device_io)) \
KEEP(*(___ksymtab+pci_enable_device_mem)) \
KEEP(*(___ksymtab+pci_find_capability)) \
KEEP(*(___ksymtab+pci_fixup_cardbus)) \
KEEP(*(___ksymtab+pci_fixup_device)) \
KEEP(*(___ksymtab+pci_get_device)) \
KEEP(*(___ksymtab+pci_get_slot)) \
KEEP(*(___ksymtab+pci_intx_mask_supported)) \
KEEP(*(___ksymtab+pci_ioremap_bar)) \
KEEP(*(___ksymtab+pci_iounmap)) \
KEEP(*(___ksymtab+pci_lost_interrupt)) \
KEEP(*(___ksymtab+pci_match_id)) \
KEEP(*(___ksymtab+pci_pme_capable)) \
KEEP(*(___ksymtab+pci_set_master)) \
KEEP(*(___ksymtab+pci_set_mwi)) \
KEEP(*(___ksymtab+pci_setup_cardbus)) \
KEEP(*(___ksymtab+pci_unregister_driver)) \
KEEP(*(___ksymtab+pcibios_fixup_bus)) \
KEEP(*(___ksymtab+pcie_capability_read_word)) \
KEEP(*(___ksymtab+pcie_update_link_speed)) \
KEEP(*(___ksymtab+pcim_enable_device)) \
KEEP(*(___ksymtab+pcim_iomap_regions)) \
KEEP(*(___ksymtab+pcim_iomap_regions_request_all)) \
KEEP(*(___ksymtab+pcim_iomap_table)) \
KEEP(*(___ksymtab+pcim_iounmap)) \
KEEP(*(___ksymtab+pcim_iounmap_regions)) \
KEEP(*(___ksymtab+phy_device_create)) \
KEEP(*(___ksymtab+phy_device_register)) \
KEEP(*(___ksymtab+phy_driver_register)) \
KEEP(*(___ksymtab+phy_driver_unregister)) \
KEEP(*(___ksymtab+phy_mac_interrupt)) \
KEEP(*(___ksymtab+phy_register_fixup)) \
KEEP(*(___ksymtab+phy_register_fixup_for_id)) \
KEEP(*(___ksymtab+phy_register_fixup_for_uid)) \
KEEP(*(___ksymtab+phy_scan_fixups)) \
KEEP(*(___ksymtab+phy_start_interrupts)) \
KEEP(*(___ksymtab+phy_stop_interrupts)) \
KEEP(*(___ksymtab+pid_nr_ns)) \
KEEP(*(___ksymtab+ping_bind)) \
KEEP(*(___ksymtab+ping_close)) \
KEEP(*(___ksymtab+ping_common_sendmsg)) \
KEEP(*(___ksymtab+ping_err)) \
KEEP(*(___ksymtab+ping_get_port)) \
KEEP(*(___ksymtab+ping_getfrag)) \
KEEP(*(___ksymtab+ping_hash)) \
KEEP(*(___ksymtab+ping_init_sock)) \
KEEP(*(___ksymtab+ping_proc_register)) \
KEEP(*(___ksymtab+ping_proc_unregister)) \
KEEP(*(___ksymtab+ping_queue_rcv_skb)) \
KEEP(*(___ksymtab+ping_rcv)) \
KEEP(*(___ksymtab+ping_recvmsg)) \
KEEP(*(___ksymtab+ping_seq_fops)) \
KEEP(*(___ksymtab+ping_seq_next)) \
KEEP(*(___ksymtab+ping_seq_start)) \
KEEP(*(___ksymtab+ping_seq_stop)) \
KEEP(*(___ksymtab+ping_unhash)) \
KEEP(*(___ksymtab+pingv6_ops)) \
KEEP(*(___ksymtab+platform_bus)) \
KEEP(*(___ksymtab+platform_bus_type)) \
KEEP(*(___ksymtab+platform_device_add)) \
KEEP(*(___ksymtab+platform_device_add_data)) \
KEEP(*(___ksymtab+platform_device_add_resources)) \
KEEP(*(___ksymtab+platform_device_alloc)) \
KEEP(*(___ksymtab+platform_device_del)) \
KEEP(*(___ksymtab+platform_device_put)) \
KEEP(*(___ksymtab+platform_device_register)) \
KEEP(*(___ksymtab+platform_device_register_full)) \
KEEP(*(___ksymtab+platform_device_unregister)) \
KEEP(*(___ksymtab+platform_driver_unregister)) \
KEEP(*(___ksymtab+platform_get_irq)) \
KEEP(*(___ksymtab+platform_get_irq_byname)) \
KEEP(*(___ksymtab+platform_get_resource)) \
KEEP(*(___ksymtab+platform_get_resource_byname)) \
KEEP(*(___ksymtab+pm_qos_add_notifier)) \
KEEP(*(___ksymtab+pm_qos_remove_notifier)) \
KEEP(*(___ksymtab+pm_qos_request)) \
KEEP(*(___ksymtab+pm_qos_request_active)) \
KEEP(*(___ksymtab+pm_qos_update_request)) \
KEEP(*(___ksymtab+pneigh_enqueue)) \
KEEP(*(___ksymtab+pneigh_lookup)) \
KEEP(*(___ksymtab+poll_schedule_timeout)) \
KEEP(*(___ksymtab+posix_lock_file)) \
KEEP(*(___ksymtab+posix_lock_file_wait)) \
KEEP(*(___ksymtab+posix_test_lock)) \
KEEP(*(___ksymtab+posix_unblock_lock)) \
KEEP(*(___ksymtab+ppp_dev_name)) \
KEEP(*(___ksymtab+ppp_input)) \
KEEP(*(___ksymtab+ppp_input_error)) \
KEEP(*(___ksymtab+ppp_output_wakeup)) \
KEEP(*(___ksymtab+ppp_register_net_channel)) \
KEEP(*(___ksymtab+pppox_ioctl)) \
KEEP(*(___ksymtab+pppox_unbind_sock)) \
KEEP(*(___ksymtab+prandom_seed)) \
KEEP(*(___ksymtab+prandom_u32)) \
KEEP(*(___ksymtab+prandom_u32_state)) \
KEEP(*(___ksymtab+prepare_to_wait)) \
KEEP(*(___ksymtab+prepare_to_wait_exclusive)) \
KEEP(*(___ksymtab+print_hex_dump)) \
KEEP(*(___ksymtab+print_hex_dump_bytes)) \
KEEP(*(___ksymtab+print_tuple)) \
KEEP(*(___ksymtab+printk)) \
KEEP(*(___ksymtab+printk_emit)) \
KEEP(*(___ksymtab+printk_timed_ratelimit)) \
KEEP(*(___ksymtab+proc_create_data)) \
KEEP(*(___ksymtab+proc_dointvec)) \
KEEP(*(___ksymtab+proc_dointvec_jiffies)) \
KEEP(*(___ksymtab+proc_dointvec_minmax)) \
KEEP(*(___ksymtab+proc_dointvec_ms_jiffies)) \
KEEP(*(___ksymtab+proc_dointvec_userhz_jiffies)) \
KEEP(*(___ksymtab+proc_dostring)) \
KEEP(*(___ksymtab+proc_doulongvec_ms_jiffies_minmax)) \
KEEP(*(___ksymtab+proc_mkdir)) \
KEEP(*(___ksymtab+proc_mkdir_data)) \
KEEP(*(___ksymtab+proc_mkdir_mode)) \
KEEP(*(___ksymtab+proc_remove)) \
KEEP(*(___ksymtab+proto_register)) \
KEEP(*(___ksymtab+proto_unregister)) \
KEEP(*(___ksymtab+pskb_expand_head)) \
KEEP(*(___ksymtab+put_cmsg)) \
KEEP(*(___ksymtab+put_device)) \
KEEP(*(___ksymtab+put_disk)) \
KEEP(*(___ksymtab+put_page)) \
KEEP(*(___ksymtab+put_pages_list)) \
KEEP(*(___ksymtab+put_pid)) \
KEEP(*(___ksymtab+put_pid_ns)) \
KEEP(*(___ksymtab+put_tty_driver)) \
KEEP(*(___ksymtab+qdisc_tree_decrease_qlen)) \
KEEP(*(___ksymtab+qdisc_watchdog_schedule_ns)) \
KEEP(*(___ksymtab+qe_upload_firmware)) \
KEEP(*(___ksymtab+queue_delayed_work_on)) \
KEEP(*(___ksymtab+queue_work_on)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup_slot)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup_tag)) \
KEEP(*(___ksymtab+radix_tree_gang_lookup_tag_slot)) \
KEEP(*(___ksymtab+radix_tree_lookup)) \
KEEP(*(___ksymtab+radix_tree_lookup_slot)) \
KEEP(*(___ksymtab+random_input_wait)) \
KEEP(*(___ksymtab+random_input_words)) \
KEEP(*(___ksymtab+raw_hash_sk)) \
KEEP(*(___ksymtab+raw_seq_next)) \
KEEP(*(___ksymtab+raw_seq_open)) \
KEEP(*(___ksymtab+raw_seq_start)) \
KEEP(*(___ksymtab+raw_seq_stop)) \
KEEP(*(___ksymtab+raw_unhash_sk)) \
KEEP(*(___ksymtab+rb_erase)) \
KEEP(*(___ksymtab+rb_first)) \
KEEP(*(___ksymtab+rb_first_postorder)) \
KEEP(*(___ksymtab+rb_insert_color)) \
KEEP(*(___ksymtab+rb_last)) \
KEEP(*(___ksymtab+rb_next)) \
KEEP(*(___ksymtab+rb_next_postorder)) \
KEEP(*(___ksymtab+rb_prev)) \
KEEP(*(___ksymtab+rb_replace_node)) \
KEEP(*(___ksymtab+read_cache_page_async)) \
KEEP(*(___ksymtab+read_dev_sector)) \
KEEP(*(___ksymtab+redirty_page_for_writepage)) \
KEEP(*(___ksymtab+register_blkdev)) \
KEEP(*(___ksymtab+register_chrdev_region)) \
KEEP(*(___ksymtab+register_filesystem)) \
KEEP(*(___ksymtab+register_net_sysctl)) \
KEEP(*(___ksymtab+register_netdev)) \
KEEP(*(___ksymtab+register_netdevice)) \
KEEP(*(___ksymtab+register_netdevice_notifier)) \
KEEP(*(___ksymtab+register_pernet_device)) \
KEEP(*(___ksymtab+register_pernet_subsys)) \
KEEP(*(___ksymtab+register_pppox_proto)) \
KEEP(*(___ksymtab+register_qdisc)) \
KEEP(*(___ksymtab+register_sysctl_table)) \
KEEP(*(___ksymtab+release_firmware)) \
KEEP(*(___ksymtab+release_sock)) \
KEEP(*(___ksymtab+remap_vmalloc_range)) \
KEEP(*(___ksymtab+remap_vmalloc_range_partial)) \
KEEP(*(___ksymtab+remove_proc_entry)) \
KEEP(*(___ksymtab+remove_wait_queue)) \
KEEP(*(___ksymtab+rename_lock)) \
KEEP(*(___ksymtab+request_firmware_nowait)) \
KEEP(*(___ksymtab+request_threaded_irq)) \
KEEP(*(___ksymtab+revalidate_disk)) \
KEEP(*(___ksymtab+root_device_unregister)) \
KEEP(*(___ksymtab+round_jiffies)) \
KEEP(*(___ksymtab+round_jiffies_relative)) \
KEEP(*(___ksymtab+round_jiffies_up)) \
KEEP(*(___ksymtab+round_jiffies_up_relative)) \
KEEP(*(___ksymtab+rq_flush_dcache_pages)) \
KEEP(*(___ksymtab+rt_mutex_lock)) \
KEEP(*(___ksymtab+rt_mutex_lock_interruptible)) \
KEEP(*(___ksymtab+rt_mutex_trylock)) \
KEEP(*(___ksymtab+rt_mutex_unlock)) \
KEEP(*(___ksymtab+rtmsg_ifinfo)) \
KEEP(*(___ksymtab+rtnetlink_put_metrics)) \
KEEP(*(___ksymtab+rtnl_af_register)) \
KEEP(*(___ksymtab+rtnl_af_unregister)) \
KEEP(*(___ksymtab+rtnl_is_locked)) \
KEEP(*(___ksymtab+rtnl_link_register)) \
KEEP(*(___ksymtab+rtnl_link_unregister)) \
KEEP(*(___ksymtab+rtnl_lock)) \
KEEP(*(___ksymtab+rtnl_notify)) \
KEEP(*(___ksymtab+rtnl_put_cacheinfo)) \
KEEP(*(___ksymtab+rtnl_register)) \
KEEP(*(___ksymtab+rtnl_set_sk_err)) \
KEEP(*(___ksymtab+rtnl_trylock)) \
KEEP(*(___ksymtab+rtnl_unicast)) \
KEEP(*(___ksymtab+rtnl_unlock)) \
KEEP(*(___ksymtab+rtnl_unregister_all)) \
KEEP(*(___ksymtab+rwsem_down_read_failed)) \
KEEP(*(___ksymtab+rwsem_down_write_failed)) \
KEEP(*(___ksymtab+rwsem_downgrade_wake)) \
KEEP(*(___ksymtab+sb800_prefetch)) \
KEEP(*(___ksymtab+sched_setscheduler)) \
KEEP(*(___ksymtab+schedule)) \
KEEP(*(___ksymtab+schedule_hrtimeout)) \
KEEP(*(___ksymtab+schedule_hrtimeout_range)) \
KEEP(*(___ksymtab+schedule_timeout)) \
KEEP(*(___ksymtab+schedule_timeout_interruptible)) \
KEEP(*(___ksymtab+schedule_timeout_killable)) \
KEEP(*(___ksymtab+schedule_timeout_uninterruptible)) \
KEEP(*(___ksymtab+scm_fp_dup)) \
KEEP(*(___ksymtab+scnprintf)) \
KEEP(*(___ksymtab+scsi_cmd_blk_ioctl)) \
KEEP(*(___ksymtab+scsi_command_size_tbl)) \
KEEP(*(___ksymtab+scsi_verify_blk_ioctl)) \
KEEP(*(___ksymtab+secpath_dup)) \
KEEP(*(___ksymtab+secure_tcpv6_sequence_number)) \
KEEP(*(___ksymtab+send_sig)) \
KEEP(*(___ksymtab+send_sig_info)) \
KEEP(*(___ksymtab+seq_lseek)) \
KEEP(*(___ksymtab+seq_open)) \
KEEP(*(___ksymtab+seq_open_net)) \
KEEP(*(___ksymtab+seq_open_private)) \
KEEP(*(___ksymtab+seq_printf)) \
KEEP(*(___ksymtab+seq_putc)) \
KEEP(*(___ksymtab+seq_puts)) \
KEEP(*(___ksymtab+seq_read)) \
KEEP(*(___ksymtab+seq_release)) \
KEEP(*(___ksymtab+seq_release_net)) \
KEEP(*(___ksymtab+seq_release_private)) \
KEEP(*(___ksymtab+serio_interrupt)) \
KEEP(*(___ksymtab+set_anon_super)) \
KEEP(*(___ksymtab+set_current_groups)) \
KEEP(*(___ksymtab+set_disk_ro)) \
KEEP(*(___ksymtab+set_groups)) \
KEEP(*(___ksymtab+set_nlink)) \
KEEP(*(___ksymtab+set_page_dirty)) \
KEEP(*(___ksymtab+set_page_dirty_lock)) \
KEEP(*(___ksymtab+set_user_nice)) \
KEEP(*(___ksymtab+setattr_copy)) \
KEEP(*(___ksymtab+setup_arg_pages)) \
KEEP(*(___ksymtab+setup_irq)) \
KEEP(*(___ksymtab+setup_new_exec)) \
KEEP(*(___ksymtab+sg_copy_to_buffer)) \
KEEP(*(___ksymtab+sg_init_one)) \
KEEP(*(___ksymtab+sg_init_table)) \
KEEP(*(___ksymtab+sg_last)) \
KEEP(*(___ksymtab+sg_next)) \
KEEP(*(___ksymtab+sg_pcopy_to_buffer)) \
KEEP(*(___ksymtab+sg_scsi_ioctl)) \
KEEP(*(___ksymtab+sget)) \
KEEP(*(___ksymtab+sha_transform)) \
KEEP(*(___ksymtab+shash_ahash_finup)) \
KEEP(*(___ksymtab+shash_ahash_update)) \
KEEP(*(___ksymtab+shash_free_instance)) \
KEEP(*(___ksymtab+shash_register_instance)) \
KEEP(*(___ksymtab+shmem_file_setup)) \
KEEP(*(___ksymtab+simple_dir_inode_operations)) \
KEEP(*(___ksymtab+simple_dir_operations)) \
KEEP(*(___ksymtab+simple_fill_super)) \
KEEP(*(___ksymtab+simple_lookup)) \
KEEP(*(___ksymtab+simple_open)) \
KEEP(*(___ksymtab+simple_pin_fs)) \
KEEP(*(___ksymtab+simple_read_from_buffer)) \
KEEP(*(___ksymtab+simple_release_fs)) \
KEEP(*(___ksymtab+simple_statfs)) \
KEEP(*(___ksymtab+simple_strtoul)) \
KEEP(*(___ksymtab+simple_strtoull)) \
KEEP(*(___ksymtab+single_open)) \
KEEP(*(___ksymtab+single_open_net)) \
KEEP(*(___ksymtab+single_open_size)) \
KEEP(*(___ksymtab+single_release)) \
KEEP(*(___ksymtab+single_release_net)) \
KEEP(*(___ksymtab+sk_alloc)) \
KEEP(*(___ksymtab+sk_common_release)) \
KEEP(*(___ksymtab+sk_dst_check)) \
KEEP(*(___ksymtab+sk_filter)) \
KEEP(*(___ksymtab+sk_filter_release_rcu)) \
KEEP(*(___ksymtab+sk_free)) \
KEEP(*(___ksymtab+sk_page_frag_refill)) \
KEEP(*(___ksymtab+sk_prot_clear_portaddr_nulls)) \
KEEP(*(___ksymtab+sk_receive_skb)) \
KEEP(*(___ksymtab+sk_release_kernel)) \
KEEP(*(___ksymtab+sk_send_sigurg)) \
KEEP(*(___ksymtab+sk_setup_caps)) \
KEEP(*(___ksymtab+skb_abort_seq_read)) \
KEEP(*(___ksymtab+skb_append_datato_frags)) \
KEEP(*(___ksymtab+skb_checksum)) \
KEEP(*(___ksymtab+skb_checksum_help)) \
KEEP(*(___ksymtab+skb_clone)) \
KEEP(*(___ksymtab+skb_complete_wifi_ack)) \
KEEP(*(___ksymtab+skb_copy)) \
KEEP(*(___ksymtab+skb_copy_and_csum_bits)) \
KEEP(*(___ksymtab+skb_copy_and_csum_datagram_iovec)) \
KEEP(*(___ksymtab+skb_copy_and_csum_dev)) \
KEEP(*(___ksymtab+skb_copy_bits)) \
KEEP(*(___ksymtab+skb_copy_datagram_const_iovec)) \
KEEP(*(___ksymtab+skb_copy_datagram_from_iovec)) \
KEEP(*(___ksymtab+skb_copy_datagram_iovec)) \
KEEP(*(___ksymtab+skb_copy_expand)) \
KEEP(*(___ksymtab+skb_copy_ubufs)) \
KEEP(*(___ksymtab+skb_dequeue)) \
KEEP(*(___ksymtab+skb_dequeue_tail)) \
KEEP(*(___ksymtab+skb_flow_dissect)) \
KEEP(*(___ksymtab+skb_free_datagram)) \
KEEP(*(___ksymtab+skb_free_datagram_locked)) \
KEEP(*(___ksymtab+skb_kill_datagram)) \
KEEP(*(___ksymtab+skb_make_writable)) \
KEEP(*(___ksymtab+skb_morph)) \
KEEP(*(___ksymtab+skb_prepare_seq_read)) \
KEEP(*(___ksymtab+skb_pull)) \
KEEP(*(___ksymtab+skb_pull_rcsum)) \
KEEP(*(___ksymtab+skb_push)) \
KEEP(*(___ksymtab+skb_put)) \
KEEP(*(___ksymtab+skb_queue_purge)) \
KEEP(*(___ksymtab+skb_queue_tail)) \
KEEP(*(___ksymtab+skb_realloc_headroom)) \
KEEP(*(___ksymtab+skb_recv_datagram)) \
KEEP(*(___ksymtab+skb_scrub_packet)) \
KEEP(*(___ksymtab+skb_seq_read)) \
KEEP(*(___ksymtab+skb_store_bits)) \
KEEP(*(___ksymtab+skb_trim)) \
KEEP(*(___ksymtab+skb_try_coalesce)) \
KEEP(*(___ksymtab+skb_tstamp_tx)) \
KEEP(*(___ksymtab+snmp_fold_field)) \
KEEP(*(___ksymtab+snmp_fold_field64)) \
KEEP(*(___ksymtab+snmp_mib_init)) \
KEEP(*(___ksymtab+snprintf)) \
KEEP(*(___ksymtab+sock_alloc_send_skb)) \
KEEP(*(___ksymtab+sock_common_getsockopt)) \
KEEP(*(___ksymtab+sock_common_recvmsg)) \
KEEP(*(___ksymtab+sock_common_setsockopt)) \
KEEP(*(___ksymtab+sock_create_kern)) \
KEEP(*(___ksymtab+sock_edemux)) \
KEEP(*(___ksymtab+sock_get_timestamp)) \
KEEP(*(___ksymtab+sock_get_timestampns)) \
KEEP(*(___ksymtab+sock_i_ino)) \
KEEP(*(___ksymtab+sock_i_uid)) \
KEEP(*(___ksymtab+sock_init_data)) \
KEEP(*(___ksymtab+sock_kfree_s)) \
KEEP(*(___ksymtab+sock_kmalloc)) \
KEEP(*(___ksymtab+sock_no_accept)) \
KEEP(*(___ksymtab+sock_no_bind)) \
KEEP(*(___ksymtab+sock_no_listen)) \
KEEP(*(___ksymtab+sock_no_mmap)) \
KEEP(*(___ksymtab+sock_no_sendpage)) \
KEEP(*(___ksymtab+sock_no_shutdown)) \
KEEP(*(___ksymtab+sock_no_socketpair)) \
KEEP(*(___ksymtab+sock_prot_inuse_add)) \
KEEP(*(___ksymtab+sock_prot_inuse_get)) \
KEEP(*(___ksymtab+sock_queue_err_skb)) \
KEEP(*(___ksymtab+sock_queue_rcv_skb)) \
KEEP(*(___ksymtab+sock_register)) \
KEEP(*(___ksymtab+sock_release)) \
KEEP(*(___ksymtab+sock_rfree)) \
KEEP(*(___ksymtab+sock_tx_timestamp)) \
KEEP(*(___ksymtab+sock_unregister)) \
KEEP(*(___ksymtab+sock_wfree)) \
KEEP(*(___ksymtab+sock_wmalloc)) \
KEEP(*(___ksymtab+sockfd_lookup)) \
KEEP(*(___ksymtab+sort)) \
KEEP(*(___ksymtab+spi_bitbang_cleanup)) \
KEEP(*(___ksymtab+spi_bitbang_setup)) \
KEEP(*(___ksymtab+spi_bitbang_setup_transfer)) \
KEEP(*(___ksymtab+spi_get_device_id)) \
KEEP(*(___ksymtab+spi_setup)) \
KEEP(*(___ksymtab+sprintf)) \
KEEP(*(___ksymtab+srcu_batches_completed)) \
KEEP(*(___ksymtab+sscanf)) \
KEEP(*(___ksymtab+static_key_slow_inc)) \
KEEP(*(___ksymtab+stp_proto_register)) \
KEEP(*(___ksymtab+stp_proto_unregister)) \
KEEP(*(___ksymtab+strcasecmp)) \
KEEP(*(___ksymtab+strcat)) \
KEEP(*(___ksymtab+strchr)) \
KEEP(*(___ksymtab+strcmp)) \
KEEP(*(___ksymtab+strcpy)) \
KEEP(*(___ksymtab+strcspn)) \
KEEP(*(___ksymtab+string_get_size)) \
KEEP(*(___ksymtab+strlcpy)) \
KEEP(*(___ksymtab+strlen)) \
KEEP(*(___ksymtab+strlen_user)) \
KEEP(*(___ksymtab+strncat)) \
KEEP(*(___ksymtab+strncmp)) \
KEEP(*(___ksymtab+strncpy)) \
KEEP(*(___ksymtab+strncpy_from_user)) \
KEEP(*(___ksymtab+strndup_user)) \
KEEP(*(___ksymtab+strnicmp)) \
KEEP(*(___ksymtab+strnlen)) \
KEEP(*(___ksymtab+strnlen_user)) \
KEEP(*(___ksymtab+strpbrk)) \
KEEP(*(___ksymtab+strrchr)) \
KEEP(*(___ksymtab+strsep)) \
KEEP(*(___ksymtab+strspn)) \
KEEP(*(___ksymtab+synchronize_irq)) \
KEEP(*(___ksymtab+synchronize_net)) \
KEEP(*(___ksymtab+synchronize_sched)) \
KEEP(*(___ksymtab+syncookie_secret)) \
KEEP(*(___ksymtab+sys_dup)) \
KEEP(*(___ksymtab+sysctl_ip_default_ttl)) \
KEEP(*(___ksymtab+sysctl_ip_early_demux)) \
KEEP(*(___ksymtab+sysctl_ip_nonlocal_bind)) \
KEEP(*(___ksymtab+sysctl_max_syn_backlog)) \
KEEP(*(___ksymtab+sysctl_optmem_max)) \
KEEP(*(___ksymtab+sysctl_tcp_adv_win_scale)) \
KEEP(*(___ksymtab+sysctl_tcp_notsent_lowat)) \
KEEP(*(___ksymtab+sysctl_tcp_rmem)) \
KEEP(*(___ksymtab+sysctl_tcp_syncookies)) \
KEEP(*(___ksymtab+sysctl_tcp_wmem)) \
KEEP(*(___ksymtab+sysctl_udp_mem)) \
KEEP(*(___ksymtab+sysctl_udp_rmem_min)) \
KEEP(*(___ksymtab+sysctl_udp_wmem_min)) \
KEEP(*(___ksymtab+sysfs_add_file_to_group)) \
KEEP(*(___ksymtab+sysfs_add_link_to_group)) \
KEEP(*(___ksymtab+sysfs_create_group)) \
KEEP(*(___ksymtab+sysfs_create_groups)) \
KEEP(*(___ksymtab+sysfs_create_link)) \
KEEP(*(___ksymtab+sysfs_merge_group)) \
KEEP(*(___ksymtab+sysfs_remove_file_from_group)) \
KEEP(*(___ksymtab+sysfs_remove_group)) \
KEEP(*(___ksymtab+sysfs_remove_groups)) \
KEEP(*(___ksymtab+sysfs_remove_link)) \
KEEP(*(___ksymtab+sysfs_remove_link_from_group)) \
KEEP(*(___ksymtab+sysfs_schedule_callback)) \
KEEP(*(___ksymtab+sysfs_streq)) \
KEEP(*(___ksymtab+sysfs_unmerge_group)) \
KEEP(*(___ksymtab+sysfs_update_group)) \
KEEP(*(___ksymtab+system_freezable_wq)) \
KEEP(*(___ksymtab+system_long_wq)) \
KEEP(*(___ksymtab+system_state)) \
KEEP(*(___ksymtab+system_wq)) \
KEEP(*(___ksymtab+task_active_pid_ns)) \
KEEP(*(___ksymtab+tasklet_hrtimer_init)) \
KEEP(*(___ksymtab+tasklet_init)) \
KEEP(*(___ksymtab+tasklet_kill)) \
KEEP(*(___ksymtab+tb_ticks_per_usec)) \
KEEP(*(___ksymtab+tc_classify)) \
KEEP(*(___ksymtab+tc_classify_compat)) \
KEEP(*(___ksymtab+tcf_destroy_chain)) \
KEEP(*(___ksymtab+tcf_hash_lookup)) \
KEEP(*(___ksymtab+tcp_check_req)) \
KEEP(*(___ksymtab+tcp_child_process)) \
KEEP(*(___ksymtab+tcp_close)) \
KEEP(*(___ksymtab+tcp_connect)) \
KEEP(*(___ksymtab+tcp_create_openreq_child)) \
KEEP(*(___ksymtab+tcp_death_row)) \
KEEP(*(___ksymtab+tcp_disconnect)) \
KEEP(*(___ksymtab+tcp_done)) \
KEEP(*(___ksymtab+tcp_enter_memory_pressure)) \
KEEP(*(___ksymtab+tcp_fetch_timewait_stamp)) \
KEEP(*(___ksymtab+tcp_getsockopt)) \
KEEP(*(___ksymtab+tcp_gro_complete)) \
KEEP(*(___ksymtab+tcp_hashinfo)) \
KEEP(*(___ksymtab+tcp_init_sock)) \
KEEP(*(___ksymtab+tcp_initialize_rcv_mss)) \
KEEP(*(___ksymtab+tcp_ioctl)) \
KEEP(*(___ksymtab+tcp_make_synack)) \
KEEP(*(___ksymtab+tcp_memory_allocated)) \
KEEP(*(___ksymtab+tcp_memory_pressure)) \
KEEP(*(___ksymtab+tcp_mtup_init)) \
KEEP(*(___ksymtab+tcp_orphan_count)) \
KEEP(*(___ksymtab+tcp_parse_options)) \
KEEP(*(___ksymtab+tcp_peer_is_proven)) \
KEEP(*(___ksymtab+tcp_poll)) \
KEEP(*(___ksymtab+tcp_prequeue)) \
KEEP(*(___ksymtab+tcp_proc_register)) \
KEEP(*(___ksymtab+tcp_proc_unregister)) \
KEEP(*(___ksymtab+tcp_prot)) \
KEEP(*(___ksymtab+tcp_rcv_established)) \
KEEP(*(___ksymtab+tcp_rcv_state_process)) \
KEEP(*(___ksymtab+tcp_recvmsg)) \
KEEP(*(___ksymtab+tcp_release_cb)) \
KEEP(*(___ksymtab+tcp_select_initial_window)) \
KEEP(*(___ksymtab+tcp_sendmsg)) \
KEEP(*(___ksymtab+tcp_sendpage)) \
KEEP(*(___ksymtab+tcp_seq_open)) \
KEEP(*(___ksymtab+tcp_set_state)) \
KEEP(*(___ksymtab+tcp_setsockopt)) \
KEEP(*(___ksymtab+tcp_shutdown)) \
KEEP(*(___ksymtab+tcp_simple_retransmit)) \
KEEP(*(___ksymtab+tcp_sockets_allocated)) \
KEEP(*(___ksymtab+tcp_splice_read)) \
KEEP(*(___ksymtab+tcp_syn_ack_timeout)) \
KEEP(*(___ksymtab+tcp_syn_flood_action)) \
KEEP(*(___ksymtab+tcp_sync_mss)) \
KEEP(*(___ksymtab+tcp_timewait_state_process)) \
KEEP(*(___ksymtab+tcp_twsk_destructor)) \
KEEP(*(___ksymtab+tcp_twsk_unique)) \
KEEP(*(___ksymtab+tcp_v4_conn_request)) \
KEEP(*(___ksymtab+tcp_v4_connect)) \
KEEP(*(___ksymtab+tcp_v4_destroy_sock)) \
KEEP(*(___ksymtab+tcp_v4_do_rcv)) \
KEEP(*(___ksymtab+tcp_v4_send_check)) \
KEEP(*(___ksymtab+tcp_v4_syn_recv_sock)) \
KEEP(*(___ksymtab+test_set_page_writeback)) \
KEEP(*(___ksymtab+thaw_super)) \
KEEP(*(___ksymtab+thermal_cdev_update)) \
KEEP(*(___ksymtab+thermal_cooling_device_register)) \
KEEP(*(___ksymtab+thermal_cooling_device_unregister)) \
KEEP(*(___ksymtab+thermal_zone_device_register)) \
KEEP(*(___ksymtab+thermal_zone_device_unregister)) \
KEEP(*(___ksymtab+thermal_zone_device_update)) \
KEEP(*(___ksymtab+time_to_tm)) \
KEEP(*(___ksymtab+timer_interrupt)) \
KEEP(*(___ksymtab+timespec_to_jiffies)) \
KEEP(*(___ksymtab+timeval_to_jiffies)) \
KEEP(*(___ksymtab+transport_add_device)) \
KEEP(*(___ksymtab+transport_class_unregister)) \
KEEP(*(___ksymtab+transport_configure_device)) \
KEEP(*(___ksymtab+transport_destroy_device)) \
KEEP(*(___ksymtab+transport_remove_device)) \
KEEP(*(___ksymtab+transport_setup_device)) \
KEEP(*(___ksymtab+truncate_inode_pages)) \
KEEP(*(___ksymtab+truncate_inode_pages_range)) \
KEEP(*(___ksymtab+truncate_pagecache)) \
KEEP(*(___ksymtab+truncate_pagecache_range)) \
KEEP(*(___ksymtab+truncate_setsize)) \
KEEP(*(___ksymtab+try_module_get)) \
KEEP(*(___ksymtab+try_to_del_timer_sync)) \
KEEP(*(___ksymtab+try_wait_for_completion)) \
KEEP(*(___ksymtab+tty_chars_in_buffer)) \
KEEP(*(___ksymtab+tty_driver_flush_buffer)) \
KEEP(*(___ksymtab+tty_encode_baud_rate)) \
KEEP(*(___ksymtab+tty_flip_buffer_push)) \
KEEP(*(___ksymtab+tty_hangup)) \
KEEP(*(___ksymtab+tty_hung_up_p)) \
KEEP(*(___ksymtab+tty_insert_flip_string_fixed_flag)) \
KEEP(*(___ksymtab+tty_insert_flip_string_flags)) \
KEEP(*(___ksymtab+tty_kref_put)) \
KEEP(*(___ksymtab+tty_port_close)) \
KEEP(*(___ksymtab+tty_port_close_end)) \
KEEP(*(___ksymtab+tty_port_close_start)) \
KEEP(*(___ksymtab+tty_port_destroy)) \
KEEP(*(___ksymtab+tty_port_hangup)) \
KEEP(*(___ksymtab+tty_port_init)) \
KEEP(*(___ksymtab+tty_port_install)) \
KEEP(*(___ksymtab+tty_port_open)) \
KEEP(*(___ksymtab+tty_port_tty_get)) \
KEEP(*(___ksymtab+tty_port_tty_hangup)) \
KEEP(*(___ksymtab+tty_port_tty_wakeup)) \
KEEP(*(___ksymtab+tty_register_device)) \
KEEP(*(___ksymtab+tty_register_device_attr)) \
KEEP(*(___ksymtab+tty_register_driver)) \
KEEP(*(___ksymtab+tty_register_ldisc)) \
KEEP(*(___ksymtab+tty_schedule_flip)) \
KEEP(*(___ksymtab+tty_set_operations)) \
KEEP(*(___ksymtab+tty_std_termios)) \
KEEP(*(___ksymtab+tty_termios_baud_rate)) \
KEEP(*(___ksymtab+tty_termios_copy_hw)) \
KEEP(*(___ksymtab+tty_termios_hw_change)) \
KEEP(*(___ksymtab+tty_unregister_device)) \
KEEP(*(___ksymtab+tty_unregister_driver)) \
KEEP(*(___ksymtab+tty_unregister_ldisc)) \
KEEP(*(___ksymtab+tty_vhangup)) \
KEEP(*(___ksymtab+tty_wakeup)) \
KEEP(*(___ksymtab+uart_update_timeout)) \
KEEP(*(___ksymtab+uart_write_wakeup)) \
KEEP(*(___ksymtab+udelay)) \
KEEP(*(___ksymtab+udp4_lib_lookup)) \
KEEP(*(___ksymtab+udp6_csum_init)) \
KEEP(*(___ksymtab+udp_disconnect)) \
KEEP(*(___ksymtab+udp_encap_enable)) \
KEEP(*(___ksymtab+udp_flush_pending_frames)) \
KEEP(*(___ksymtab+udp_ioctl)) \
KEEP(*(___ksymtab+udp_lib_get_port)) \
KEEP(*(___ksymtab+udp_lib_getsockopt)) \
KEEP(*(___ksymtab+udp_lib_rehash)) \
KEEP(*(___ksymtab+udp_lib_setsockopt)) \
KEEP(*(___ksymtab+udp_lib_unhash)) \
KEEP(*(___ksymtab+udp_memory_allocated)) \
KEEP(*(___ksymtab+udp_poll)) \
KEEP(*(___ksymtab+udp_proc_register)) \
KEEP(*(___ksymtab+udp_proc_unregister)) \
KEEP(*(___ksymtab+udp_prot)) \
KEEP(*(___ksymtab+udp_push_pending_frames)) \
KEEP(*(___ksymtab+udp_sendmsg)) \
KEEP(*(___ksymtab+udp_seq_open)) \
KEEP(*(___ksymtab+udp_table)) \
KEEP(*(___ksymtab+udplite_prot)) \
KEEP(*(___ksymtab+udplite_table)) \
KEEP(*(___ksymtab+unload_nls)) \
KEEP(*(___ksymtab+unlock_new_inode)) \
KEEP(*(___ksymtab+unlock_page)) \
KEEP(*(___ksymtab+unregister_blkdev)) \
KEEP(*(___ksymtab+unregister_chrdev_region)) \
KEEP(*(___ksymtab+unregister_filesystem)) \
KEEP(*(___ksymtab+unregister_net_sysctl_table)) \
KEEP(*(___ksymtab+unregister_netdev)) \
KEEP(*(___ksymtab+unregister_netdevice_many)) \
KEEP(*(___ksymtab+unregister_netdevice_notifier)) \
KEEP(*(___ksymtab+unregister_netdevice_queue)) \
KEEP(*(___ksymtab+unregister_pernet_device)) \
KEEP(*(___ksymtab+unregister_pernet_subsys)) \
KEEP(*(___ksymtab+unregister_pppox_proto)) \
KEEP(*(___ksymtab+unregister_qdisc)) \
KEEP(*(___ksymtab+unregister_sysctl_table)) \
KEEP(*(___ksymtab+up)) \
KEEP(*(___ksymtab+up_read)) \
KEEP(*(___ksymtab+up_write)) \
KEEP(*(___ksymtab+usb_amd_dev_put)) \
KEEP(*(___ksymtab+usb_amd_find_chipset_info)) \
KEEP(*(___ksymtab+usb_amd_quirk_pll_disable)) \
KEEP(*(___ksymtab+usb_amd_quirk_pll_enable)) \
KEEP(*(___ksymtab+usecs_to_jiffies)) \
KEEP(*(___ksymtab+usleep_range)) \
KEEP(*(___ksymtab+utf16s_to_utf8s)) \
KEEP(*(___ksymtab+utf8s_to_utf16s)) \
KEEP(*(___ksymtab+vfree)) \
KEEP(*(___ksymtab+vfs_path_lookup)) \
KEEP(*(___ksymtab+vlan_dev_vlan_id)) \
KEEP(*(___ksymtab+vlan_uses_dev)) \
KEEP(*(___ksymtab+vlan_vid_add)) \
KEEP(*(___ksymtab+vlan_vid_del)) \
KEEP(*(___ksymtab+vlan_vids_add_by_dev)) \
KEEP(*(___ksymtab+vlan_vids_del_by_dev)) \
KEEP(*(___ksymtab+vmalloc)) \
KEEP(*(___ksymtab+vmalloc_32)) \
KEEP(*(___ksymtab+vmalloc_32_user)) \
KEEP(*(___ksymtab+vmalloc_node)) \
KEEP(*(___ksymtab+vmalloc_to_page)) \
KEEP(*(___ksymtab+vmalloc_to_pfn)) \
KEEP(*(___ksymtab+vmalloc_user)) \
KEEP(*(___ksymtab+vprintk)) \
KEEP(*(___ksymtab+vprintk_emit)) \
KEEP(*(___ksymtab+vscnprintf)) \
KEEP(*(___ksymtab+vsnprintf)) \
KEEP(*(___ksymtab+vsprintf)) \
KEEP(*(___ksymtab+vsscanf)) \
KEEP(*(___ksymtab+vzalloc)) \
KEEP(*(___ksymtab+vzalloc_node)) \
KEEP(*(___ksymtab+wait_for_completion)) \
KEEP(*(___ksymtab+wait_for_completion_interruptible)) \
KEEP(*(___ksymtab+wait_for_completion_interruptible_timeout)) \
KEEP(*(___ksymtab+wait_for_completion_io)) \
KEEP(*(___ksymtab+wait_for_completion_io_timeout)) \
KEEP(*(___ksymtab+wait_for_completion_killable)) \
KEEP(*(___ksymtab+wait_for_completion_killable_timeout)) \
KEEP(*(___ksymtab+wait_for_completion_timeout)) \
KEEP(*(___ksymtab+wait_on_page_bit)) \
KEEP(*(___ksymtab+wait_rcu_gp)) \
KEEP(*(___ksymtab+wake_up_atomic_t)) \
KEEP(*(___ksymtab+wake_up_bit)) \
KEEP(*(___ksymtab+wake_up_process)) \
KEEP(*(___ksymtab+wireless_send_event)) \
KEEP(*(___ksymtab+wireless_spy_update)) \
KEEP(*(___ksymtab+ww_mutex_unlock)) \
KEEP(*(___ksymtab+xfrm_dst_ifdown)) \
KEEP(*(___ksymtab+xfrm_inner_extract_output)) \
KEEP(*(___ksymtab+xfrm_input)) \
KEEP(*(___ksymtab+xfrm_input_resume)) \
KEEP(*(___ksymtab+xfrm_local_error)) \
KEEP(*(___ksymtab+xfrm_lookup)) \
KEEP(*(___ksymtab+xfrm_output)) \
KEEP(*(___ksymtab+xfrm_output_resume)) \
KEEP(*(___ksymtab+xfrm_policy_destroy)) \
KEEP(*(___ksymtab+xfrm_policy_register_afinfo)) \
KEEP(*(___ksymtab+xfrm_policy_unregister_afinfo)) \
KEEP(*(___ksymtab+xfrm_prepare_input)) \
KEEP(*(___ksymtab+xfrm_register_mode)) \
KEEP(*(___ksymtab+xfrm_state_check_expire)) \
KEEP(*(___ksymtab+xfrm_state_lookup)) \
KEEP(*(___ksymtab+xfrm_state_lookup_byaddr)) \
KEEP(*(___ksymtab+xfrm_state_register_afinfo)) \
KEEP(*(___ksymtab+xfrm_state_unregister_afinfo)) \
KEEP(*(___ksymtab+xfrm_state_update)) \
KEEP(*(___ksymtab+xfrm_unregister_mode)) \
KEEP(*(___ksymtab+xfrm_user_policy)) \
KEEP(*(___ksymtab+xt_check_match)) \
KEEP(*(___ksymtab+xt_check_target)) \
KEEP(*(___ksymtab+xt_register_match)) \
KEEP(*(___ksymtab+xt_register_matches)) \
KEEP(*(___ksymtab+xt_register_target)) \
KEEP(*(___ksymtab+xt_register_targets)) \
KEEP(*(___ksymtab+xt_request_find_match)) \
KEEP(*(___ksymtab+xt_request_find_target)) \
KEEP(*(___ksymtab+xt_unregister_match)) \
KEEP(*(___ksymtab+xt_unregister_matches)) \
KEEP(*(___ksymtab+xt_unregister_target)) \
KEEP(*(___ksymtab+xt_unregister_targets)) \
KEEP(*(___ksymtab+xtnu_skb_make_writable)) \
KEEP(*(___ksymtab+yield)) \
KEEP(*(___ksymtab+yield_to)) \
KEEP(*(___ksymtab+zlib_deflate)) \
KEEP(*(___ksymtab+zlib_deflateEnd)) \
KEEP(*(___ksymtab+zlib_deflateInit2)) \
KEEP(*(___ksymtab+zlib_deflateReset)) \
KEEP(*(___ksymtab+zlib_deflate_workspacesize)) \
KEEP(*(___ksymtab+zlib_inflate)) \
KEEP(*(___ksymtab+zlib_inflateEnd)) \
KEEP(*(___ksymtab+zlib_inflateIncomp)) \
KEEP(*(___ksymtab+zlib_inflateInit2)) \
KEEP(*(___ksymtab+zlib_inflateReset)) \
KEEP(*(___ksymtab+zlib_inflate_blob)) \
KEEP(*(___ksymtab+zlib_inflate_workspacesize)) \

#define SYMTAB_KEEP_GPL \
KEEP(*(___ksymtab_gpl+LzmaDecode)) \
KEEP(*(___ksymtab_gpl+PDE_DATA)) \
KEEP(*(___ksymtab_gpl+___pskb_trim)) \
KEEP(*(___ksymtab_gpl+___ratelimit)) \
KEEP(*(___ksymtab_gpl+__ablkcipher_walk_complete)) \
KEEP(*(___ksymtab_gpl+__alloc_pages_nodemask)) \
KEEP(*(___ksymtab_gpl+__alloc_percpu)) \
KEEP(*(___ksymtab_gpl+__alloc_skb)) \
KEEP(*(___ksymtab_gpl+__alloc_workqueue_key)) \
KEEP(*(___ksymtab_gpl+__ashldi3)) \
KEEP(*(___ksymtab_gpl+__bitmap_empty)) \
KEEP(*(___ksymtab_gpl+__blk_end_request)) \
KEEP(*(___ksymtab_gpl+__blk_end_request_all)) \
KEEP(*(___ksymtab_gpl+__blk_end_request_cur)) \
KEEP(*(___ksymtab_gpl+__blk_end_request_err)) \
KEEP(*(___ksymtab_gpl+__blk_iopoll_complete)) \
KEEP(*(___ksymtab_gpl+__blk_put_request)) \
KEEP(*(___ksymtab_gpl+__blk_run_queue)) \
KEEP(*(___ksymtab_gpl+__blocking_notifier_call_chain)) \
KEEP(*(___ksymtab_gpl+__break_lease)) \
KEEP(*(___ksymtab_gpl+__class_create)) \
KEEP(*(___ksymtab_gpl+__class_register)) \
KEEP(*(___ksymtab_gpl+__clocksource_updatefreq_scale)) \
KEEP(*(___ksymtab_gpl+__cond_resched_lock)) \
KEEP(*(___ksymtab_gpl+__cond_resched_softirq)) \
KEEP(*(___ksymtab_gpl+__copy_tofrom_user)) \
KEEP(*(___ksymtab_gpl+__d_drop)) \
KEEP(*(___ksymtab_gpl+__dev_get_by_index)) \
KEEP(*(___ksymtab_gpl+__dev_get_by_name)) \
KEEP(*(___ksymtab_gpl+__dev_remove_pack)) \
KEEP(*(___ksymtab_gpl+__div64_32)) \
KEEP(*(___ksymtab_gpl+__dst_destroy_metrics_generic)) \
KEEP(*(___ksymtab_gpl+__dst_free)) \
KEEP(*(___ksymtab_gpl+__ethtool_get_settings)) \
KEEP(*(___ksymtab_gpl+__fib_lookup)) \
KEEP(*(___ksymtab_gpl+__free_pages)) \
KEEP(*(___ksymtab_gpl+__generic_file_aio_write)) \
KEEP(*(___ksymtab_gpl+__genl_register_family_with_ops)) \
KEEP(*(___ksymtab_gpl+__get_free_pages)) \
KEEP(*(___ksymtab_gpl+__get_page_tail)) \
KEEP(*(___ksymtab_gpl+__hw_addr_init)) \
KEEP(*(___ksymtab_gpl+__hw_addr_sync)) \
KEEP(*(___ksymtab_gpl+__hw_addr_unsync)) \
KEEP(*(___ksymtab_gpl+__idr_remove_all)) \
KEEP(*(___ksymtab_gpl+__inet6_hash)) \
KEEP(*(___ksymtab_gpl+__inet6_lookup_established)) \
KEEP(*(___ksymtab_gpl+__inet_hash_nolisten)) \
KEEP(*(___ksymtab_gpl+__inet_inherit_port)) \
KEEP(*(___ksymtab_gpl+__inet_lookup_established)) \
KEEP(*(___ksymtab_gpl+__inet_lookup_listener)) \
KEEP(*(___ksymtab_gpl+__inet_stream_connect)) \
KEEP(*(___ksymtab_gpl+__init_rwsem)) \
KEEP(*(___ksymtab_gpl+__init_waitqueue_head)) \
KEEP(*(___ksymtab_gpl+__ioremap)) \
KEEP(*(___ksymtab_gpl+__iowrite32_copy)) \
KEEP(*(___ksymtab_gpl+__ip6_local_out)) \
KEEP(*(___ksymtab_gpl+__ip_select_ident)) \
KEEP(*(___ksymtab_gpl+__ipv6_addr_type)) \
KEEP(*(___ksymtab_gpl+__kernel_param_lock)) \
KEEP(*(___ksymtab_gpl+__kernel_param_unlock)) \
KEEP(*(___ksymtab_gpl+__kfifo_alloc)) \
KEEP(*(___ksymtab_gpl+__kfifo_free)) \
KEEP(*(___ksymtab_gpl+__kfifo_in)) \
KEEP(*(___ksymtab_gpl+__kfifo_in_r)) \
KEEP(*(___ksymtab_gpl+__kfifo_init)) \
KEEP(*(___ksymtab_gpl+__kfifo_out)) \
KEEP(*(___ksymtab_gpl+__kfifo_out_peek)) \
KEEP(*(___ksymtab_gpl+__kfifo_out_peek_r)) \
KEEP(*(___ksymtab_gpl+__kfifo_out_r)) \
KEEP(*(___ksymtab_gpl+__kfree_skb)) \
KEEP(*(___ksymtab_gpl+__kmalloc)) \
KEEP(*(___ksymtab_gpl+__lock_page)) \
KEEP(*(___ksymtab_gpl+__lock_page_killable)) \
KEEP(*(___ksymtab_gpl+__lru_cache_add)) \
KEEP(*(___ksymtab_gpl+__lshrdi3)) \
KEEP(*(___ksymtab_gpl+__mark_inode_dirty)) \
KEEP(*(___ksymtab_gpl+__module_get)) \
KEEP(*(___ksymtab_gpl+__module_put_and_exit)) \
KEEP(*(___ksymtab_gpl+__mutex_init)) \
KEEP(*(___ksymtab_gpl+__napi_complete)) \
KEEP(*(___ksymtab_gpl+__napi_schedule)) \
KEEP(*(___ksymtab_gpl+__neigh_create)) \
KEEP(*(___ksymtab_gpl+__netdev_alloc_skb)) \
KEEP(*(___ksymtab_gpl+__netdev_alloc_skb_ip_align)) \
KEEP(*(___ksymtab_gpl+__netif_schedule)) \
KEEP(*(___ksymtab_gpl+__netlink_kernel_create)) \
KEEP(*(___ksymtab_gpl+__nf_ct_expect_find)) \
KEEP(*(___ksymtab_gpl+__nf_ct_refresh_acct)) \
KEEP(*(___ksymtab_gpl+__nf_nat_mangle_tcp_packet)) \
KEEP(*(___ksymtab_gpl+__nla_put)) \
KEEP(*(___ksymtab_gpl+__nla_put_nohdr)) \
KEEP(*(___ksymtab_gpl+__nla_reserve)) \
KEEP(*(___ksymtab_gpl+__nla_reserve_nohdr)) \
KEEP(*(___ksymtab_gpl+__nlmsg_put)) \
KEEP(*(___ksymtab_gpl+__pci_complete_power_transition)) \
KEEP(*(___ksymtab_gpl+__pci_register_driver)) \
KEEP(*(___ksymtab_gpl+__platform_driver_register)) \
KEEP(*(___ksymtab_gpl+__pneigh_lookup)) \
KEEP(*(___ksymtab_gpl+__printk_ratelimit)) \
KEEP(*(___ksymtab_gpl+__pskb_copy)) \
KEEP(*(___ksymtab_gpl+__pskb_pull_tail)) \
KEEP(*(___ksymtab_gpl+__put_cred)) \
KEEP(*(___ksymtab_gpl+__rb_erase_color)) \
KEEP(*(___ksymtab_gpl+__register_chrdev)) \
KEEP(*(___ksymtab_gpl+__release_region)) \
KEEP(*(___ksymtab_gpl+__request_module)) \
KEEP(*(___ksymtab_gpl+__request_region)) \
KEEP(*(___ksymtab_gpl+__root_device_register)) \
KEEP(*(___ksymtab_gpl+__round_jiffies)) \
KEEP(*(___ksymtab_gpl+__round_jiffies_relative)) \
KEEP(*(___ksymtab_gpl+__round_jiffies_up)) \
KEEP(*(___ksymtab_gpl+__round_jiffies_up_relative)) \
KEEP(*(___ksymtab_gpl+__rtnl_af_register)) \
KEEP(*(___ksymtab_gpl+__rtnl_af_unregister)) \
KEEP(*(___ksymtab_gpl+__rtnl_link_register)) \
KEEP(*(___ksymtab_gpl+__rtnl_link_unregister)) \
KEEP(*(___ksymtab_gpl+__rtnl_register)) \
KEEP(*(___ksymtab_gpl+__secpath_destroy)) \
KEEP(*(___ksymtab_gpl+__seq_open_private)) \
KEEP(*(___ksymtab_gpl+__set_page_dirty_buffers)) \
KEEP(*(___ksymtab_gpl+__set_page_dirty_nobuffers)) \
KEEP(*(___ksymtab_gpl+__sg_alloc_table)) \
KEEP(*(___ksymtab_gpl+__sg_free_table)) \
KEEP(*(___ksymtab_gpl+__sk_dst_check)) \
KEEP(*(___ksymtab_gpl+__sk_mem_schedule)) \
KEEP(*(___ksymtab_gpl+__skb_checksum_complete)) \
KEEP(*(___ksymtab_gpl+__skb_checksum_complete_head)) \
KEEP(*(___ksymtab_gpl+__skb_dst_set_noref)) \
KEEP(*(___ksymtab_gpl+__skb_recv_datagram)) \
KEEP(*(___ksymtab_gpl+__skb_warn_lro_forwarding)) \
KEEP(*(___ksymtab_gpl+__sock_create)) \
KEEP(*(___ksymtab_gpl+__sock_recv_timestamp)) \
KEEP(*(___ksymtab_gpl+__sock_recv_ts_and_drops)) \
KEEP(*(___ksymtab_gpl+__sock_recv_wifi_status)) \
KEEP(*(___ksymtab_gpl+__sw_hweight16)) \
KEEP(*(___ksymtab_gpl+__sw_hweight32)) \
KEEP(*(___ksymtab_gpl+__sw_hweight64)) \
KEEP(*(___ksymtab_gpl+__sw_hweight8)) \
KEEP(*(___ksymtab_gpl+__task_pid_nr_ns)) \
KEEP(*(___ksymtab_gpl+__tasklet_hi_schedule)) \
KEEP(*(___ksymtab_gpl+__tasklet_hi_schedule_first)) \
KEEP(*(___ksymtab_gpl+__tasklet_schedule)) \
KEEP(*(___ksymtab_gpl+__tty_alloc_driver)) \
KEEP(*(___ksymtab_gpl+__udp4_lib_lookup)) \
KEEP(*(___ksymtab_gpl+__unregister_chrdev)) \
KEEP(*(___ksymtab_gpl+__vmalloc)) \
KEEP(*(___ksymtab_gpl+__wake_up)) \
KEEP(*(___ksymtab_gpl+__wake_up_bit)) \
KEEP(*(___ksymtab_gpl+__wake_up_locked)) \
KEEP(*(___ksymtab_gpl+__wake_up_locked_key)) \
KEEP(*(___ksymtab_gpl+__wake_up_sync)) \
KEEP(*(___ksymtab_gpl+__wake_up_sync_key)) \
KEEP(*(___ksymtab_gpl+__ww_mutex_lock)) \
KEEP(*(___ksymtab_gpl+__ww_mutex_lock_interruptible)) \
KEEP(*(___ksymtab_gpl+__xfrm_decode_session)) \
KEEP(*(___ksymtab_gpl+__xfrm_policy_check)) \
KEEP(*(___ksymtab_gpl+__xfrm_route_forward)) \
KEEP(*(___ksymtab_gpl+__xfrm_state_destroy)) \
KEEP(*(___ksymtab_gpl+_cond_resched)) \
KEEP(*(___ksymtab_gpl+_ctype)) \
KEEP(*(___ksymtab_gpl+_dev_info)) \
KEEP(*(___ksymtab_gpl+_kstrtoul)) \
KEEP(*(___ksymtab_gpl+_local_bh_enable)) \
KEEP(*(___ksymtab_gpl+_memcpy_fromio)) \
KEEP(*(___ksymtab_gpl+_memcpy_toio)) \
KEEP(*(___ksymtab_gpl+_memset_io)) \
KEEP(*(___ksymtab_gpl+add_device_randomness)) \
KEEP(*(___ksymtab_gpl+add_disk)) \
KEEP(*(___ksymtab_gpl+add_timer)) \
KEEP(*(___ksymtab_gpl+add_timer_on)) \
KEEP(*(___ksymtab_gpl+add_to_page_cache_locked)) \
KEEP(*(___ksymtab_gpl+add_uevent_var)) \
KEEP(*(___ksymtab_gpl+add_wait_queue)) \
KEEP(*(___ksymtab_gpl+add_wait_queue_exclusive)) \
KEEP(*(___ksymtab_gpl+af_alg_complete)) \
KEEP(*(___ksymtab_gpl+af_alg_wait_for_completion)) \
KEEP(*(___ksymtab_gpl+alloc_disk)) \
KEEP(*(___ksymtab_gpl+alloc_disk_node)) \
KEEP(*(___ksymtab_gpl+alloc_etherdev_mqs)) \
KEEP(*(___ksymtab_gpl+alloc_netdev_mqs)) \
KEEP(*(___ksymtab_gpl+allow_signal)) \
KEEP(*(___ksymtab_gpl+anon_transport_class_unregister)) \
KEEP(*(___ksymtab_gpl+arp_create)) \
KEEP(*(___ksymtab_gpl+arp_send)) \
KEEP(*(___ksymtab_gpl+arp_xmit)) \
KEEP(*(___ksymtab_gpl+async_schedule)) \
KEEP(*(___ksymtab_gpl+async_schedule_domain)) \
KEEP(*(___ksymtab_gpl+async_synchronize_full_domain)) \
KEEP(*(___ksymtab_gpl+async_unregister_domain)) \
KEEP(*(___ksymtab_gpl+atomic64_add_return)) \
KEEP(*(___ksymtab_gpl+atomic64_read)) \
KEEP(*(___ksymtab_gpl+atomic64_set)) \
KEEP(*(___ksymtab_gpl+atomic_dec_and_mutex_lock)) \
KEEP(*(___ksymtab_gpl+autoremove_wake_function)) \
KEEP(*(___ksymtab_gpl+bdi_destroy)) \
KEEP(*(___ksymtab_gpl+bdi_setup_and_register)) \
KEEP(*(___ksymtab_gpl+bdput)) \
KEEP(*(___ksymtab_gpl+bh_uptodate_or_lock)) \
KEEP(*(___ksymtab_gpl+bio_flush_dcache_pages)) \
KEEP(*(___ksymtab_gpl+bitmap_scnprintf)) \
KEEP(*(___ksymtab_gpl+blk_add_request_payload)) \
KEEP(*(___ksymtab_gpl+blk_cleanup_queue)) \
KEEP(*(___ksymtab_gpl+blk_complete_request)) \
KEEP(*(___ksymtab_gpl+blk_delay_queue)) \
KEEP(*(___ksymtab_gpl+blk_dump_rq_flags)) \
KEEP(*(___ksymtab_gpl+blk_end_request)) \
KEEP(*(___ksymtab_gpl+blk_end_request_all)) \
KEEP(*(___ksymtab_gpl+blk_end_request_cur)) \
KEEP(*(___ksymtab_gpl+blk_end_request_err)) \
KEEP(*(___ksymtab_gpl+blk_execute_rq)) \
KEEP(*(___ksymtab_gpl+blk_execute_rq_nowait)) \
KEEP(*(___ksymtab_gpl+blk_free_tags)) \
KEEP(*(___ksymtab_gpl+blk_get_backing_dev_info)) \
KEEP(*(___ksymtab_gpl+blk_get_queue)) \
KEEP(*(___ksymtab_gpl+blk_get_request)) \
KEEP(*(___ksymtab_gpl+blk_init_queue)) \
KEEP(*(___ksymtab_gpl+blk_init_queue_node)) \
KEEP(*(___ksymtab_gpl+blk_iopoll_complete)) \
KEEP(*(___ksymtab_gpl+blk_lookup_devt)) \
KEEP(*(___ksymtab_gpl+blk_max_low_pfn)) \
KEEP(*(___ksymtab_gpl+blk_peek_request)) \
KEEP(*(___ksymtab_gpl+blk_put_queue)) \
KEEP(*(___ksymtab_gpl+blk_put_request)) \
KEEP(*(___ksymtab_gpl+blk_queue_alignment_offset)) \
KEEP(*(___ksymtab_gpl+blk_queue_bounce_limit)) \
KEEP(*(___ksymtab_gpl+blk_queue_dma_alignment)) \
KEEP(*(___ksymtab_gpl+blk_queue_flush)) \
KEEP(*(___ksymtab_gpl+blk_queue_flush_queueable)) \
KEEP(*(___ksymtab_gpl+blk_queue_io_min)) \
KEEP(*(___ksymtab_gpl+blk_queue_io_opt)) \
KEEP(*(___ksymtab_gpl+blk_queue_lld_busy)) \
KEEP(*(___ksymtab_gpl+blk_queue_logical_block_size)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_hw_sectors)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_segment_size)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_segments)) \
KEEP(*(___ksymtab_gpl+blk_queue_max_write_same_sectors)) \
KEEP(*(___ksymtab_gpl+blk_queue_physical_block_size)) \
KEEP(*(___ksymtab_gpl+blk_queue_prep_rq)) \
KEEP(*(___ksymtab_gpl+blk_queue_resize_tags)) \
KEEP(*(___ksymtab_gpl+blk_queue_rq_timed_out)) \
KEEP(*(___ksymtab_gpl+blk_queue_rq_timeout)) \
KEEP(*(___ksymtab_gpl+blk_queue_segment_boundary)) \
KEEP(*(___ksymtab_gpl+blk_queue_softirq_done)) \
KEEP(*(___ksymtab_gpl+blk_queue_start_tag)) \
KEEP(*(___ksymtab_gpl+blk_queue_unprep_rq)) \
KEEP(*(___ksymtab_gpl+blk_queue_update_dma_alignment)) \
KEEP(*(___ksymtab_gpl+blk_queue_update_dma_pad)) \
KEEP(*(___ksymtab_gpl+blk_register_region)) \
KEEP(*(___ksymtab_gpl+blk_requeue_request)) \
KEEP(*(___ksymtab_gpl+blk_rq_init)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_kern)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_sg)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_user)) \
KEEP(*(___ksymtab_gpl+blk_rq_map_user_iov)) \
KEEP(*(___ksymtab_gpl+blk_rq_unmap_user)) \
KEEP(*(___ksymtab_gpl+blk_run_queue)) \
KEEP(*(___ksymtab_gpl+blk_run_queue_async)) \
KEEP(*(___ksymtab_gpl+blk_start_queue)) \
KEEP(*(___ksymtab_gpl+blk_start_request)) \
KEEP(*(___ksymtab_gpl+blk_stop_queue)) \
KEEP(*(___ksymtab_gpl+blk_unprep_request)) \
KEEP(*(___ksymtab_gpl+blk_unregister_region)) \
KEEP(*(___ksymtab_gpl+blk_update_request)) \
KEEP(*(___ksymtab_gpl+blk_verify_command)) \
KEEP(*(___ksymtab_gpl+block_is_partially_uptodate)) \
KEEP(*(___ksymtab_gpl+blocking_notifier_call_chain)) \
KEEP(*(___ksymtab_gpl+blocking_notifier_chain_register)) \
KEEP(*(___ksymtab_gpl+blocking_notifier_chain_unregister)) \
KEEP(*(___ksymtab_gpl+boot_tvec_bases)) \
KEEP(*(___ksymtab_gpl+br_should_route_hook)) \
KEEP(*(___ksymtab_gpl+brnf_call_ebtables)) \
KEEP(*(___ksymtab_gpl+build_ehash_secret)) \
KEEP(*(___ksymtab_gpl+bus_find_device)) \
KEEP(*(___ksymtab_gpl+bus_find_device_by_name)) \
KEEP(*(___ksymtab_gpl+bus_for_each_dev)) \
KEEP(*(___ksymtab_gpl+bus_get_device_klist)) \
KEEP(*(___ksymtab_gpl+bus_register)) \
KEEP(*(___ksymtab_gpl+bus_register_notifier)) \
KEEP(*(___ksymtab_gpl+bus_sort_breadthfirst)) \
KEEP(*(___ksymtab_gpl+bus_unregister)) \
KEEP(*(___ksymtab_gpl+bus_unregister_notifier)) \
KEEP(*(___ksymtab_gpl+cacheable_memcpy)) \
KEEP(*(___ksymtab_gpl+call_netdevice_notifiers)) \
KEEP(*(___ksymtab_gpl+call_netdevice_notifiers_info)) \
KEEP(*(___ksymtab_gpl+call_netevent_notifiers)) \
KEEP(*(___ksymtab_gpl+call_rcu_sched)) \
KEEP(*(___ksymtab_gpl+call_usermodehelper_setup)) \
KEEP(*(___ksymtab_gpl+cancel_delayed_work)) \
KEEP(*(___ksymtab_gpl+cancel_delayed_work_sync)) \
KEEP(*(___ksymtab_gpl+cancel_work_sync)) \
KEEP(*(___ksymtab_gpl+capable)) \
KEEP(*(___ksymtab_gpl+cdev_add)) \
KEEP(*(___ksymtab_gpl+cdev_alloc)) \
KEEP(*(___ksymtab_gpl+cdev_del)) \
KEEP(*(___ksymtab_gpl+cdev_init)) \
KEEP(*(___ksymtab_gpl+cfi_fixup)) \
KEEP(*(___ksymtab_gpl+check_disk_change)) \
KEEP(*(___ksymtab_gpl+check_submounts_and_drop)) \
KEEP(*(___ksymtab_gpl+class_destroy)) \
KEEP(*(___ksymtab_gpl+class_find_device)) \
KEEP(*(___ksymtab_gpl+class_interface_register)) \
KEEP(*(___ksymtab_gpl+class_interface_unregister)) \
KEEP(*(___ksymtab_gpl+class_unregister)) \
KEEP(*(___ksymtab_gpl+cleanup_srcu_struct)) \
KEEP(*(___ksymtab_gpl+clear_inode)) \
KEEP(*(___ksymtab_gpl+clear_nlink)) \
KEEP(*(___ksymtab_gpl+clear_page_dirty_for_io)) \
KEEP(*(___ksymtab_gpl+clock_t_to_jiffies)) \
KEEP(*(___ksymtab_gpl+complete)) \
KEEP(*(___ksymtab_gpl+complete_all)) \
KEEP(*(___ksymtab_gpl+complete_and_exit)) \
KEEP(*(___ksymtab_gpl+console_conditional_schedule)) \
KEEP(*(___ksymtab_gpl+consume_skb)) \
KEEP(*(___ksymtab_gpl+contig_page_data)) \
KEEP(*(___ksymtab_gpl+cookie_check_timestamp)) \
KEEP(*(___ksymtab_gpl+cpu_add_dev_attr_group)) \
KEEP(*(___ksymtab_gpl+cpu_remove_dev_attr_group)) \
KEEP(*(___ksymtab_gpl+crc32_be)) \
KEEP(*(___ksymtab_gpl+crc32_le)) \
KEEP(*(___ksymtab_gpl+crypto_ablkcipher_type)) \
KEEP(*(___ksymtab_gpl+crypto_aead_type)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_digest)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_finup)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_setkey)) \
KEEP(*(___ksymtab_gpl+crypto_ahash_type)) \
KEEP(*(___ksymtab_gpl+crypto_alg_lookup)) \
KEEP(*(___ksymtab_gpl+crypto_alg_mod_lookup)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_ablkcipher)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_ahash)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_base)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_instance2)) \
KEEP(*(___ksymtab_gpl+crypto_alloc_shash)) \
KEEP(*(___ksymtab_gpl+crypto_attr_alg2)) \
KEEP(*(___ksymtab_gpl+crypto_check_attr_type)) \
KEEP(*(___ksymtab_gpl+crypto_destroy_tfm)) \
KEEP(*(___ksymtab_gpl+crypto_has_alg)) \
KEEP(*(___ksymtab_gpl+crypto_init_spawn)) \
KEEP(*(___ksymtab_gpl+crypto_init_spawn2)) \
KEEP(*(___ksymtab_gpl+crypto_larval_lookup)) \
KEEP(*(___ksymtab_gpl+crypto_lookup_aead)) \
KEEP(*(___ksymtab_gpl+crypto_lookup_skcipher)) \
KEEP(*(___ksymtab_gpl+crypto_lookup_template)) \
KEEP(*(___ksymtab_gpl+crypto_mod_put)) \
KEEP(*(___ksymtab_gpl+crypto_register_ahash)) \
KEEP(*(___ksymtab_gpl+crypto_register_alg)) \
KEEP(*(___ksymtab_gpl+crypto_register_algs)) \
KEEP(*(___ksymtab_gpl+crypto_register_instance)) \
KEEP(*(___ksymtab_gpl+crypto_register_notifier)) \
KEEP(*(___ksymtab_gpl+crypto_register_pcomp)) \
KEEP(*(___ksymtab_gpl+crypto_register_shash)) \
KEEP(*(___ksymtab_gpl+crypto_register_shashes)) \
KEEP(*(___ksymtab_gpl+crypto_register_template)) \
KEEP(*(___ksymtab_gpl+crypto_sha1_update)) \
KEEP(*(___ksymtab_gpl+crypto_sha256_update)) \
KEEP(*(___ksymtab_gpl+crypto_shash_final)) \
KEEP(*(___ksymtab_gpl+crypto_shash_finup)) \
KEEP(*(___ksymtab_gpl+crypto_shash_setkey)) \
KEEP(*(___ksymtab_gpl+crypto_shash_update)) \
KEEP(*(___ksymtab_gpl+crypto_spawn_tfm)) \
KEEP(*(___ksymtab_gpl+crypto_spawn_tfm2)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_ahash)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_alg)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_algs)) \
KEEP(*(___ksymtab_gpl+crypto_unregister_template)) \
KEEP(*(___ksymtab_gpl+crypto_xor)) \
KEEP(*(___ksymtab_gpl+csum_ipv6_magic)) \
KEEP(*(___ksymtab_gpl+csum_partial)) \
KEEP(*(___ksymtab_gpl+csum_partial_copy_fromiovecend)) \
KEEP(*(___ksymtab_gpl+csum_partial_copy_generic)) \
KEEP(*(___ksymtab_gpl+csum_tcpudp_magic)) \
KEEP(*(___ksymtab_gpl+cur_cpu_spec)) \
KEEP(*(___ksymtab_gpl+current_fs_time)) \
KEEP(*(___ksymtab_gpl+current_kernel_time)) \
KEEP(*(___ksymtab_gpl+current_umask)) \
KEEP(*(___ksymtab_gpl+d_alloc)) \
KEEP(*(___ksymtab_gpl+d_alloc_name)) \
KEEP(*(___ksymtab_gpl+d_alloc_pseudo)) \
KEEP(*(___ksymtab_gpl+d_delete)) \
KEEP(*(___ksymtab_gpl+d_drop)) \
KEEP(*(___ksymtab_gpl+d_hash_and_lookup)) \
KEEP(*(___ksymtab_gpl+d_instantiate)) \
KEEP(*(___ksymtab_gpl+d_instantiate_unique)) \
KEEP(*(___ksymtab_gpl+d_invalidate)) \
KEEP(*(___ksymtab_gpl+d_lookup)) \
KEEP(*(___ksymtab_gpl+d_make_root)) \
KEEP(*(___ksymtab_gpl+d_materialise_unique)) \
KEEP(*(___ksymtab_gpl+d_obtain_alias)) \
KEEP(*(___ksymtab_gpl+d_rehash)) \
KEEP(*(___ksymtab_gpl+d_splice_alias)) \
KEEP(*(___ksymtab_gpl+datagram_poll)) \
KEEP(*(___ksymtab_gpl+deactivate_locked_super)) \
KEEP(*(___ksymtab_gpl+deactivate_super)) \
KEEP(*(___ksymtab_gpl+debugfs_create_bool)) \
KEEP(*(___ksymtab_gpl+debugfs_create_dir)) \
KEEP(*(___ksymtab_gpl+debugfs_create_file)) \
KEEP(*(___ksymtab_gpl+debugfs_create_symlink)) \
KEEP(*(___ksymtab_gpl+debugfs_create_u32)) \
KEEP(*(___ksymtab_gpl+debugfs_create_u32_array)) \
KEEP(*(___ksymtab_gpl+debugfs_create_u64)) \
KEEP(*(___ksymtab_gpl+debugfs_create_u8)) \
KEEP(*(___ksymtab_gpl+debugfs_create_x32)) \
KEEP(*(___ksymtab_gpl+debugfs_remove)) \
KEEP(*(___ksymtab_gpl+debugfs_remove_recursive)) \
KEEP(*(___ksymtab_gpl+debugfs_rename)) \
KEEP(*(___ksymtab_gpl+default_backing_dev_info)) \
KEEP(*(___ksymtab_gpl+default_llseek)) \
KEEP(*(___ksymtab_gpl+default_wake_function)) \
KEEP(*(___ksymtab_gpl+del_gendisk)) \
KEEP(*(___ksymtab_gpl+del_timer)) \
KEEP(*(___ksymtab_gpl+delayed_work_timer_fn)) \
KEEP(*(___ksymtab_gpl+dentry_unhash)) \
KEEP(*(___ksymtab_gpl+dentry_update_name_case)) \
KEEP(*(___ksymtab_gpl+dequeue_signal)) \
KEEP(*(___ksymtab_gpl+destroy_workqueue)) \
KEEP(*(___ksymtab_gpl+dev_add_pack)) \
KEEP(*(___ksymtab_gpl+dev_alloc_name)) \
KEEP(*(___ksymtab_gpl+dev_change_net_namespace)) \
KEEP(*(___ksymtab_gpl+dev_close)) \
KEEP(*(___ksymtab_gpl+dev_disable_lro)) \
KEEP(*(___ksymtab_gpl+dev_driver_string)) \
KEEP(*(___ksymtab_gpl+dev_err)) \
KEEP(*(___ksymtab_gpl+dev_forward_skb)) \
KEEP(*(___ksymtab_gpl+dev_get_by_flags_rcu)) \
KEEP(*(___ksymtab_gpl+dev_get_by_index)) \
KEEP(*(___ksymtab_gpl+dev_get_by_index_rcu)) \
KEEP(*(___ksymtab_gpl+dev_get_by_name)) \
KEEP(*(___ksymtab_gpl+dev_get_by_name_rcu)) \
KEEP(*(___ksymtab_gpl+dev_get_drvdata)) \
KEEP(*(___ksymtab_gpl+dev_get_flags)) \
KEEP(*(___ksymtab_gpl+dev_get_stats)) \
KEEP(*(___ksymtab_gpl+dev_kfree_skb_any)) \
KEEP(*(___ksymtab_gpl+dev_kfree_skb_irq)) \
KEEP(*(___ksymtab_gpl+dev_loopback_xmit)) \
KEEP(*(___ksymtab_gpl+dev_mc_add)) \
KEEP(*(___ksymtab_gpl+dev_mc_add_excl)) \
KEEP(*(___ksymtab_gpl+dev_mc_add_global)) \
KEEP(*(___ksymtab_gpl+dev_mc_del)) \
KEEP(*(___ksymtab_gpl+dev_mc_del_global)) \
KEEP(*(___ksymtab_gpl+dev_mc_flush)) \
KEEP(*(___ksymtab_gpl+dev_mc_sync)) \
KEEP(*(___ksymtab_gpl+dev_mc_sync_multiple)) \
KEEP(*(___ksymtab_gpl+dev_mc_unsync)) \
KEEP(*(___ksymtab_gpl+dev_notice)) \
KEEP(*(___ksymtab_gpl+dev_open)) \
KEEP(*(___ksymtab_gpl+dev_printk)) \
KEEP(*(___ksymtab_gpl+dev_printk_emit)) \
KEEP(*(___ksymtab_gpl+dev_queue_xmit)) \
KEEP(*(___ksymtab_gpl+dev_remove_pack)) \
KEEP(*(___ksymtab_gpl+dev_set_allmulti)) \
KEEP(*(___ksymtab_gpl+dev_set_drvdata)) \
KEEP(*(___ksymtab_gpl+dev_set_group)) \
KEEP(*(___ksymtab_gpl+dev_set_mac_address)) \
KEEP(*(___ksymtab_gpl+dev_set_mtu)) \
KEEP(*(___ksymtab_gpl+dev_set_name)) \
KEEP(*(___ksymtab_gpl+dev_set_promiscuity)) \
KEEP(*(___ksymtab_gpl+dev_trans_start)) \
KEEP(*(___ksymtab_gpl+dev_uc_flush)) \
KEEP(*(___ksymtab_gpl+dev_uc_sync)) \
KEEP(*(___ksymtab_gpl+dev_uc_sync_multiple)) \
KEEP(*(___ksymtab_gpl+dev_uc_unsync)) \
KEEP(*(___ksymtab_gpl+dev_valid_name)) \
KEEP(*(___ksymtab_gpl+dev_vprintk_emit)) \
KEEP(*(___ksymtab_gpl+dev_warn)) \
KEEP(*(___ksymtab_gpl+device_add)) \
KEEP(*(___ksymtab_gpl+device_attach)) \
KEEP(*(___ksymtab_gpl+device_bind_driver)) \
KEEP(*(___ksymtab_gpl+device_create)) \
KEEP(*(___ksymtab_gpl+device_create_bin_file)) \
KEEP(*(___ksymtab_gpl+device_create_file)) \
KEEP(*(___ksymtab_gpl+device_create_vargs)) \
KEEP(*(___ksymtab_gpl+device_create_with_groups)) \
KEEP(*(___ksymtab_gpl+device_del)) \
KEEP(*(___ksymtab_gpl+device_destroy)) \
KEEP(*(___ksymtab_gpl+device_for_each_child)) \
KEEP(*(___ksymtab_gpl+device_initialize)) \
KEEP(*(___ksymtab_gpl+device_register)) \
KEEP(*(___ksymtab_gpl+device_release_driver)) \
KEEP(*(___ksymtab_gpl+device_remove_bin_file)) \
KEEP(*(___ksymtab_gpl+device_remove_file)) \
KEEP(*(___ksymtab_gpl+device_rename)) \
KEEP(*(___ksymtab_gpl+device_schedule_callback_owner)) \
KEEP(*(___ksymtab_gpl+device_unregister)) \
KEEP(*(___ksymtab_gpl+devm_free_irq)) \
KEEP(*(___ksymtab_gpl+devm_ioremap)) \
KEEP(*(___ksymtab_gpl+devm_ioremap_nocache)) \
KEEP(*(___ksymtab_gpl+devm_ioremap_prot)) \
KEEP(*(___ksymtab_gpl+devm_ioremap_resource)) \
KEEP(*(___ksymtab_gpl+devm_iounmap)) \
KEEP(*(___ksymtab_gpl+devm_kfree)) \
KEEP(*(___ksymtab_gpl+devm_kzalloc)) \
KEEP(*(___ksymtab_gpl+devm_request_and_ioremap)) \
KEEP(*(___ksymtab_gpl+devm_request_threaded_irq)) \
KEEP(*(___ksymtab_gpl+devres_close_group)) \
KEEP(*(___ksymtab_gpl+devres_open_group)) \
KEEP(*(___ksymtab_gpl+devres_release_group)) \
KEEP(*(___ksymtab_gpl+devres_remove_group)) \
KEEP(*(___ksymtab_gpl+dirty_writeback_interval)) \
KEEP(*(___ksymtab_gpl+disable_irq_nosync)) \
KEEP(*(___ksymtab_gpl+disallow_signal)) \
KEEP(*(___ksymtab_gpl+dma_async_device_register)) \
KEEP(*(___ksymtab_gpl+dma_async_device_unregister)) \
KEEP(*(___ksymtab_gpl+dma_async_memcpy_buf_to_buf)) \
KEEP(*(___ksymtab_gpl+dma_async_memcpy_buf_to_pg)) \
KEEP(*(___ksymtab_gpl+dma_async_memcpy_pg_to_pg)) \
KEEP(*(___ksymtab_gpl+dma_pool_alloc)) \
KEEP(*(___ksymtab_gpl+dma_pool_create)) \
KEEP(*(___ksymtab_gpl+dma_pool_destroy)) \
KEEP(*(___ksymtab_gpl+dma_pool_free)) \
KEEP(*(___ksymtab_gpl+dma_set_mask)) \
KEEP(*(___ksymtab_gpl+dmam_alloc_coherent)) \
KEEP(*(___ksymtab_gpl+do_gettimeofday)) \
KEEP(*(___ksymtab_gpl+do_sync_read)) \
KEEP(*(___ksymtab_gpl+do_sync_write)) \
KEEP(*(___ksymtab_gpl+down)) \
KEEP(*(___ksymtab_gpl+down_interruptible)) \
KEEP(*(___ksymtab_gpl+down_killable)) \
KEEP(*(___ksymtab_gpl+down_read)) \
KEEP(*(___ksymtab_gpl+down_read_trylock)) \
KEEP(*(___ksymtab_gpl+down_timeout)) \
KEEP(*(___ksymtab_gpl+down_trylock)) \
KEEP(*(___ksymtab_gpl+down_write)) \
KEEP(*(___ksymtab_gpl+down_write_trylock)) \
KEEP(*(___ksymtab_gpl+downgrade_write)) \
KEEP(*(___ksymtab_gpl+dput)) \
KEEP(*(___ksymtab_gpl+dql_completed)) \
KEEP(*(___ksymtab_gpl+driver_attach)) \
KEEP(*(___ksymtab_gpl+driver_create_file)) \
KEEP(*(___ksymtab_gpl+driver_register)) \
KEEP(*(___ksymtab_gpl+driver_remove_file)) \
KEEP(*(___ksymtab_gpl+driver_unregister)) \
KEEP(*(___ksymtab_gpl+drop_nlink)) \
KEEP(*(___ksymtab_gpl+drop_super)) \
KEEP(*(___ksymtab_gpl+dst_alloc)) \
KEEP(*(___ksymtab_gpl+dst_cow_metrics_generic)) \
KEEP(*(___ksymtab_gpl+dst_destroy)) \
KEEP(*(___ksymtab_gpl+dst_discard)) \
KEEP(*(___ksymtab_gpl+dst_release)) \
KEEP(*(___ksymtab_gpl+dump_stack)) \
KEEP(*(___ksymtab_gpl+elv_dispatch_sort)) \
KEEP(*(___ksymtab_gpl+enable_irq)) \
KEEP(*(___ksymtab_gpl+end_page_writeback)) \
KEEP(*(___ksymtab_gpl+eth_commit_mac_addr_change)) \
KEEP(*(___ksymtab_gpl+eth_header_cache_update)) \
KEEP(*(___ksymtab_gpl+eth_mac_addr)) \
KEEP(*(___ksymtab_gpl+eth_prepare_mac_addr_change)) \
KEEP(*(___ksymtab_gpl+eth_type_trans)) \
KEEP(*(___ksymtab_gpl+eth_validate_addr)) \
KEEP(*(___ksymtab_gpl+ether_setup)) \
KEEP(*(___ksymtab_gpl+ethtool_op_get_link)) \
KEEP(*(___ksymtab_gpl+ethtool_op_get_ts_info)) \
KEEP(*(___ksymtab_gpl+eventfd_ctx_remove_wait_queue)) \
KEEP(*(___ksymtab_gpl+ewma_add)) \
KEEP(*(___ksymtab_gpl+ewma_init)) \
KEEP(*(___ksymtab_gpl+execute_in_process_context)) \
KEEP(*(___ksymtab_gpl+fasync_helper)) \
KEEP(*(___ksymtab_gpl+fib_default_rule_add)) \
KEEP(*(___ksymtab_gpl+fib_rules_lookup)) \
KEEP(*(___ksymtab_gpl+fib_rules_register)) \
KEEP(*(___ksymtab_gpl+fib_rules_unregister)) \
KEEP(*(___ksymtab_gpl+fib_table_lookup)) \
KEEP(*(___ksymtab_gpl+file_ns_capable)) \
KEEP(*(___ksymtab_gpl+file_update_time)) \
KEEP(*(___ksymtab_gpl+filemap_fault)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawait)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawait_range)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawrite)) \
KEEP(*(___ksymtab_gpl+filemap_fdatawrite_range)) \
KEEP(*(___ksymtab_gpl+filemap_write_and_wait)) \
KEEP(*(___ksymtab_gpl+filemap_write_and_wait_range)) \
KEEP(*(___ksymtab_gpl+find_get_pages_tag)) \
KEEP(*(___ksymtab_gpl+find_next_bit)) \
KEEP(*(___ksymtab_gpl+find_next_bit_le)) \
KEEP(*(___ksymtab_gpl+find_next_zero_bit)) \
KEEP(*(___ksymtab_gpl+find_next_zero_bit_le)) \
KEEP(*(___ksymtab_gpl+find_or_create_page)) \
KEEP(*(___ksymtab_gpl+finish_no_open)) \
KEEP(*(___ksymtab_gpl+finish_open)) \
KEEP(*(___ksymtab_gpl+finish_wait)) \
KEEP(*(___ksymtab_gpl+flow_cache_lookup)) \
KEEP(*(___ksymtab_gpl+flush_dcache_page)) \
KEEP(*(___ksymtab_gpl+flush_delayed_work)) \
KEEP(*(___ksymtab_gpl+flush_scheduled_work)) \
KEEP(*(___ksymtab_gpl+flush_signals)) \
KEEP(*(___ksymtab_gpl+flush_work)) \
KEEP(*(___ksymtab_gpl+flush_workqueue)) \
KEEP(*(___ksymtab_gpl+follow_down)) \
KEEP(*(___ksymtab_gpl+follow_down_one)) \
KEEP(*(___ksymtab_gpl+follow_up)) \
KEEP(*(___ksymtab_gpl+force_sig)) \
KEEP(*(___ksymtab_gpl+fput)) \
KEEP(*(___ksymtab_gpl+free_irq)) \
KEEP(*(___ksymtab_gpl+free_netdev)) \
KEEP(*(___ksymtab_gpl+free_pages)) \
KEEP(*(___ksymtab_gpl+free_pages_exact)) \
KEEP(*(___ksymtab_gpl+free_percpu)) \
KEEP(*(___ksymtab_gpl+freeze_super)) \
KEEP(*(___ksymtab_gpl+fs_overflowgid)) \
KEEP(*(___ksymtab_gpl+fs_overflowuid)) \
KEEP(*(___ksymtab_gpl+fsl_get_sys_freq)) \
KEEP(*(___ksymtab_gpl+fsl_upm_find)) \
KEEP(*(___ksymtab_gpl+fsl_upm_run_pattern)) \
KEEP(*(___ksymtab_gpl+full_name_hash)) \
KEEP(*(___ksymtab_gpl+generic_delete_inode)) \
KEEP(*(___ksymtab_gpl+generic_fh_to_dentry)) \
KEEP(*(___ksymtab_gpl+generic_fh_to_parent)) \
KEEP(*(___ksymtab_gpl+generic_file_aio_read)) \
KEEP(*(___ksymtab_gpl+generic_file_aio_write)) \
KEEP(*(___ksymtab_gpl+generic_file_llseek)) \
KEEP(*(___ksymtab_gpl+generic_file_llseek_size)) \
KEEP(*(___ksymtab_gpl+generic_file_mmap)) \
KEEP(*(___ksymtab_gpl+generic_file_open)) \
KEEP(*(___ksymtab_gpl+generic_file_readonly_mmap)) \
KEEP(*(___ksymtab_gpl+generic_file_remap_pages)) \
KEEP(*(___ksymtab_gpl+generic_file_splice_read)) \
KEEP(*(___ksymtab_gpl+generic_fillattr)) \
KEEP(*(___ksymtab_gpl+generic_permission)) \
KEEP(*(___ksymtab_gpl+generic_read_dir)) \
KEEP(*(___ksymtab_gpl+generic_readlink)) \
KEEP(*(___ksymtab_gpl+generic_setlease)) \
KEEP(*(___ksymtab_gpl+generic_shutdown_super)) \
KEEP(*(___ksymtab_gpl+generic_write_checks)) \
KEEP(*(___ksymtab_gpl+generic_write_sync)) \
KEEP(*(___ksymtab_gpl+generic_writepages)) \
KEEP(*(___ksymtab_gpl+genl_lock)) \
KEEP(*(___ksymtab_gpl+genl_register_mc_group)) \
KEEP(*(___ksymtab_gpl+genl_unlock)) \
KEEP(*(___ksymtab_gpl+genl_unregister_family)) \
KEEP(*(___ksymtab_gpl+genl_unregister_mc_group)) \
KEEP(*(___ksymtab_gpl+genlmsg_multicast_allns)) \
KEEP(*(___ksymtab_gpl+genlmsg_put)) \
KEEP(*(___ksymtab_gpl+genphy_update_link)) \
KEEP(*(___ksymtab_gpl+get_device)) \
KEEP(*(___ksymtab_gpl+get_immrbase)) \
KEEP(*(___ksymtab_gpl+get_jiffies_64)) \
KEEP(*(___ksymtab_gpl+get_net_ns_by_pid)) \
KEEP(*(___ksymtab_gpl+get_next_ino)) \
KEEP(*(___ksymtab_gpl+get_random_bytes)) \
KEEP(*(___ksymtab_gpl+get_random_bytes_arch)) \
KEEP(*(___ksymtab_gpl+get_seconds)) \
KEEP(*(___ksymtab_gpl+get_super)) \
KEEP(*(___ksymtab_gpl+get_super_thawed)) \
KEEP(*(___ksymtab_gpl+get_task_pid)) \
KEEP(*(___ksymtab_gpl+giveup_fpu)) \
KEEP(*(___ksymtab_gpl+gnet_stats_copy_app)) \
KEEP(*(___ksymtab_gpl+gnet_stats_copy_queue)) \
KEEP(*(___ksymtab_gpl+grab_cache_page_write_begin)) \
KEEP(*(___ksymtab_gpl+groups_alloc)) \
KEEP(*(___ksymtab_gpl+groups_free)) \
KEEP(*(___ksymtab_gpl+hex_asc_upper)) \
KEEP(*(___ksymtab_gpl+hex_to_bin)) \
KEEP(*(___ksymtab_gpl+high_memory)) \
KEEP(*(___ksymtab_gpl+hrtimer_cancel)) \
KEEP(*(___ksymtab_gpl+hrtimer_init)) \
KEEP(*(___ksymtab_gpl+hrtimer_init_sleeper)) \
KEEP(*(___ksymtab_gpl+hrtimer_start_range_ns)) \
KEEP(*(___ksymtab_gpl+hwmon_device_register)) \
KEEP(*(___ksymtab_gpl+hwmon_device_unregister)) \
KEEP(*(___ksymtab_gpl+hwrng_register)) \
KEEP(*(___ksymtab_gpl+hwrng_unregister)) \
KEEP(*(___ksymtab_gpl+icmp_send)) \
KEEP(*(___ksymtab_gpl+icmpv6_send)) \
KEEP(*(___ksymtab_gpl+ida_get_new_above)) \
KEEP(*(___ksymtab_gpl+ida_pre_get)) \
KEEP(*(___ksymtab_gpl+ida_remove)) \
KEEP(*(___ksymtab_gpl+idr_alloc)) \
KEEP(*(___ksymtab_gpl+idr_alloc_cyclic)) \
KEEP(*(___ksymtab_gpl+idr_destroy)) \
KEEP(*(___ksymtab_gpl+idr_find_slowpath)) \
KEEP(*(___ksymtab_gpl+idr_for_each)) \
KEEP(*(___ksymtab_gpl+idr_init)) \
KEEP(*(___ksymtab_gpl+idr_preload)) \
KEEP(*(___ksymtab_gpl+idr_remove)) \
KEEP(*(___ksymtab_gpl+iget5_locked)) \
KEEP(*(___ksymtab_gpl+iget_failed)) \
KEEP(*(___ksymtab_gpl+iget_locked)) \
KEEP(*(___ksymtab_gpl+ihold)) \
KEEP(*(___ksymtab_gpl+ilookup)) \
KEEP(*(___ksymtab_gpl+ilookup5)) \
KEEP(*(___ksymtab_gpl+ilookup5_nowait)) \
KEEP(*(___ksymtab_gpl+in4_pton)) \
KEEP(*(___ksymtab_gpl+in6_dev_finish_destroy)) \
KEEP(*(___ksymtab_gpl+in6_pton)) \
KEEP(*(___ksymtab_gpl+in6addr_any)) \
KEEP(*(___ksymtab_gpl+in6addr_interfacelocal_allnodes)) \
KEEP(*(___ksymtab_gpl+in6addr_interfacelocal_allrouters)) \
KEEP(*(___ksymtab_gpl+in6addr_linklocal_allnodes)) \
KEEP(*(___ksymtab_gpl+in6addr_linklocal_allrouters)) \
KEEP(*(___ksymtab_gpl+in6addr_loopback)) \
KEEP(*(___ksymtab_gpl+in6addr_sitelocal_allrouters)) \
KEEP(*(___ksymtab_gpl+in_aton)) \
KEEP(*(___ksymtab_gpl+in_egroup_p)) \
KEEP(*(___ksymtab_gpl+in_group_p)) \
KEEP(*(___ksymtab_gpl+inc_nlink)) \
KEEP(*(___ksymtab_gpl+inet6_add_protocol)) \
KEEP(*(___ksymtab_gpl+inet6_del_protocol)) \
KEEP(*(___ksymtab_gpl+inet6_hash_connect)) \
KEEP(*(___ksymtab_gpl+inet6_lookup)) \
KEEP(*(___ksymtab_gpl+inet6_lookup_listener)) \
KEEP(*(___ksymtab_gpl+inet6_protos)) \
KEEP(*(___ksymtab_gpl+inet6_register_icmp_sender)) \
KEEP(*(___ksymtab_gpl+inet6_unregister_icmp_sender)) \
KEEP(*(___ksymtab_gpl+inet6addr_notifier_call_chain)) \
KEEP(*(___ksymtab_gpl+inet_accept)) \
KEEP(*(___ksymtab_gpl+inet_add_protocol)) \
KEEP(*(___ksymtab_gpl+inet_addr_type)) \
KEEP(*(___ksymtab_gpl+inet_bind)) \
KEEP(*(___ksymtab_gpl+inet_confirm_addr)) \
KEEP(*(___ksymtab_gpl+inet_csk_accept)) \
KEEP(*(___ksymtab_gpl+inet_csk_delete_keepalive_timer)) \
KEEP(*(___ksymtab_gpl+inet_csk_get_port)) \
KEEP(*(___ksymtab_gpl+inet_csk_prepare_forced_close)) \
KEEP(*(___ksymtab_gpl+inet_csk_reset_keepalive_timer)) \
KEEP(*(___ksymtab_gpl+inet_csk_update_pmtu)) \
KEEP(*(___ksymtab_gpl+inet_ctl_sock_create)) \
KEEP(*(___ksymtab_gpl+inet_del_protocol)) \
KEEP(*(___ksymtab_gpl+inet_dgram_connect)) \
KEEP(*(___ksymtab_gpl+inet_dgram_ops)) \
KEEP(*(___ksymtab_gpl+inet_ehash_secret)) \
KEEP(*(___ksymtab_gpl+inet_frag_destroy)) \
KEEP(*(___ksymtab_gpl+inet_frag_evictor)) \
KEEP(*(___ksymtab_gpl+inet_frag_find)) \
KEEP(*(___ksymtab_gpl+inet_frag_kill)) \
KEEP(*(___ksymtab_gpl+inet_frag_maybe_warn_overflow)) \
KEEP(*(___ksymtab_gpl+inet_frags_exit_net)) \
KEEP(*(___ksymtab_gpl+inet_frags_fini)) \
KEEP(*(___ksymtab_gpl+inet_frags_init)) \
KEEP(*(___ksymtab_gpl+inet_frags_init_net)) \
KEEP(*(___ksymtab_gpl+inet_getpeer)) \
KEEP(*(___ksymtab_gpl+inet_hash)) \
KEEP(*(___ksymtab_gpl+inet_hash_connect)) \
KEEP(*(___ksymtab_gpl+inet_hashinfo_init)) \
KEEP(*(___ksymtab_gpl+inet_ioctl)) \
KEEP(*(___ksymtab_gpl+inet_listen)) \
KEEP(*(___ksymtab_gpl+inet_peer_base_init)) \
KEEP(*(___ksymtab_gpl+inet_peer_xrlim_allow)) \
KEEP(*(___ksymtab_gpl+inet_putpeer)) \
KEEP(*(___ksymtab_gpl+inet_recvmsg)) \
KEEP(*(___ksymtab_gpl+inet_register_protosw)) \
KEEP(*(___ksymtab_gpl+inet_release)) \
KEEP(*(___ksymtab_gpl+inet_sendmsg)) \
KEEP(*(___ksymtab_gpl+inet_sendpage)) \
KEEP(*(___ksymtab_gpl+inet_shutdown)) \
KEEP(*(___ksymtab_gpl+inet_sk_rebuild_header)) \
KEEP(*(___ksymtab_gpl+inet_sk_rx_dst_set)) \
KEEP(*(___ksymtab_gpl+inet_sock_destruct)) \
KEEP(*(___ksymtab_gpl+inet_stream_connect)) \
KEEP(*(___ksymtab_gpl+inet_stream_ops)) \
KEEP(*(___ksymtab_gpl+inet_twsk_alloc)) \
KEEP(*(___ksymtab_gpl+inet_twsk_deschedule)) \
KEEP(*(___ksymtab_gpl+inet_twsk_purge)) \
KEEP(*(___ksymtab_gpl+inet_twsk_put)) \
KEEP(*(___ksymtab_gpl+inet_twsk_schedule)) \
KEEP(*(___ksymtab_gpl+inet_unhash)) \
KEEP(*(___ksymtab_gpl+inet_unregister_protosw)) \
KEEP(*(___ksymtab_gpl+inetpeer_invalidate_tree)) \
KEEP(*(___ksymtab_gpl+init_net)) \
KEEP(*(___ksymtab_gpl+init_pid_ns)) \
KEEP(*(___ksymtab_gpl+init_special_inode)) \
KEEP(*(___ksymtab_gpl+init_timer_key)) \
KEEP(*(___ksymtab_gpl+init_user_ns)) \
KEEP(*(___ksymtab_gpl+init_uts_ns)) \
KEEP(*(___ksymtab_gpl+inode_capable)) \
KEEP(*(___ksymtab_gpl+inode_change_ok)) \
KEEP(*(___ksymtab_gpl+inode_init_once)) \
KEEP(*(___ksymtab_gpl+inode_init_owner)) \
KEEP(*(___ksymtab_gpl+inode_owner_or_capable)) \
KEEP(*(___ksymtab_gpl+insert_inode_locked)) \
KEEP(*(___ksymtab_gpl+insert_inode_locked4)) \
KEEP(*(___ksymtab_gpl+interruptible_sleep_on)) \
KEEP(*(___ksymtab_gpl+interruptible_sleep_on_timeout)) \
KEEP(*(___ksymtab_gpl+invalidate_bdev)) \
KEEP(*(___ksymtab_gpl+invalidate_inode_pages2)) \
KEEP(*(___ksymtab_gpl+invalidate_inode_pages2_range)) \
KEEP(*(___ksymtab_gpl+io_schedule)) \
KEEP(*(___ksymtab_gpl+ioc_lookup_icq)) \
KEEP(*(___ksymtab_gpl+iomem_resource)) \
KEEP(*(___ksymtab_gpl+ioport_resource)) \
KEEP(*(___ksymtab_gpl+ioread32)) \
KEEP(*(___ksymtab_gpl+ioread32_rep)) \
KEEP(*(___ksymtab_gpl+ioread32be)) \
KEEP(*(___ksymtab_gpl+ioremap)) \
KEEP(*(___ksymtab_gpl+ioremap_bot)) \
KEEP(*(___ksymtab_gpl+ioremap_prot)) \
KEEP(*(___ksymtab_gpl+ioremap_wc)) \
KEEP(*(___ksymtab_gpl+iounmap)) \
KEEP(*(___ksymtab_gpl+iov_iter_advance)) \
KEEP(*(___ksymtab_gpl+iov_iter_copy_from_user)) \
KEEP(*(___ksymtab_gpl+iov_iter_copy_from_user_atomic)) \
KEEP(*(___ksymtab_gpl+iov_shorten)) \
KEEP(*(___ksymtab_gpl+iowrite32)) \
KEEP(*(___ksymtab_gpl+iowrite32_rep)) \
KEEP(*(___ksymtab_gpl+iowrite32be)) \
KEEP(*(___ksymtab_gpl+ip4_datagram_connect)) \
KEEP(*(___ksymtab_gpl+ip6_dst_hoplimit)) \
KEEP(*(___ksymtab_gpl+ip6_find_1stfragopt)) \
KEEP(*(___ksymtab_gpl+ip6_local_out)) \
KEEP(*(___ksymtab_gpl+ip_cmsg_recv)) \
KEEP(*(___ksymtab_gpl+ip_frag_ecn_table)) \
KEEP(*(___ksymtab_gpl+ip_generic_getfrag)) \
KEEP(*(___ksymtab_gpl+ip_getsockopt)) \
KEEP(*(___ksymtab_gpl+ip_local_out)) \
KEEP(*(___ksymtab_gpl+ip_mc_dec_group)) \
KEEP(*(___ksymtab_gpl+ip_mc_inc_group)) \
KEEP(*(___ksymtab_gpl+ip_mc_join_group)) \
KEEP(*(___ksymtab_gpl+ip_mc_leave_group)) \
KEEP(*(___ksymtab_gpl+ip_queue_xmit)) \
KEEP(*(___ksymtab_gpl+ip_route_input_noref)) \
KEEP(*(___ksymtab_gpl+ip_route_output_flow)) \
KEEP(*(___ksymtab_gpl+ip_setsockopt)) \
KEEP(*(___ksymtab_gpl+iptunnel_pull_header)) \
KEEP(*(___ksymtab_gpl+iptunnel_xmit)) \
KEEP(*(___ksymtab_gpl+iput)) \
KEEP(*(___ksymtab_gpl+ipv4_config)) \
KEEP(*(___ksymtab_gpl+ipv4_redirect)) \
KEEP(*(___ksymtab_gpl+ipv4_sk_update_pmtu)) \
KEEP(*(___ksymtab_gpl+ipv4_specific)) \
KEEP(*(___ksymtab_gpl+ipv4_update_pmtu)) \
KEEP(*(___ksymtab_gpl+ipv6_ext_hdr)) \
KEEP(*(___ksymtab_gpl+ipv6_hash_secret)) \
KEEP(*(___ksymtab_gpl+ipv6_select_ident)) \
KEEP(*(___ksymtab_gpl+ipv6_skip_exthdr)) \
KEEP(*(___ksymtab_gpl+ipv6_stub)) \
KEEP(*(___ksymtab_gpl+irq_dispose_mapping)) \
KEEP(*(___ksymtab_gpl+irq_of_parse_and_map)) \
KEEP(*(___ksymtab_gpl+is_bad_inode)) \
KEEP(*(___ksymtab_gpl+iterate_supers_type)) \
KEEP(*(___ksymtab_gpl+iunique)) \
KEEP(*(___ksymtab_gpl+jiffies)) \
KEEP(*(___ksymtab_gpl+jiffies_64)) \
KEEP(*(___ksymtab_gpl+jiffies_64_to_clock_t)) \
KEEP(*(___ksymtab_gpl+jiffies_to_clock_t)) \
KEEP(*(___ksymtab_gpl+jiffies_to_msecs)) \
KEEP(*(___ksymtab_gpl+jiffies_to_timespec)) \
KEEP(*(___ksymtab_gpl+jiffies_to_timeval)) \
KEEP(*(___ksymtab_gpl+jiffies_to_usecs)) \
KEEP(*(___ksymtab_gpl+kallsyms_lookup_name)) \
KEEP(*(___ksymtab_gpl+kasprintf)) \
KEEP(*(___ksymtab_gpl+kblockd_schedule_delayed_work)) \
KEEP(*(___ksymtab_gpl+kblockd_schedule_work)) \
KEEP(*(___ksymtab_gpl+kernel_bind)) \
KEEP(*(___ksymtab_gpl+kernel_connect)) \
KEEP(*(___ksymtab_gpl+kernel_recvmsg)) \
KEEP(*(___ksymtab_gpl+kernel_sendmsg)) \
KEEP(*(___ksymtab_gpl+kernel_setsockopt)) \
KEEP(*(___ksymtab_gpl+kernel_sock_shutdown)) \
KEEP(*(___ksymtab_gpl+kfree)) \
KEEP(*(___ksymtab_gpl+kfree_skb)) \
KEEP(*(___ksymtab_gpl+kfree_skb_list)) \
KEEP(*(___ksymtab_gpl+kfree_skb_partial)) \
KEEP(*(___ksymtab_gpl+kill_anon_super)) \
KEEP(*(___ksymtab_gpl+kill_block_super)) \
KEEP(*(___ksymtab_gpl+kill_fasync)) \
KEEP(*(___ksymtab_gpl+kill_litter_super)) \
KEEP(*(___ksymtab_gpl+kill_mtd_super)) \
KEEP(*(___ksymtab_gpl+kill_pid_info_as_cred)) \
KEEP(*(___ksymtab_gpl+kmalloc_caches)) \
KEEP(*(___ksymtab_gpl+kmem_cache_alloc)) \
KEEP(*(___ksymtab_gpl+kmem_cache_create)) \
KEEP(*(___ksymtab_gpl+kmem_cache_destroy)) \
KEEP(*(___ksymtab_gpl+kmem_cache_free)) \
KEEP(*(___ksymtab_gpl+kmemdup)) \
KEEP(*(___ksymtab_gpl+kobject_uevent)) \
KEEP(*(___ksymtab_gpl+kobject_uevent_env)) \
KEEP(*(___ksymtab_gpl+kstrdup)) \
KEEP(*(___ksymtab_gpl+kstrndup)) \
KEEP(*(___ksymtab_gpl+kstrtou8)) \
KEEP(*(___ksymtab_gpl+kstrtou8_from_user)) \
KEEP(*(___ksymtab_gpl+kstrtouint)) \
KEEP(*(___ksymtab_gpl+kstrtouint_from_user)) \
KEEP(*(___ksymtab_gpl+kstrtoul_from_user)) \
KEEP(*(___ksymtab_gpl+kstrtoull)) \
KEEP(*(___ksymtab_gpl+kstrtoull_from_user)) \
KEEP(*(___ksymtab_gpl+kthread_bind)) \
KEEP(*(___ksymtab_gpl+kthread_create_on_node)) \
KEEP(*(___ksymtab_gpl+kthread_should_stop)) \
KEEP(*(___ksymtab_gpl+kthread_stop)) \
KEEP(*(___ksymtab_gpl+ktime_get)) \
KEEP(*(___ksymtab_gpl+ktime_get_boottime)) \
KEEP(*(___ksymtab_gpl+ktime_get_clocktai)) \
KEEP(*(___ksymtab_gpl+ktime_get_monotonic_offset)) \
KEEP(*(___ksymtab_gpl+ktime_get_real)) \
KEEP(*(___ksymtab_gpl+ktime_get_ts)) \
KEEP(*(___ksymtab_gpl+kvasprintf)) \
KEEP(*(___ksymtab_gpl+kzfree)) \
KEEP(*(___ksymtab_gpl+led_blink_set)) \
KEEP(*(___ksymtab_gpl+led_blink_set_oneshot)) \
KEEP(*(___ksymtab_gpl+led_classdev_register)) \
KEEP(*(___ksymtab_gpl+led_classdev_unregister)) \
KEEP(*(___ksymtab_gpl+led_set_brightness)) \
KEEP(*(___ksymtab_gpl+led_trigger_blink_oneshot)) \
KEEP(*(___ksymtab_gpl+led_trigger_event)) \
KEEP(*(___ksymtab_gpl+led_trigger_register)) \
KEEP(*(___ksymtab_gpl+led_trigger_register_simple)) \
KEEP(*(___ksymtab_gpl+led_trigger_unregister)) \
KEEP(*(___ksymtab_gpl+led_trigger_unregister_simple)) \
KEEP(*(___ksymtab_gpl+list_sort)) \
KEEP(*(___ksymtab_gpl+load_nls)) \
KEEP(*(___ksymtab_gpl+load_nls_default)) \
KEEP(*(___ksymtab_gpl+local_bh_disable)) \
KEEP(*(___ksymtab_gpl+local_bh_enable)) \
KEEP(*(___ksymtab_gpl+local_bh_enable_ip)) \
KEEP(*(___ksymtab_gpl+lock_sock_fast)) \
KEEP(*(___ksymtab_gpl+lock_sock_nested)) \
KEEP(*(___ksymtab_gpl+lockref_get)) \
KEEP(*(___ksymtab_gpl+lockref_get_not_dead)) \
KEEP(*(___ksymtab_gpl+lockref_get_not_zero)) \
KEEP(*(___ksymtab_gpl+lockref_get_or_lock)) \
KEEP(*(___ksymtab_gpl+lookup_bdev)) \
KEEP(*(___ksymtab_gpl+lookup_one_len)) \
KEEP(*(___ksymtab_gpl+mac_pton)) \
KEEP(*(___ksymtab_gpl+macvlan_common_setup)) \
KEEP(*(___ksymtab_gpl+make_bad_inode)) \
KEEP(*(___ksymtab_gpl+match_int)) \
KEEP(*(___ksymtab_gpl+match_octal)) \
KEEP(*(___ksymtab_gpl+match_strdup)) \
KEEP(*(___ksymtab_gpl+match_strlcpy)) \
KEEP(*(___ksymtab_gpl+match_token)) \
KEEP(*(___ksymtab_gpl+mdiobus_register)) \
KEEP(*(___ksymtab_gpl+mdiobus_unregister)) \
KEEP(*(___ksymtab_gpl+mem_map)) \
KEEP(*(___ksymtab_gpl+memchr)) \
KEEP(*(___ksymtab_gpl+memchr_inv)) \
KEEP(*(___ksymtab_gpl+memcmp)) \
KEEP(*(___ksymtab_gpl+memcpy)) \
KEEP(*(___ksymtab_gpl+memcpy_fromiovec)) \
KEEP(*(___ksymtab_gpl+memcpy_fromiovecend)) \
KEEP(*(___ksymtab_gpl+memcpy_toiovec)) \
KEEP(*(___ksymtab_gpl+memcpy_toiovecend)) \
KEEP(*(___ksymtab_gpl+memdup_user)) \
KEEP(*(___ksymtab_gpl+memmove)) \
KEEP(*(___ksymtab_gpl+mempool_alloc)) \
KEEP(*(___ksymtab_gpl+mempool_alloc_pages)) \
KEEP(*(___ksymtab_gpl+mempool_alloc_slab)) \
KEEP(*(___ksymtab_gpl+mempool_create)) \
KEEP(*(___ksymtab_gpl+mempool_create_node)) \
KEEP(*(___ksymtab_gpl+mempool_destroy)) \
KEEP(*(___ksymtab_gpl+mempool_free)) \
KEEP(*(___ksymtab_gpl+mempool_free_pages)) \
KEEP(*(___ksymtab_gpl+mempool_free_slab)) \
KEEP(*(___ksymtab_gpl+mempool_kfree)) \
KEEP(*(___ksymtab_gpl+mempool_resize)) \
KEEP(*(___ksymtab_gpl+memset)) \
KEEP(*(___ksymtab_gpl+mii_check_gmii_support)) \
KEEP(*(___ksymtab_gpl+mii_ethtool_gset)) \
KEEP(*(___ksymtab_gpl+mii_ethtool_sset)) \
KEEP(*(___ksymtab_gpl+mii_link_ok)) \
KEEP(*(___ksymtab_gpl+mii_nway_restart)) \
KEEP(*(___ksymtab_gpl+misc_deregister)) \
KEEP(*(___ksymtab_gpl+misc_register)) \
KEEP(*(___ksymtab_gpl+mod_timer)) \
KEEP(*(___ksymtab_gpl+mod_timer_pending)) \
KEEP(*(___ksymtab_gpl+mod_timer_pinned)) \
KEEP(*(___ksymtab_gpl+module_put)) \
KEEP(*(___ksymtab_gpl+module_refcount)) \
KEEP(*(___ksymtab_gpl+mount_mtd)) \
KEEP(*(___ksymtab_gpl+mount_single)) \
KEEP(*(___ksymtab_gpl+msecs_to_jiffies)) \
KEEP(*(___ksymtab_gpl+msleep)) \
KEEP(*(___ksymtab_gpl+msleep_interruptible)) \
KEEP(*(___ksymtab_gpl+mtd_block_isbad)) \
KEEP(*(___ksymtab_gpl+mtd_block_markbad)) \
KEEP(*(___ksymtab_gpl+mtd_device_unregister)) \
KEEP(*(___ksymtab_gpl+mtd_erase)) \
KEEP(*(___ksymtab_gpl+mtd_erase_callback)) \
KEEP(*(___ksymtab_gpl+mtd_get_device_size)) \
KEEP(*(___ksymtab_gpl+mtd_kmalloc_up_to)) \
KEEP(*(___ksymtab_gpl+mtd_panic_write)) \
KEEP(*(___ksymtab_gpl+mtd_point)) \
KEEP(*(___ksymtab_gpl+mtd_read)) \
KEEP(*(___ksymtab_gpl+mtd_read_fact_prot_reg)) \
KEEP(*(___ksymtab_gpl+mtd_read_oob)) \
KEEP(*(___ksymtab_gpl+mtd_read_user_prot_reg)) \
KEEP(*(___ksymtab_gpl+mtd_unpoint)) \
KEEP(*(___ksymtab_gpl+mtd_write)) \
KEEP(*(___ksymtab_gpl+mtd_write_user_prot_reg)) \
KEEP(*(___ksymtab_gpl+mtd_writev)) \
KEEP(*(___ksymtab_gpl+mutex_lock)) \
KEEP(*(___ksymtab_gpl+mutex_lock_interruptible)) \
KEEP(*(___ksymtab_gpl+mutex_lock_killable)) \
KEEP(*(___ksymtab_gpl+mutex_trylock)) \
KEEP(*(___ksymtab_gpl+mutex_unlock)) \
KEEP(*(___ksymtab_gpl+n_tty_ioctl_helper)) \
KEEP(*(___ksymtab_gpl+napi_complete)) \
KEEP(*(___ksymtab_gpl+napi_gro_receive)) \
KEEP(*(___ksymtab_gpl+neigh_app_ns)) \
KEEP(*(___ksymtab_gpl+neigh_changeaddr)) \
KEEP(*(___ksymtab_gpl+neigh_connected_output)) \
KEEP(*(___ksymtab_gpl+neigh_destroy)) \
KEEP(*(___ksymtab_gpl+neigh_direct_output)) \
KEEP(*(___ksymtab_gpl+neigh_ifdown)) \
KEEP(*(___ksymtab_gpl+neigh_lookup)) \
KEEP(*(___ksymtab_gpl+neigh_lookup_nodev)) \
KEEP(*(___ksymtab_gpl+neigh_parms_alloc)) \
KEEP(*(___ksymtab_gpl+neigh_parms_release)) \
KEEP(*(___ksymtab_gpl+neigh_rand_reach_time)) \
KEEP(*(___ksymtab_gpl+neigh_resolve_output)) \
KEEP(*(___ksymtab_gpl+neigh_sysctl_register)) \
KEEP(*(___ksymtab_gpl+neigh_sysctl_unregister)) \
KEEP(*(___ksymtab_gpl+neigh_table_clear)) \
KEEP(*(___ksymtab_gpl+neigh_table_init)) \
KEEP(*(___ksymtab_gpl+neigh_update)) \
KEEP(*(___ksymtab_gpl+net_dma_find_channel)) \
KEEP(*(___ksymtab_gpl+net_msg_warn)) \
KEEP(*(___ksymtab_gpl+net_ns_type_operations)) \
KEEP(*(___ksymtab_gpl+net_ratelimit)) \
KEEP(*(___ksymtab_gpl+netdev_boot_setup_check)) \
KEEP(*(___ksymtab_gpl+netdev_change_features)) \
KEEP(*(___ksymtab_gpl+netdev_class_create_file)) \
KEEP(*(___ksymtab_gpl+netdev_class_remove_file)) \
KEEP(*(___ksymtab_gpl+netdev_err)) \
KEEP(*(___ksymtab_gpl+netdev_has_any_upper_dev)) \
KEEP(*(___ksymtab_gpl+netdev_has_upper_dev)) \
KEEP(*(___ksymtab_gpl+netdev_increment_features)) \
KEEP(*(___ksymtab_gpl+netdev_info)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_get)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_get_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_master_upper_dev_link)) \
KEEP(*(___ksymtab_gpl+netdev_max_backlog)) \
KEEP(*(___ksymtab_gpl+netdev_notice)) \
KEEP(*(___ksymtab_gpl+netdev_printk)) \
KEEP(*(___ksymtab_gpl+netdev_rx_handler_register)) \
KEEP(*(___ksymtab_gpl+netdev_rx_handler_unregister)) \
KEEP(*(___ksymtab_gpl+netdev_set_default_ethtool_ops)) \
KEEP(*(___ksymtab_gpl+netdev_state_change)) \
KEEP(*(___ksymtab_gpl+netdev_update_features)) \
KEEP(*(___ksymtab_gpl+netdev_upper_dev_link)) \
KEEP(*(___ksymtab_gpl+netdev_upper_dev_unlink)) \
KEEP(*(___ksymtab_gpl+netdev_upper_get_next_dev_rcu)) \
KEEP(*(___ksymtab_gpl+netdev_warn)) \
KEEP(*(___ksymtab_gpl+netif_carrier_off)) \
KEEP(*(___ksymtab_gpl+netif_carrier_on)) \
KEEP(*(___ksymtab_gpl+netif_device_attach)) \
KEEP(*(___ksymtab_gpl+netif_device_detach)) \
KEEP(*(___ksymtab_gpl+netif_get_num_default_rss_queues)) \
KEEP(*(___ksymtab_gpl+netif_napi_add)) \
KEEP(*(___ksymtab_gpl+netif_napi_del)) \
KEEP(*(___ksymtab_gpl+netif_receive_skb)) \
KEEP(*(___ksymtab_gpl+netif_rx)) \
KEEP(*(___ksymtab_gpl+netif_rx_ni)) \
KEEP(*(___ksymtab_gpl+netlink_broadcast)) \
KEEP(*(___ksymtab_gpl+netlink_broadcast_filtered)) \
KEEP(*(___ksymtab_gpl+netlink_kernel_release)) \
KEEP(*(___ksymtab_gpl+netlink_register_notifier)) \
KEEP(*(___ksymtab_gpl+netlink_unicast)) \
KEEP(*(___ksymtab_gpl+netlink_unregister_notifier)) \
KEEP(*(___ksymtab_gpl+new_inode)) \
KEEP(*(___ksymtab_gpl+nf_afinfo)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_destroy)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_find_get)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_helper_register)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_helper_try_module_get)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_helper_unregister)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_register_notifier)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_tuple_taken)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_unregister_notifier)) \
KEEP(*(___ksymtab_gpl+nf_conntrack_untracked)) \
KEEP(*(___ksymtab_gpl+nf_ct_attach)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_alloc)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_find_get)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_init)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_put)) \
KEEP(*(___ksymtab_gpl+nf_ct_expect_related_report)) \
KEEP(*(___ksymtab_gpl+nf_ct_get_tuple)) \
KEEP(*(___ksymtab_gpl+nf_ct_get_tuplepr)) \
KEEP(*(___ksymtab_gpl+nf_ct_helper_expectfn_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_helper_expectfn_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_helper_log)) \
KEEP(*(___ksymtab_gpl+nf_ct_invert_tuple)) \
KEEP(*(___ksymtab_gpl+nf_ct_invert_tuplepr)) \
KEEP(*(___ksymtab_gpl+nf_ct_iterate_cleanup)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_module_put)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_try_module_get)) \
KEEP(*(___ksymtab_gpl+nf_ct_l3proto_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_pernet_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_pernet_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_register)) \
KEEP(*(___ksymtab_gpl+nf_ct_l4proto_unregister)) \
KEEP(*(___ksymtab_gpl+nf_ct_remove_expectations)) \
KEEP(*(___ksymtab_gpl+nf_ct_unexpect_related)) \
KEEP(*(___ksymtab_gpl+nf_getsockopt)) \
KEEP(*(___ksymtab_gpl+nf_hook_slow)) \
KEEP(*(___ksymtab_gpl+nf_hooks_needed)) \
KEEP(*(___ksymtab_gpl+nf_ipv6_ops)) \
KEEP(*(___ksymtab_gpl+nf_log_packet)) \
KEEP(*(___ksymtab_gpl+nf_log_register)) \
KEEP(*(___ksymtab_gpl+nf_log_set)) \
KEEP(*(___ksymtab_gpl+nf_log_unregister)) \
KEEP(*(___ksymtab_gpl+nf_log_unset)) \
KEEP(*(___ksymtab_gpl+nf_nat_follow_master)) \
KEEP(*(___ksymtab_gpl+nf_nat_l3proto_register)) \
KEEP(*(___ksymtab_gpl+nf_nat_l3proto_unregister)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_in_range)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_register)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_unique_tuple)) \
KEEP(*(___ksymtab_gpl+nf_nat_l4proto_unregister)) \
KEEP(*(___ksymtab_gpl+nf_nat_mangle_udp_packet)) \
KEEP(*(___ksymtab_gpl+nf_nat_setup_info)) \
KEEP(*(___ksymtab_gpl+nf_nat_used_tuple)) \
KEEP(*(___ksymtab_gpl+nf_register_afinfo)) \
KEEP(*(___ksymtab_gpl+nf_register_hooks)) \
KEEP(*(___ksymtab_gpl+nf_register_sockopt)) \
KEEP(*(___ksymtab_gpl+nf_setsockopt)) \
KEEP(*(___ksymtab_gpl+nf_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+nf_unregister_hooks)) \
KEEP(*(___ksymtab_gpl+nf_unregister_sockopt)) \
KEEP(*(___ksymtab_gpl+nfnetlink_parse_nat_setup_hook)) \
KEEP(*(___ksymtab_gpl+nfnetlink_unicast)) \
KEEP(*(___ksymtab_gpl+nla_find)) \
KEEP(*(___ksymtab_gpl+nla_memcmp)) \
KEEP(*(___ksymtab_gpl+nla_memcpy)) \
KEEP(*(___ksymtab_gpl+nla_parse)) \
KEEP(*(___ksymtab_gpl+nla_put)) \
KEEP(*(___ksymtab_gpl+nla_put_nohdr)) \
KEEP(*(___ksymtab_gpl+nla_reserve)) \
KEEP(*(___ksymtab_gpl+nla_reserve_nohdr)) \
KEEP(*(___ksymtab_gpl+nla_strcmp)) \
KEEP(*(___ksymtab_gpl+nla_strlcpy)) \
KEEP(*(___ksymtab_gpl+no_llseek)) \
KEEP(*(___ksymtab_gpl+nonseekable_open)) \
KEEP(*(___ksymtab_gpl+noop_backing_dev_info)) \
KEEP(*(___ksymtab_gpl+noop_llseek)) \
KEEP(*(___ksymtab_gpl+noop_qdisc)) \
KEEP(*(___ksymtab_gpl+ns_capable)) \
KEEP(*(___ksymtab_gpl+of_address_to_resource)) \
KEEP(*(___ksymtab_gpl+of_device_is_available)) \
KEEP(*(___ksymtab_gpl+of_device_is_compatible)) \
KEEP(*(___ksymtab_gpl+of_device_register)) \
KEEP(*(___ksymtab_gpl+of_device_unregister)) \
KEEP(*(___ksymtab_gpl+of_find_compatible_node)) \
KEEP(*(___ksymtab_gpl+of_get_property)) \
KEEP(*(___ksymtab_gpl+of_iomap)) \
KEEP(*(___ksymtab_gpl+of_match_device)) \
KEEP(*(___ksymtab_gpl+of_mdiobus_register)) \
KEEP(*(___ksymtab_gpl+of_platform_bus_probe)) \
KEEP(*(___ksymtab_gpl+of_platform_device_create)) \
KEEP(*(___ksymtab_gpl+of_property_read_string)) \
KEEP(*(___ksymtab_gpl+of_property_read_string_index)) \
KEEP(*(___ksymtab_gpl+out_of_line_wait_on_bit)) \
KEEP(*(___ksymtab_gpl+out_of_line_wait_on_bit_lock)) \
KEEP(*(___ksymtab_gpl+overflowgid)) \
KEEP(*(___ksymtab_gpl+overflowuid)) \
KEEP(*(___ksymtab_gpl+pagevec_lookup)) \
KEEP(*(___ksymtab_gpl+pagevec_lookup_tag)) \
KEEP(*(___ksymtab_gpl+panic)) \
KEEP(*(___ksymtab_gpl+panic_blink)) \
KEEP(*(___ksymtab_gpl+panic_notifier_list)) \
KEEP(*(___ksymtab_gpl+panic_timeout)) \
KEEP(*(___ksymtab_gpl+param_array_ops)) \
KEEP(*(___ksymtab_gpl+param_ops_bool)) \
KEEP(*(___ksymtab_gpl+param_ops_charp)) \
KEEP(*(___ksymtab_gpl+param_ops_int)) \
KEEP(*(___ksymtab_gpl+param_ops_string)) \
KEEP(*(___ksymtab_gpl+param_ops_uint)) \
KEEP(*(___ksymtab_gpl+param_ops_ushort)) \
KEEP(*(___ksymtab_gpl+pci_bus_read_config_byte)) \
KEEP(*(___ksymtab_gpl+pci_bus_read_config_dword)) \
KEEP(*(___ksymtab_gpl+pci_bus_read_config_word)) \
KEEP(*(___ksymtab_gpl+pci_bus_write_config_byte)) \
KEEP(*(___ksymtab_gpl+pci_bus_write_config_dword)) \
KEEP(*(___ksymtab_gpl+pci_cleanup_aer_uncorrect_error_status)) \
KEEP(*(___ksymtab_gpl+pci_dev_put)) \
KEEP(*(___ksymtab_gpl+pci_dev_run_wake)) \
KEEP(*(___ksymtab_gpl+pci_disable_device)) \
KEEP(*(___ksymtab_gpl+pci_enable_device)) \
KEEP(*(___ksymtab_gpl+pci_enable_device_io)) \
KEEP(*(___ksymtab_gpl+pci_enable_device_mem)) \
KEEP(*(___ksymtab_gpl+pci_find_capability)) \
KEEP(*(___ksymtab_gpl+pci_fixup_cardbus)) \
KEEP(*(___ksymtab_gpl+pci_fixup_device)) \
KEEP(*(___ksymtab_gpl+pci_get_device)) \
KEEP(*(___ksymtab_gpl+pci_get_slot)) \
KEEP(*(___ksymtab_gpl+pci_intx_mask_supported)) \
KEEP(*(___ksymtab_gpl+pci_ioremap_bar)) \
KEEP(*(___ksymtab_gpl+pci_iounmap)) \
KEEP(*(___ksymtab_gpl+pci_lost_interrupt)) \
KEEP(*(___ksymtab_gpl+pci_match_id)) \
KEEP(*(___ksymtab_gpl+pci_pme_capable)) \
KEEP(*(___ksymtab_gpl+pci_set_master)) \
KEEP(*(___ksymtab_gpl+pci_set_mwi)) \
KEEP(*(___ksymtab_gpl+pci_setup_cardbus)) \
KEEP(*(___ksymtab_gpl+pci_unregister_driver)) \
KEEP(*(___ksymtab_gpl+pcibios_fixup_bus)) \
KEEP(*(___ksymtab_gpl+pcie_capability_read_word)) \
KEEP(*(___ksymtab_gpl+pcie_update_link_speed)) \
KEEP(*(___ksymtab_gpl+pcim_enable_device)) \
KEEP(*(___ksymtab_gpl+pcim_iomap_regions)) \
KEEP(*(___ksymtab_gpl+pcim_iomap_regions_request_all)) \
KEEP(*(___ksymtab_gpl+pcim_iomap_table)) \
KEEP(*(___ksymtab_gpl+pcim_iounmap)) \
KEEP(*(___ksymtab_gpl+pcim_iounmap_regions)) \
KEEP(*(___ksymtab_gpl+phy_device_create)) \
KEEP(*(___ksymtab_gpl+phy_device_register)) \
KEEP(*(___ksymtab_gpl+phy_driver_register)) \
KEEP(*(___ksymtab_gpl+phy_driver_unregister)) \
KEEP(*(___ksymtab_gpl+phy_mac_interrupt)) \
KEEP(*(___ksymtab_gpl+phy_register_fixup)) \
KEEP(*(___ksymtab_gpl+phy_register_fixup_for_id)) \
KEEP(*(___ksymtab_gpl+phy_register_fixup_for_uid)) \
KEEP(*(___ksymtab_gpl+phy_scan_fixups)) \
KEEP(*(___ksymtab_gpl+phy_start_interrupts)) \
KEEP(*(___ksymtab_gpl+phy_stop_interrupts)) \
KEEP(*(___ksymtab_gpl+pid_nr_ns)) \
KEEP(*(___ksymtab_gpl+ping_bind)) \
KEEP(*(___ksymtab_gpl+ping_close)) \
KEEP(*(___ksymtab_gpl+ping_common_sendmsg)) \
KEEP(*(___ksymtab_gpl+ping_err)) \
KEEP(*(___ksymtab_gpl+ping_get_port)) \
KEEP(*(___ksymtab_gpl+ping_getfrag)) \
KEEP(*(___ksymtab_gpl+ping_hash)) \
KEEP(*(___ksymtab_gpl+ping_init_sock)) \
KEEP(*(___ksymtab_gpl+ping_proc_register)) \
KEEP(*(___ksymtab_gpl+ping_proc_unregister)) \
KEEP(*(___ksymtab_gpl+ping_queue_rcv_skb)) \
KEEP(*(___ksymtab_gpl+ping_rcv)) \
KEEP(*(___ksymtab_gpl+ping_recvmsg)) \
KEEP(*(___ksymtab_gpl+ping_seq_fops)) \
KEEP(*(___ksymtab_gpl+ping_seq_next)) \
KEEP(*(___ksymtab_gpl+ping_seq_start)) \
KEEP(*(___ksymtab_gpl+ping_seq_stop)) \
KEEP(*(___ksymtab_gpl+ping_unhash)) \
KEEP(*(___ksymtab_gpl+pingv6_ops)) \
KEEP(*(___ksymtab_gpl+platform_bus)) \
KEEP(*(___ksymtab_gpl+platform_bus_type)) \
KEEP(*(___ksymtab_gpl+platform_device_add)) \
KEEP(*(___ksymtab_gpl+platform_device_add_data)) \
KEEP(*(___ksymtab_gpl+platform_device_add_resources)) \
KEEP(*(___ksymtab_gpl+platform_device_alloc)) \
KEEP(*(___ksymtab_gpl+platform_device_del)) \
KEEP(*(___ksymtab_gpl+platform_device_put)) \
KEEP(*(___ksymtab_gpl+platform_device_register)) \
KEEP(*(___ksymtab_gpl+platform_device_register_full)) \
KEEP(*(___ksymtab_gpl+platform_device_unregister)) \
KEEP(*(___ksymtab_gpl+platform_driver_unregister)) \
KEEP(*(___ksymtab_gpl+platform_get_irq)) \
KEEP(*(___ksymtab_gpl+platform_get_irq_byname)) \
KEEP(*(___ksymtab_gpl+platform_get_resource)) \
KEEP(*(___ksymtab_gpl+platform_get_resource_byname)) \
KEEP(*(___ksymtab_gpl+pm_qos_add_notifier)) \
KEEP(*(___ksymtab_gpl+pm_qos_remove_notifier)) \
KEEP(*(___ksymtab_gpl+pm_qos_request)) \
KEEP(*(___ksymtab_gpl+pm_qos_request_active)) \
KEEP(*(___ksymtab_gpl+pm_qos_update_request)) \
KEEP(*(___ksymtab_gpl+pneigh_enqueue)) \
KEEP(*(___ksymtab_gpl+pneigh_lookup)) \
KEEP(*(___ksymtab_gpl+poll_schedule_timeout)) \
KEEP(*(___ksymtab_gpl+posix_lock_file)) \
KEEP(*(___ksymtab_gpl+posix_lock_file_wait)) \
KEEP(*(___ksymtab_gpl+posix_test_lock)) \
KEEP(*(___ksymtab_gpl+posix_unblock_lock)) \
KEEP(*(___ksymtab_gpl+ppp_dev_name)) \
KEEP(*(___ksymtab_gpl+ppp_input)) \
KEEP(*(___ksymtab_gpl+ppp_input_error)) \
KEEP(*(___ksymtab_gpl+ppp_output_wakeup)) \
KEEP(*(___ksymtab_gpl+ppp_register_net_channel)) \
KEEP(*(___ksymtab_gpl+pppox_ioctl)) \
KEEP(*(___ksymtab_gpl+pppox_unbind_sock)) \
KEEP(*(___ksymtab_gpl+prandom_seed)) \
KEEP(*(___ksymtab_gpl+prandom_u32)) \
KEEP(*(___ksymtab_gpl+prandom_u32_state)) \
KEEP(*(___ksymtab_gpl+prepare_to_wait)) \
KEEP(*(___ksymtab_gpl+prepare_to_wait_exclusive)) \
KEEP(*(___ksymtab_gpl+print_hex_dump)) \
KEEP(*(___ksymtab_gpl+print_hex_dump_bytes)) \
KEEP(*(___ksymtab_gpl+print_tuple)) \
KEEP(*(___ksymtab_gpl+printk)) \
KEEP(*(___ksymtab_gpl+printk_emit)) \
KEEP(*(___ksymtab_gpl+printk_timed_ratelimit)) \
KEEP(*(___ksymtab_gpl+proc_create_data)) \
KEEP(*(___ksymtab_gpl+proc_dointvec)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_jiffies)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_minmax)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_ms_jiffies)) \
KEEP(*(___ksymtab_gpl+proc_dointvec_userhz_jiffies)) \
KEEP(*(___ksymtab_gpl+proc_dostring)) \
KEEP(*(___ksymtab_gpl+proc_doulongvec_ms_jiffies_minmax)) \
KEEP(*(___ksymtab_gpl+proc_mkdir)) \
KEEP(*(___ksymtab_gpl+proc_mkdir_data)) \
KEEP(*(___ksymtab_gpl+proc_mkdir_mode)) \
KEEP(*(___ksymtab_gpl+proc_remove)) \
KEEP(*(___ksymtab_gpl+proto_register)) \
KEEP(*(___ksymtab_gpl+proto_unregister)) \
KEEP(*(___ksymtab_gpl+pskb_expand_head)) \
KEEP(*(___ksymtab_gpl+put_cmsg)) \
KEEP(*(___ksymtab_gpl+put_device)) \
KEEP(*(___ksymtab_gpl+put_disk)) \
KEEP(*(___ksymtab_gpl+put_page)) \
KEEP(*(___ksymtab_gpl+put_pages_list)) \
KEEP(*(___ksymtab_gpl+put_pid)) \
KEEP(*(___ksymtab_gpl+put_pid_ns)) \
KEEP(*(___ksymtab_gpl+put_tty_driver)) \
KEEP(*(___ksymtab_gpl+qdisc_tree_decrease_qlen)) \
KEEP(*(___ksymtab_gpl+qdisc_watchdog_schedule_ns)) \
KEEP(*(___ksymtab_gpl+qe_upload_firmware)) \
KEEP(*(___ksymtab_gpl+queue_delayed_work_on)) \
KEEP(*(___ksymtab_gpl+queue_work_on)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup_slot)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup_tag)) \
KEEP(*(___ksymtab_gpl+radix_tree_gang_lookup_tag_slot)) \
KEEP(*(___ksymtab_gpl+radix_tree_lookup)) \
KEEP(*(___ksymtab_gpl+radix_tree_lookup_slot)) \
KEEP(*(___ksymtab_gpl+random_input_wait)) \
KEEP(*(___ksymtab_gpl+random_input_words)) \
KEEP(*(___ksymtab_gpl+raw_hash_sk)) \
KEEP(*(___ksymtab_gpl+raw_seq_next)) \
KEEP(*(___ksymtab_gpl+raw_seq_open)) \
KEEP(*(___ksymtab_gpl+raw_seq_start)) \
KEEP(*(___ksymtab_gpl+raw_seq_stop)) \
KEEP(*(___ksymtab_gpl+raw_unhash_sk)) \
KEEP(*(___ksymtab_gpl+rb_erase)) \
KEEP(*(___ksymtab_gpl+rb_first)) \
KEEP(*(___ksymtab_gpl+rb_first_postorder)) \
KEEP(*(___ksymtab_gpl+rb_insert_color)) \
KEEP(*(___ksymtab_gpl+rb_last)) \
KEEP(*(___ksymtab_gpl+rb_next)) \
KEEP(*(___ksymtab_gpl+rb_next_postorder)) \
KEEP(*(___ksymtab_gpl+rb_prev)) \
KEEP(*(___ksymtab_gpl+rb_replace_node)) \
KEEP(*(___ksymtab_gpl+read_cache_page_async)) \
KEEP(*(___ksymtab_gpl+read_dev_sector)) \
KEEP(*(___ksymtab_gpl+redirty_page_for_writepage)) \
KEEP(*(___ksymtab_gpl+register_blkdev)) \
KEEP(*(___ksymtab_gpl+register_chrdev_region)) \
KEEP(*(___ksymtab_gpl+register_filesystem)) \
KEEP(*(___ksymtab_gpl+register_net_sysctl)) \
KEEP(*(___ksymtab_gpl+register_netdev)) \
KEEP(*(___ksymtab_gpl+register_netdevice)) \
KEEP(*(___ksymtab_gpl+register_netdevice_notifier)) \
KEEP(*(___ksymtab_gpl+register_pernet_device)) \
KEEP(*(___ksymtab_gpl+register_pernet_subsys)) \
KEEP(*(___ksymtab_gpl+register_pppox_proto)) \
KEEP(*(___ksymtab_gpl+register_qdisc)) \
KEEP(*(___ksymtab_gpl+register_sysctl_table)) \
KEEP(*(___ksymtab_gpl+release_firmware)) \
KEEP(*(___ksymtab_gpl+release_sock)) \
KEEP(*(___ksymtab_gpl+remap_vmalloc_range)) \
KEEP(*(___ksymtab_gpl+remap_vmalloc_range_partial)) \
KEEP(*(___ksymtab_gpl+remove_proc_entry)) \
KEEP(*(___ksymtab_gpl+remove_wait_queue)) \
KEEP(*(___ksymtab_gpl+rename_lock)) \
KEEP(*(___ksymtab_gpl+request_firmware_nowait)) \
KEEP(*(___ksymtab_gpl+request_threaded_irq)) \
KEEP(*(___ksymtab_gpl+revalidate_disk)) \
KEEP(*(___ksymtab_gpl+root_device_unregister)) \
KEEP(*(___ksymtab_gpl+round_jiffies)) \
KEEP(*(___ksymtab_gpl+round_jiffies_relative)) \
KEEP(*(___ksymtab_gpl+round_jiffies_up)) \
KEEP(*(___ksymtab_gpl+round_jiffies_up_relative)) \
KEEP(*(___ksymtab_gpl+rq_flush_dcache_pages)) \
KEEP(*(___ksymtab_gpl+rt_mutex_lock)) \
KEEP(*(___ksymtab_gpl+rt_mutex_lock_interruptible)) \
KEEP(*(___ksymtab_gpl+rt_mutex_trylock)) \
KEEP(*(___ksymtab_gpl+rt_mutex_unlock)) \
KEEP(*(___ksymtab_gpl+rtmsg_ifinfo)) \
KEEP(*(___ksymtab_gpl+rtnetlink_put_metrics)) \
KEEP(*(___ksymtab_gpl+rtnl_af_register)) \
KEEP(*(___ksymtab_gpl+rtnl_af_unregister)) \
KEEP(*(___ksymtab_gpl+rtnl_is_locked)) \
KEEP(*(___ksymtab_gpl+rtnl_link_register)) \
KEEP(*(___ksymtab_gpl+rtnl_link_unregister)) \
KEEP(*(___ksymtab_gpl+rtnl_lock)) \
KEEP(*(___ksymtab_gpl+rtnl_notify)) \
KEEP(*(___ksymtab_gpl+rtnl_put_cacheinfo)) \
KEEP(*(___ksymtab_gpl+rtnl_register)) \
KEEP(*(___ksymtab_gpl+rtnl_set_sk_err)) \
KEEP(*(___ksymtab_gpl+rtnl_trylock)) \
KEEP(*(___ksymtab_gpl+rtnl_unicast)) \
KEEP(*(___ksymtab_gpl+rtnl_unlock)) \
KEEP(*(___ksymtab_gpl+rtnl_unregister_all)) \
KEEP(*(___ksymtab_gpl+rwsem_down_read_failed)) \
KEEP(*(___ksymtab_gpl+rwsem_down_write_failed)) \
KEEP(*(___ksymtab_gpl+rwsem_downgrade_wake)) \
KEEP(*(___ksymtab_gpl+sb800_prefetch)) \
KEEP(*(___ksymtab_gpl+sched_setscheduler)) \
KEEP(*(___ksymtab_gpl+schedule)) \
KEEP(*(___ksymtab_gpl+schedule_hrtimeout)) \
KEEP(*(___ksymtab_gpl+schedule_hrtimeout_range)) \
KEEP(*(___ksymtab_gpl+schedule_timeout)) \
KEEP(*(___ksymtab_gpl+schedule_timeout_interruptible)) \
KEEP(*(___ksymtab_gpl+schedule_timeout_killable)) \
KEEP(*(___ksymtab_gpl+schedule_timeout_uninterruptible)) \
KEEP(*(___ksymtab_gpl+scm_fp_dup)) \
KEEP(*(___ksymtab_gpl+scnprintf)) \
KEEP(*(___ksymtab_gpl+scsi_cmd_blk_ioctl)) \
KEEP(*(___ksymtab_gpl+scsi_command_size_tbl)) \
KEEP(*(___ksymtab_gpl+scsi_verify_blk_ioctl)) \
KEEP(*(___ksymtab_gpl+secpath_dup)) \
KEEP(*(___ksymtab_gpl+secure_tcpv6_sequence_number)) \
KEEP(*(___ksymtab_gpl+send_sig)) \
KEEP(*(___ksymtab_gpl+send_sig_info)) \
KEEP(*(___ksymtab_gpl+seq_lseek)) \
KEEP(*(___ksymtab_gpl+seq_open)) \
KEEP(*(___ksymtab_gpl+seq_open_net)) \
KEEP(*(___ksymtab_gpl+seq_open_private)) \
KEEP(*(___ksymtab_gpl+seq_printf)) \
KEEP(*(___ksymtab_gpl+seq_putc)) \
KEEP(*(___ksymtab_gpl+seq_puts)) \
KEEP(*(___ksymtab_gpl+seq_read)) \
KEEP(*(___ksymtab_gpl+seq_release)) \
KEEP(*(___ksymtab_gpl+seq_release_net)) \
KEEP(*(___ksymtab_gpl+seq_release_private)) \
KEEP(*(___ksymtab_gpl+serio_interrupt)) \
KEEP(*(___ksymtab_gpl+set_anon_super)) \
KEEP(*(___ksymtab_gpl+set_current_groups)) \
KEEP(*(___ksymtab_gpl+set_disk_ro)) \
KEEP(*(___ksymtab_gpl+set_groups)) \
KEEP(*(___ksymtab_gpl+set_nlink)) \
KEEP(*(___ksymtab_gpl+set_page_dirty)) \
KEEP(*(___ksymtab_gpl+set_page_dirty_lock)) \
KEEP(*(___ksymtab_gpl+set_user_nice)) \
KEEP(*(___ksymtab_gpl+setattr_copy)) \
KEEP(*(___ksymtab_gpl+setup_arg_pages)) \
KEEP(*(___ksymtab_gpl+setup_irq)) \
KEEP(*(___ksymtab_gpl+setup_new_exec)) \
KEEP(*(___ksymtab_gpl+sg_copy_to_buffer)) \
KEEP(*(___ksymtab_gpl+sg_init_one)) \
KEEP(*(___ksymtab_gpl+sg_init_table)) \
KEEP(*(___ksymtab_gpl+sg_last)) \
KEEP(*(___ksymtab_gpl+sg_next)) \
KEEP(*(___ksymtab_gpl+sg_pcopy_to_buffer)) \
KEEP(*(___ksymtab_gpl+sg_scsi_ioctl)) \
KEEP(*(___ksymtab_gpl+sget)) \
KEEP(*(___ksymtab_gpl+sha_transform)) \
KEEP(*(___ksymtab_gpl+shash_ahash_finup)) \
KEEP(*(___ksymtab_gpl+shash_ahash_update)) \
KEEP(*(___ksymtab_gpl+shash_free_instance)) \
KEEP(*(___ksymtab_gpl+shash_register_instance)) \
KEEP(*(___ksymtab_gpl+shmem_file_setup)) \
KEEP(*(___ksymtab_gpl+simple_dir_inode_operations)) \
KEEP(*(___ksymtab_gpl+simple_dir_operations)) \
KEEP(*(___ksymtab_gpl+simple_fill_super)) \
KEEP(*(___ksymtab_gpl+simple_lookup)) \
KEEP(*(___ksymtab_gpl+simple_open)) \
KEEP(*(___ksymtab_gpl+simple_pin_fs)) \
KEEP(*(___ksymtab_gpl+simple_read_from_buffer)) \
KEEP(*(___ksymtab_gpl+simple_release_fs)) \
KEEP(*(___ksymtab_gpl+simple_statfs)) \
KEEP(*(___ksymtab_gpl+simple_strtoul)) \
KEEP(*(___ksymtab_gpl+simple_strtoull)) \
KEEP(*(___ksymtab_gpl+single_open)) \
KEEP(*(___ksymtab_gpl+single_open_net)) \
KEEP(*(___ksymtab_gpl+single_open_size)) \
KEEP(*(___ksymtab_gpl+single_release)) \
KEEP(*(___ksymtab_gpl+single_release_net)) \
KEEP(*(___ksymtab_gpl+sk_alloc)) \
KEEP(*(___ksymtab_gpl+sk_common_release)) \
KEEP(*(___ksymtab_gpl+sk_dst_check)) \
KEEP(*(___ksymtab_gpl+sk_filter)) \
KEEP(*(___ksymtab_gpl+sk_filter_release_rcu)) \
KEEP(*(___ksymtab_gpl+sk_free)) \
KEEP(*(___ksymtab_gpl+sk_page_frag_refill)) \
KEEP(*(___ksymtab_gpl+sk_prot_clear_portaddr_nulls)) \
KEEP(*(___ksymtab_gpl+sk_receive_skb)) \
KEEP(*(___ksymtab_gpl+sk_release_kernel)) \
KEEP(*(___ksymtab_gpl+sk_send_sigurg)) \
KEEP(*(___ksymtab_gpl+sk_setup_caps)) \
KEEP(*(___ksymtab_gpl+skb_abort_seq_read)) \
KEEP(*(___ksymtab_gpl+skb_append_datato_frags)) \
KEEP(*(___ksymtab_gpl+skb_checksum)) \
KEEP(*(___ksymtab_gpl+skb_checksum_help)) \
KEEP(*(___ksymtab_gpl+skb_clone)) \
KEEP(*(___ksymtab_gpl+skb_complete_wifi_ack)) \
KEEP(*(___ksymtab_gpl+skb_copy)) \
KEEP(*(___ksymtab_gpl+skb_copy_and_csum_bits)) \
KEEP(*(___ksymtab_gpl+skb_copy_and_csum_datagram_iovec)) \
KEEP(*(___ksymtab_gpl+skb_copy_and_csum_dev)) \
KEEP(*(___ksymtab_gpl+skb_copy_bits)) \
KEEP(*(___ksymtab_gpl+skb_copy_datagram_const_iovec)) \
KEEP(*(___ksymtab_gpl+skb_copy_datagram_from_iovec)) \
KEEP(*(___ksymtab_gpl+skb_copy_datagram_iovec)) \
KEEP(*(___ksymtab_gpl+skb_copy_expand)) \
KEEP(*(___ksymtab_gpl+skb_copy_ubufs)) \
KEEP(*(___ksymtab_gpl+skb_dequeue)) \
KEEP(*(___ksymtab_gpl+skb_dequeue_tail)) \
KEEP(*(___ksymtab_gpl+skb_flow_dissect)) \
KEEP(*(___ksymtab_gpl+skb_free_datagram)) \
KEEP(*(___ksymtab_gpl+skb_free_datagram_locked)) \
KEEP(*(___ksymtab_gpl+skb_kill_datagram)) \
KEEP(*(___ksymtab_gpl+skb_make_writable)) \
KEEP(*(___ksymtab_gpl+skb_morph)) \
KEEP(*(___ksymtab_gpl+skb_prepare_seq_read)) \
KEEP(*(___ksymtab_gpl+skb_pull)) \
KEEP(*(___ksymtab_gpl+skb_pull_rcsum)) \
KEEP(*(___ksymtab_gpl+skb_push)) \
KEEP(*(___ksymtab_gpl+skb_put)) \
KEEP(*(___ksymtab_gpl+skb_queue_purge)) \
KEEP(*(___ksymtab_gpl+skb_queue_tail)) \
KEEP(*(___ksymtab_gpl+skb_realloc_headroom)) \
KEEP(*(___ksymtab_gpl+skb_recv_datagram)) \
KEEP(*(___ksymtab_gpl+skb_scrub_packet)) \
KEEP(*(___ksymtab_gpl+skb_seq_read)) \
KEEP(*(___ksymtab_gpl+skb_store_bits)) \
KEEP(*(___ksymtab_gpl+skb_trim)) \
KEEP(*(___ksymtab_gpl+skb_try_coalesce)) \
KEEP(*(___ksymtab_gpl+skb_tstamp_tx)) \
KEEP(*(___ksymtab_gpl+snmp_fold_field)) \
KEEP(*(___ksymtab_gpl+snmp_fold_field64)) \
KEEP(*(___ksymtab_gpl+snmp_mib_init)) \
KEEP(*(___ksymtab_gpl+snprintf)) \
KEEP(*(___ksymtab_gpl+sock_alloc_send_skb)) \
KEEP(*(___ksymtab_gpl+sock_common_getsockopt)) \
KEEP(*(___ksymtab_gpl+sock_common_recvmsg)) \
KEEP(*(___ksymtab_gpl+sock_common_setsockopt)) \
KEEP(*(___ksymtab_gpl+sock_create_kern)) \
KEEP(*(___ksymtab_gpl+sock_edemux)) \
KEEP(*(___ksymtab_gpl+sock_get_timestamp)) \
KEEP(*(___ksymtab_gpl+sock_get_timestampns)) \
KEEP(*(___ksymtab_gpl+sock_i_ino)) \
KEEP(*(___ksymtab_gpl+sock_i_uid)) \
KEEP(*(___ksymtab_gpl+sock_init_data)) \
KEEP(*(___ksymtab_gpl+sock_kfree_s)) \
KEEP(*(___ksymtab_gpl+sock_kmalloc)) \
KEEP(*(___ksymtab_gpl+sock_no_accept)) \
KEEP(*(___ksymtab_gpl+sock_no_bind)) \
KEEP(*(___ksymtab_gpl+sock_no_listen)) \
KEEP(*(___ksymtab_gpl+sock_no_mmap)) \
KEEP(*(___ksymtab_gpl+sock_no_sendpage)) \
KEEP(*(___ksymtab_gpl+sock_no_shutdown)) \
KEEP(*(___ksymtab_gpl+sock_no_socketpair)) \
KEEP(*(___ksymtab_gpl+sock_prot_inuse_add)) \
KEEP(*(___ksymtab_gpl+sock_prot_inuse_get)) \
KEEP(*(___ksymtab_gpl+sock_queue_err_skb)) \
KEEP(*(___ksymtab_gpl+sock_queue_rcv_skb)) \
KEEP(*(___ksymtab_gpl+sock_register)) \
KEEP(*(___ksymtab_gpl+sock_release)) \
KEEP(*(___ksymtab_gpl+sock_rfree)) \
KEEP(*(___ksymtab_gpl+sock_tx_timestamp)) \
KEEP(*(___ksymtab_gpl+sock_unregister)) \
KEEP(*(___ksymtab_gpl+sock_wfree)) \
KEEP(*(___ksymtab_gpl+sock_wmalloc)) \
KEEP(*(___ksymtab_gpl+sockfd_lookup)) \
KEEP(*(___ksymtab_gpl+sort)) \
KEEP(*(___ksymtab_gpl+spi_bitbang_cleanup)) \
KEEP(*(___ksymtab_gpl+spi_bitbang_setup)) \
KEEP(*(___ksymtab_gpl+spi_bitbang_setup_transfer)) \
KEEP(*(___ksymtab_gpl+spi_get_device_id)) \
KEEP(*(___ksymtab_gpl+spi_setup)) \
KEEP(*(___ksymtab_gpl+sprintf)) \
KEEP(*(___ksymtab_gpl+srcu_batches_completed)) \
KEEP(*(___ksymtab_gpl+sscanf)) \
KEEP(*(___ksymtab_gpl+static_key_slow_inc)) \
KEEP(*(___ksymtab_gpl+stp_proto_register)) \
KEEP(*(___ksymtab_gpl+stp_proto_unregister)) \
KEEP(*(___ksymtab_gpl+strcasecmp)) \
KEEP(*(___ksymtab_gpl+strcat)) \
KEEP(*(___ksymtab_gpl+strchr)) \
KEEP(*(___ksymtab_gpl+strcmp)) \
KEEP(*(___ksymtab_gpl+strcpy)) \
KEEP(*(___ksymtab_gpl+strcspn)) \
KEEP(*(___ksymtab_gpl+string_get_size)) \
KEEP(*(___ksymtab_gpl+strlcpy)) \
KEEP(*(___ksymtab_gpl+strlen)) \
KEEP(*(___ksymtab_gpl+strlen_user)) \
KEEP(*(___ksymtab_gpl+strncat)) \
KEEP(*(___ksymtab_gpl+strncmp)) \
KEEP(*(___ksymtab_gpl+strncpy)) \
KEEP(*(___ksymtab_gpl+strncpy_from_user)) \
KEEP(*(___ksymtab_gpl+strndup_user)) \
KEEP(*(___ksymtab_gpl+strnicmp)) \
KEEP(*(___ksymtab_gpl+strnlen)) \
KEEP(*(___ksymtab_gpl+strnlen_user)) \
KEEP(*(___ksymtab_gpl+strpbrk)) \
KEEP(*(___ksymtab_gpl+strrchr)) \
KEEP(*(___ksymtab_gpl+strsep)) \
KEEP(*(___ksymtab_gpl+strspn)) \
KEEP(*(___ksymtab_gpl+synchronize_irq)) \
KEEP(*(___ksymtab_gpl+synchronize_net)) \
KEEP(*(___ksymtab_gpl+synchronize_sched)) \
KEEP(*(___ksymtab_gpl+syncookie_secret)) \
KEEP(*(___ksymtab_gpl+sys_dup)) \
KEEP(*(___ksymtab_gpl+sysctl_ip_default_ttl)) \
KEEP(*(___ksymtab_gpl+sysctl_ip_early_demux)) \
KEEP(*(___ksymtab_gpl+sysctl_ip_nonlocal_bind)) \
KEEP(*(___ksymtab_gpl+sysctl_max_syn_backlog)) \
KEEP(*(___ksymtab_gpl+sysctl_optmem_max)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_adv_win_scale)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_notsent_lowat)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_rmem)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_syncookies)) \
KEEP(*(___ksymtab_gpl+sysctl_tcp_wmem)) \
KEEP(*(___ksymtab_gpl+sysctl_udp_mem)) \
KEEP(*(___ksymtab_gpl+sysctl_udp_rmem_min)) \
KEEP(*(___ksymtab_gpl+sysctl_udp_wmem_min)) \
KEEP(*(___ksymtab_gpl+sysfs_add_file_to_group)) \
KEEP(*(___ksymtab_gpl+sysfs_add_link_to_group)) \
KEEP(*(___ksymtab_gpl+sysfs_create_group)) \
KEEP(*(___ksymtab_gpl+sysfs_create_groups)) \
KEEP(*(___ksymtab_gpl+sysfs_create_link)) \
KEEP(*(___ksymtab_gpl+sysfs_merge_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_file_from_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_group)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_groups)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_link)) \
KEEP(*(___ksymtab_gpl+sysfs_remove_link_from_group)) \
KEEP(*(___ksymtab_gpl+sysfs_schedule_callback)) \
KEEP(*(___ksymtab_gpl+sysfs_streq)) \
KEEP(*(___ksymtab_gpl+sysfs_unmerge_group)) \
KEEP(*(___ksymtab_gpl+sysfs_update_group)) \
KEEP(*(___ksymtab_gpl+system_freezable_wq)) \
KEEP(*(___ksymtab_gpl+system_long_wq)) \
KEEP(*(___ksymtab_gpl+system_state)) \
KEEP(*(___ksymtab_gpl+system_wq)) \
KEEP(*(___ksymtab_gpl+task_active_pid_ns)) \
KEEP(*(___ksymtab_gpl+tasklet_hrtimer_init)) \
KEEP(*(___ksymtab_gpl+tasklet_init)) \
KEEP(*(___ksymtab_gpl+tasklet_kill)) \
KEEP(*(___ksymtab_gpl+tb_ticks_per_usec)) \
KEEP(*(___ksymtab_gpl+tc_classify)) \
KEEP(*(___ksymtab_gpl+tc_classify_compat)) \
KEEP(*(___ksymtab_gpl+tcf_destroy_chain)) \
KEEP(*(___ksymtab_gpl+tcf_hash_lookup)) \
KEEP(*(___ksymtab_gpl+tcp_check_req)) \
KEEP(*(___ksymtab_gpl+tcp_child_process)) \
KEEP(*(___ksymtab_gpl+tcp_close)) \
KEEP(*(___ksymtab_gpl+tcp_connect)) \
KEEP(*(___ksymtab_gpl+tcp_create_openreq_child)) \
KEEP(*(___ksymtab_gpl+tcp_death_row)) \
KEEP(*(___ksymtab_gpl+tcp_disconnect)) \
KEEP(*(___ksymtab_gpl+tcp_done)) \
KEEP(*(___ksymtab_gpl+tcp_enter_memory_pressure)) \
KEEP(*(___ksymtab_gpl+tcp_fetch_timewait_stamp)) \
KEEP(*(___ksymtab_gpl+tcp_getsockopt)) \
KEEP(*(___ksymtab_gpl+tcp_gro_complete)) \
KEEP(*(___ksymtab_gpl+tcp_hashinfo)) \
KEEP(*(___ksymtab_gpl+tcp_init_sock)) \
KEEP(*(___ksymtab_gpl+tcp_initialize_rcv_mss)) \
KEEP(*(___ksymtab_gpl+tcp_ioctl)) \
KEEP(*(___ksymtab_gpl+tcp_make_synack)) \
KEEP(*(___ksymtab_gpl+tcp_memory_allocated)) \
KEEP(*(___ksymtab_gpl+tcp_memory_pressure)) \
KEEP(*(___ksymtab_gpl+tcp_mtup_init)) \
KEEP(*(___ksymtab_gpl+tcp_orphan_count)) \
KEEP(*(___ksymtab_gpl+tcp_parse_options)) \
KEEP(*(___ksymtab_gpl+tcp_peer_is_proven)) \
KEEP(*(___ksymtab_gpl+tcp_poll)) \
KEEP(*(___ksymtab_gpl+tcp_prequeue)) \
KEEP(*(___ksymtab_gpl+tcp_proc_register)) \
KEEP(*(___ksymtab_gpl+tcp_proc_unregister)) \
KEEP(*(___ksymtab_gpl+tcp_prot)) \
KEEP(*(___ksymtab_gpl+tcp_rcv_established)) \
KEEP(*(___ksymtab_gpl+tcp_rcv_state_process)) \
KEEP(*(___ksymtab_gpl+tcp_recvmsg)) \
KEEP(*(___ksymtab_gpl+tcp_release_cb)) \
KEEP(*(___ksymtab_gpl+tcp_select_initial_window)) \
KEEP(*(___ksymtab_gpl+tcp_sendmsg)) \
KEEP(*(___ksymtab_gpl+tcp_sendpage)) \
KEEP(*(___ksymtab_gpl+tcp_seq_open)) \
KEEP(*(___ksymtab_gpl+tcp_set_state)) \
KEEP(*(___ksymtab_gpl+tcp_setsockopt)) \
KEEP(*(___ksymtab_gpl+tcp_shutdown)) \
KEEP(*(___ksymtab_gpl+tcp_simple_retransmit)) \
KEEP(*(___ksymtab_gpl+tcp_sockets_allocated)) \
KEEP(*(___ksymtab_gpl+tcp_splice_read)) \
KEEP(*(___ksymtab_gpl+tcp_syn_ack_timeout)) \
KEEP(*(___ksymtab_gpl+tcp_syn_flood_action)) \
KEEP(*(___ksymtab_gpl+tcp_sync_mss)) \
KEEP(*(___ksymtab_gpl+tcp_timewait_state_process)) \
KEEP(*(___ksymtab_gpl+tcp_twsk_destructor)) \
KEEP(*(___ksymtab_gpl+tcp_twsk_unique)) \
KEEP(*(___ksymtab_gpl+tcp_v4_conn_request)) \
KEEP(*(___ksymtab_gpl+tcp_v4_connect)) \
KEEP(*(___ksymtab_gpl+tcp_v4_destroy_sock)) \
KEEP(*(___ksymtab_gpl+tcp_v4_do_rcv)) \
KEEP(*(___ksymtab_gpl+tcp_v4_send_check)) \
KEEP(*(___ksymtab_gpl+tcp_v4_syn_recv_sock)) \
KEEP(*(___ksymtab_gpl+test_set_page_writeback)) \
KEEP(*(___ksymtab_gpl+thaw_super)) \
KEEP(*(___ksymtab_gpl+thermal_cdev_update)) \
KEEP(*(___ksymtab_gpl+thermal_cooling_device_register)) \
KEEP(*(___ksymtab_gpl+thermal_cooling_device_unregister)) \
KEEP(*(___ksymtab_gpl+thermal_zone_device_register)) \
KEEP(*(___ksymtab_gpl+thermal_zone_device_unregister)) \
KEEP(*(___ksymtab_gpl+thermal_zone_device_update)) \
KEEP(*(___ksymtab_gpl+time_to_tm)) \
KEEP(*(___ksymtab_gpl+timer_interrupt)) \
KEEP(*(___ksymtab_gpl+timespec_to_jiffies)) \
KEEP(*(___ksymtab_gpl+timeval_to_jiffies)) \
KEEP(*(___ksymtab_gpl+transport_add_device)) \
KEEP(*(___ksymtab_gpl+transport_class_unregister)) \
KEEP(*(___ksymtab_gpl+transport_configure_device)) \
KEEP(*(___ksymtab_gpl+transport_destroy_device)) \
KEEP(*(___ksymtab_gpl+transport_remove_device)) \
KEEP(*(___ksymtab_gpl+transport_setup_device)) \
KEEP(*(___ksymtab_gpl+truncate_inode_pages)) \
KEEP(*(___ksymtab_gpl+truncate_inode_pages_range)) \
KEEP(*(___ksymtab_gpl+truncate_pagecache)) \
KEEP(*(___ksymtab_gpl+truncate_pagecache_range)) \
KEEP(*(___ksymtab_gpl+truncate_setsize)) \
KEEP(*(___ksymtab_gpl+try_module_get)) \
KEEP(*(___ksymtab_gpl+try_to_del_timer_sync)) \
KEEP(*(___ksymtab_gpl+try_wait_for_completion)) \
KEEP(*(___ksymtab_gpl+tty_chars_in_buffer)) \
KEEP(*(___ksymtab_gpl+tty_driver_flush_buffer)) \
KEEP(*(___ksymtab_gpl+tty_encode_baud_rate)) \
KEEP(*(___ksymtab_gpl+tty_flip_buffer_push)) \
KEEP(*(___ksymtab_gpl+tty_hangup)) \
KEEP(*(___ksymtab_gpl+tty_hung_up_p)) \
KEEP(*(___ksymtab_gpl+tty_insert_flip_string_fixed_flag)) \
KEEP(*(___ksymtab_gpl+tty_insert_flip_string_flags)) \
KEEP(*(___ksymtab_gpl+tty_kref_put)) \
KEEP(*(___ksymtab_gpl+tty_port_close)) \
KEEP(*(___ksymtab_gpl+tty_port_close_end)) \
KEEP(*(___ksymtab_gpl+tty_port_close_start)) \
KEEP(*(___ksymtab_gpl+tty_port_destroy)) \
KEEP(*(___ksymtab_gpl+tty_port_hangup)) \
KEEP(*(___ksymtab_gpl+tty_port_init)) \
KEEP(*(___ksymtab_gpl+tty_port_install)) \
KEEP(*(___ksymtab_gpl+tty_port_open)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_get)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_hangup)) \
KEEP(*(___ksymtab_gpl+tty_port_tty_wakeup)) \
KEEP(*(___ksymtab_gpl+tty_register_device)) \
KEEP(*(___ksymtab_gpl+tty_register_device_attr)) \
KEEP(*(___ksymtab_gpl+tty_register_driver)) \
KEEP(*(___ksymtab_gpl+tty_register_ldisc)) \
KEEP(*(___ksymtab_gpl+tty_schedule_flip)) \
KEEP(*(___ksymtab_gpl+tty_set_operations)) \
KEEP(*(___ksymtab_gpl+tty_std_termios)) \
KEEP(*(___ksymtab_gpl+tty_termios_baud_rate)) \
KEEP(*(___ksymtab_gpl+tty_termios_copy_hw)) \
KEEP(*(___ksymtab_gpl+tty_termios_hw_change)) \
KEEP(*(___ksymtab_gpl+tty_unregister_device)) \
KEEP(*(___ksymtab_gpl+tty_unregister_driver)) \
KEEP(*(___ksymtab_gpl+tty_unregister_ldisc)) \
KEEP(*(___ksymtab_gpl+tty_vhangup)) \
KEEP(*(___ksymtab_gpl+tty_wakeup)) \
KEEP(*(___ksymtab_gpl+uart_update_timeout)) \
KEEP(*(___ksymtab_gpl+uart_write_wakeup)) \
KEEP(*(___ksymtab_gpl+udelay)) \
KEEP(*(___ksymtab_gpl+udp4_lib_lookup)) \
KEEP(*(___ksymtab_gpl+udp6_csum_init)) \
KEEP(*(___ksymtab_gpl+udp_disconnect)) \
KEEP(*(___ksymtab_gpl+udp_encap_enable)) \
KEEP(*(___ksymtab_gpl+udp_flush_pending_frames)) \
KEEP(*(___ksymtab_gpl+udp_ioctl)) \
KEEP(*(___ksymtab_gpl+udp_lib_get_port)) \
KEEP(*(___ksymtab_gpl+udp_lib_getsockopt)) \
KEEP(*(___ksymtab_gpl+udp_lib_rehash)) \
KEEP(*(___ksymtab_gpl+udp_lib_setsockopt)) \
KEEP(*(___ksymtab_gpl+udp_lib_unhash)) \
KEEP(*(___ksymtab_gpl+udp_memory_allocated)) \
KEEP(*(___ksymtab_gpl+udp_poll)) \
KEEP(*(___ksymtab_gpl+udp_proc_register)) \
KEEP(*(___ksymtab_gpl+udp_proc_unregister)) \
KEEP(*(___ksymtab_gpl+udp_prot)) \
KEEP(*(___ksymtab_gpl+udp_push_pending_frames)) \
KEEP(*(___ksymtab_gpl+udp_sendmsg)) \
KEEP(*(___ksymtab_gpl+udp_seq_open)) \
KEEP(*(___ksymtab_gpl+udp_table)) \
KEEP(*(___ksymtab_gpl+udplite_prot)) \
KEEP(*(___ksymtab_gpl+udplite_table)) \
KEEP(*(___ksymtab_gpl+unload_nls)) \
KEEP(*(___ksymtab_gpl+unlock_new_inode)) \
KEEP(*(___ksymtab_gpl+unlock_page)) \
KEEP(*(___ksymtab_gpl+unregister_blkdev)) \
KEEP(*(___ksymtab_gpl+unregister_chrdev_region)) \
KEEP(*(___ksymtab_gpl+unregister_filesystem)) \
KEEP(*(___ksymtab_gpl+unregister_net_sysctl_table)) \
KEEP(*(___ksymtab_gpl+unregister_netdev)) \
KEEP(*(___ksymtab_gpl+unregister_netdevice_many)) \
KEEP(*(___ksymtab_gpl+unregister_netdevice_notifier)) \
KEEP(*(___ksymtab_gpl+unregister_netdevice_queue)) \
KEEP(*(___ksymtab_gpl+unregister_pernet_device)) \
KEEP(*(___ksymtab_gpl+unregister_pernet_subsys)) \
KEEP(*(___ksymtab_gpl+unregister_pppox_proto)) \
KEEP(*(___ksymtab_gpl+unregister_qdisc)) \
KEEP(*(___ksymtab_gpl+unregister_sysctl_table)) \
KEEP(*(___ksymtab_gpl+up)) \
KEEP(*(___ksymtab_gpl+up_read)) \
KEEP(*(___ksymtab_gpl+up_write)) \
KEEP(*(___ksymtab_gpl+usb_amd_dev_put)) \
KEEP(*(___ksymtab_gpl+usb_amd_find_chipset_info)) \
KEEP(*(___ksymtab_gpl+usb_amd_quirk_pll_disable)) \
KEEP(*(___ksymtab_gpl+usb_amd_quirk_pll_enable)) \
KEEP(*(___ksymtab_gpl+usecs_to_jiffies)) \
KEEP(*(___ksymtab_gpl+usleep_range)) \
KEEP(*(___ksymtab_gpl+utf16s_to_utf8s)) \
KEEP(*(___ksymtab_gpl+utf8s_to_utf16s)) \
KEEP(*(___ksymtab_gpl+vfree)) \
KEEP(*(___ksymtab_gpl+vfs_path_lookup)) \
KEEP(*(___ksymtab_gpl+vlan_dev_vlan_id)) \
KEEP(*(___ksymtab_gpl+vlan_uses_dev)) \
KEEP(*(___ksymtab_gpl+vlan_vid_add)) \
KEEP(*(___ksymtab_gpl+vlan_vid_del)) \
KEEP(*(___ksymtab_gpl+vlan_vids_add_by_dev)) \
KEEP(*(___ksymtab_gpl+vlan_vids_del_by_dev)) \
KEEP(*(___ksymtab_gpl+vmalloc)) \
KEEP(*(___ksymtab_gpl+vmalloc_32)) \
KEEP(*(___ksymtab_gpl+vmalloc_32_user)) \
KEEP(*(___ksymtab_gpl+vmalloc_node)) \
KEEP(*(___ksymtab_gpl+vmalloc_to_page)) \
KEEP(*(___ksymtab_gpl+vmalloc_to_pfn)) \
KEEP(*(___ksymtab_gpl+vmalloc_user)) \
KEEP(*(___ksymtab_gpl+vprintk)) \
KEEP(*(___ksymtab_gpl+vprintk_emit)) \
KEEP(*(___ksymtab_gpl+vscnprintf)) \
KEEP(*(___ksymtab_gpl+vsnprintf)) \
KEEP(*(___ksymtab_gpl+vsprintf)) \
KEEP(*(___ksymtab_gpl+vsscanf)) \
KEEP(*(___ksymtab_gpl+vzalloc)) \
KEEP(*(___ksymtab_gpl+vzalloc_node)) \
KEEP(*(___ksymtab_gpl+wait_for_completion)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_interruptible)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_interruptible_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_io)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_io_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_killable)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_killable_timeout)) \
KEEP(*(___ksymtab_gpl+wait_for_completion_timeout)) \
KEEP(*(___ksymtab_gpl+wait_on_page_bit)) \
KEEP(*(___ksymtab_gpl+wait_rcu_gp)) \
KEEP(*(___ksymtab_gpl+wake_up_atomic_t)) \
KEEP(*(___ksymtab_gpl+wake_up_bit)) \
KEEP(*(___ksymtab_gpl+wake_up_process)) \
KEEP(*(___ksymtab_gpl+wireless_send_event)) \
KEEP(*(___ksymtab_gpl+wireless_spy_update)) \
KEEP(*(___ksymtab_gpl+ww_mutex_unlock)) \
KEEP(*(___ksymtab_gpl+xfrm_dst_ifdown)) \
KEEP(*(___ksymtab_gpl+xfrm_inner_extract_output)) \
KEEP(*(___ksymtab_gpl+xfrm_input)) \
KEEP(*(___ksymtab_gpl+xfrm_input_resume)) \
KEEP(*(___ksymtab_gpl+xfrm_local_error)) \
KEEP(*(___ksymtab_gpl+xfrm_lookup)) \
KEEP(*(___ksymtab_gpl+xfrm_output)) \
KEEP(*(___ksymtab_gpl+xfrm_output_resume)) \
KEEP(*(___ksymtab_gpl+xfrm_policy_destroy)) \
KEEP(*(___ksymtab_gpl+xfrm_policy_register_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_policy_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_prepare_input)) \
KEEP(*(___ksymtab_gpl+xfrm_register_mode)) \
KEEP(*(___ksymtab_gpl+xfrm_state_check_expire)) \
KEEP(*(___ksymtab_gpl+xfrm_state_lookup)) \
KEEP(*(___ksymtab_gpl+xfrm_state_lookup_byaddr)) \
KEEP(*(___ksymtab_gpl+xfrm_state_register_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_state_unregister_afinfo)) \
KEEP(*(___ksymtab_gpl+xfrm_state_update)) \
KEEP(*(___ksymtab_gpl+xfrm_unregister_mode)) \
KEEP(*(___ksymtab_gpl+xfrm_user_policy)) \
KEEP(*(___ksymtab_gpl+xt_check_match)) \
KEEP(*(___ksymtab_gpl+xt_check_target)) \
KEEP(*(___ksymtab_gpl+xt_register_match)) \
KEEP(*(___ksymtab_gpl+xt_register_matches)) \
KEEP(*(___ksymtab_gpl+xt_register_target)) \
KEEP(*(___ksymtab_gpl+xt_register_targets)) \
KEEP(*(___ksymtab_gpl+xt_request_find_match)) \
KEEP(*(___ksymtab_gpl+xt_request_find_target)) \
KEEP(*(___ksymtab_gpl+xt_unregister_match)) \
KEEP(*(___ksymtab_gpl+xt_unregister_matches)) \
KEEP(*(___ksymtab_gpl+xt_unregister_target)) \
KEEP(*(___ksymtab_gpl+xt_unregister_targets)) \
KEEP(*(___ksymtab_gpl+xtnu_skb_make_writable)) \
KEEP(*(___ksymtab_gpl+yield)) \
KEEP(*(___ksymtab_gpl+yield_to)) \
KEEP(*(___ksymtab_gpl+zlib_deflate)) \
KEEP(*(___ksymtab_gpl+zlib_deflateEnd)) \
KEEP(*(___ksymtab_gpl+zlib_deflateInit2)) \
KEEP(*(___ksymtab_gpl+zlib_deflateReset)) \
KEEP(*(___ksymtab_gpl+zlib_deflate_workspacesize)) \
KEEP(*(___ksymtab_gpl+zlib_inflate)) \
KEEP(*(___ksymtab_gpl+zlib_inflateEnd)) \
KEEP(*(___ksymtab_gpl+zlib_inflateIncomp)) \
KEEP(*(___ksymtab_gpl+zlib_inflateInit2)) \
KEEP(*(___ksymtab_gpl+zlib_inflateReset)) \
KEEP(*(___ksymtab_gpl+zlib_inflate_blob)) \
KEEP(*(___ksymtab_gpl+zlib_inflate_workspacesize)) \

#define SYMTAB_DISCARD \
*(___ksymtab+DMA_MODE_READ) \
*(___ksymtab+DMA_MODE_WRITE) \
*(___ksymtab+HX_memmem) \
*(___ksymtab+ISA_DMA_THRESHOLD) \
*(___ksymtab+I_BDEV) \
*(___ksymtab+__ashrdi3) \
*(___ksymtab+__atomic_notifier_call_chain) \
*(___ksymtab+__bdevname) \
*(___ksymtab+__bforget) \
*(___ksymtab+__bio_clone) \
*(___ksymtab+__bitmap_and) \
*(___ksymtab+__bitmap_andnot) \
*(___ksymtab+__bitmap_complement) \
*(___ksymtab+__bitmap_equal) \
*(___ksymtab+__bitmap_full) \
*(___ksymtab+__bitmap_intersects) \
*(___ksymtab+__bitmap_or) \
*(___ksymtab+__bitmap_parse) \
*(___ksymtab+__bitmap_shift_left) \
*(___ksymtab+__bitmap_shift_right) \
*(___ksymtab+__bitmap_subset) \
*(___ksymtab+__bitmap_weight) \
*(___ksymtab+__bitmap_xor) \
*(___ksymtab+__blkdev_driver_ioctl) \
*(___ksymtab+__block_page_mkwrite) \
*(___ksymtab+__block_write_begin) \
*(___ksymtab+__blockdev_direct_IO) \
*(___ksymtab+__bread) \
*(___ksymtab+__breadahead) \
*(___ksymtab+__brelse) \
*(___ksymtab+__bswapdi2) \
*(___ksymtab+__cap_empty_set) \
*(___ksymtab+__check_region) \
*(___ksymtab+__clear_user) \
*(___ksymtab+__clocksource_register_scale) \
*(___ksymtab+__clzdi2) \
*(___ksymtab+__clzsi2) \
*(___ksymtab+__cookie_v4_check) \
*(___ksymtab+__cookie_v4_init_sequence) \
*(___ksymtab+__crc32c_le) \
*(___ksymtab+__crypto_alloc_tfm) \
*(___ksymtab+__crypto_dequeue_request) \
*(___ksymtab+__ctzdi2) \
*(___ksymtab+__ctzsi2) \
*(___ksymtab+__delay) \
*(___ksymtab+__destroy_context) \
*(___ksymtab+__destroy_inode) \
*(___ksymtab+__dev_getfirstbyhwtype) \
*(___ksymtab+__dev_remove_offload) \
*(___ksymtab+__devm_release_region) \
*(___ksymtab+__devm_request_region) \
*(___ksymtab+__dma_request_channel) \
*(___ksymtab+__elv_add_request) \
*(___ksymtab+__f_setown) \
*(___ksymtab+__find_get_block) \
*(___ksymtab+__fsnotify_inode_delete) \
*(___ksymtab+__fsnotify_parent) \
*(___ksymtab+__generic_block_fiemap) \
*(___ksymtab+__genl_register_family) \
*(___ksymtab+__get_mtd_device) \
*(___ksymtab+__get_user_pages) \
*(___ksymtab+__get_user_pages_fast) \
*(___ksymtab+__get_vm_area) \
*(___ksymtab+__getblk) \
*(___ksymtab+__getnstimeofday) \
*(___ksymtab+__gpio_cansleep) \
*(___ksymtab+__gpio_get_value) \
*(___ksymtab+__gpio_set_value) \
*(___ksymtab+__gpio_to_irq) \
*(___ksymtab+__hw_addr_add_multiple) \
*(___ksymtab+__hw_addr_del_multiple) \
*(___ksymtab+__hw_addr_flush) \
*(___ksymtab+__i2c_board_list) \
*(___ksymtab+__i2c_board_lock) \
*(___ksymtab+__i2c_first_dynamic_bus_num) \
*(___ksymtab+__i2c_transfer) \
*(___ksymtab+__idr_get_new_above) \
*(___ksymtab+__idr_pre_get) \
*(___ksymtab+__inet_twsk_hashdance) \
*(___ksymtab+__init_kthread_worker) \
*(___ksymtab+__init_new_context) \
*(___ksymtab+__inode_sub_bytes) \
*(___ksymtab+__insert_inode_hash) \
*(___ksymtab+__invalidate_device) \
*(___ksymtab+__iowrite64_copy) \
*(___ksymtab+__ip_dev_find) \
*(___ksymtab+__ip_route_output_key) \
*(___ksymtab+__irq_alloc_descs) \
*(___ksymtab+__irq_domain_add) \
*(___ksymtab+__irq_offset_value) \
*(___ksymtab+__irq_regs) \
*(___ksymtab+__irq_set_handler) \
*(___ksymtab+__kfifo_dma_in_finish_r) \
*(___ksymtab+__kfifo_dma_in_prepare) \
*(___ksymtab+__kfifo_dma_in_prepare_r) \
*(___ksymtab+__kfifo_dma_out_finish_r) \
*(___ksymtab+__kfifo_dma_out_prepare) \
*(___ksymtab+__kfifo_dma_out_prepare_r) \
*(___ksymtab+__kfifo_from_user) \
*(___ksymtab+__kfifo_from_user_r) \
*(___ksymtab+__kfifo_len_r) \
*(___ksymtab+__kfifo_max_r) \
*(___ksymtab+__kfifo_skip_r) \
*(___ksymtab+__kfifo_to_user) \
*(___ksymtab+__kfifo_to_user_r) \
*(___ksymtab+__krealloc) \
*(___ksymtab+__lock_buffer) \
*(___ksymtab+__locks_copy_lock) \
*(___ksymtab+__mdio_board_list) \
*(___ksymtab+__mdio_board_lock) \
*(___ksymtab+__mmdrop) \
*(___ksymtab+__mnt_is_readonly) \
*(___ksymtab+__module_address) \
*(___ksymtab+__module_text_address) \
*(___ksymtab+__mtd_next_device) \
*(___ksymtab+__nand_calculate_ecc) \
*(___ksymtab+__nand_correct_data) \
*(___ksymtab+__neigh_event_send) \
*(___ksymtab+__neigh_for_each_release) \
*(___ksymtab+__netdev_pick_tx) \
*(___ksymtab+__netlink_dump_start) \
*(___ksymtab+__netlink_remove_tap) \
*(___ksymtab+__nf_conntrack_confirm) \
*(___ksymtab+__nf_conntrack_find) \
*(___ksymtab+__nf_conntrack_helper_find) \
*(___ksymtab+__nf_ct_ext_add_length) \
*(___ksymtab+__nf_ct_ext_destroy) \
*(___ksymtab+__nf_ct_kill_acct) \
*(___ksymtab+__nf_ct_l4proto_find) \
*(___ksymtab+__nf_ct_try_assign_helper) \
*(___ksymtab+__nf_nat_l4proto_find) \
*(___ksymtab+__page_symlink) \
*(___ksymtab+__pagevec_lru_add) \
*(___ksymtab+__pagevec_release) \
*(___ksymtab+__par_io_config_pin) \
*(___ksymtab+__pci_enable_wake) \
*(___ksymtab+__pci_reset_function) \
*(___ksymtab+__pci_reset_function_locked) \
*(___ksymtab+__print_symbol) \
*(___ksymtab+__put_mtd_device) \
*(___ksymtab+__put_task_struct) \
*(___ksymtab+__qdisc_calculate_pkt_len) \
*(___ksymtab+__raw_notifier_call_chain) \
*(___ksymtab+__rb_insert_augmented) \
*(___ksymtab+__register_binfmt) \
*(___ksymtab+__remove_inode_hash) \
*(___ksymtab+__rt_mutex_init) \
*(___ksymtab+__sb_end_write) \
*(___ksymtab+__sb_start_write) \
*(___ksymtab+__scm_destroy) \
*(___ksymtab+__scm_send) \
*(___ksymtab+__send_remote_softirq) \
*(___ksymtab+__serio_register_driver) \
*(___ksymtab+__serio_register_port) \
*(___ksymtab+__set_personality) \
*(___ksymtab+__sg_page_iter_next) \
*(___ksymtab+__sg_page_iter_start) \
*(___ksymtab+__sk_backlog_rcv) \
*(___ksymtab+__sk_mem_reclaim) \
*(___ksymtab+__skb_get_rxhash) \
*(___ksymtab+__skb_gso_segment) \
*(___ksymtab+__skb_tx_hash) \
*(___ksymtab+__splice_from_pipe) \
*(___ksymtab+__srcu_notifier_call_chain) \
*(___ksymtab+__srcu_read_lock) \
*(___ksymtab+__srcu_read_unlock) \
*(___ksymtab+__symbol_get) \
*(___ksymtab+__symbol_put) \
*(___ksymtab+__sync_dirty_buffer) \
*(___ksymtab+__ucmpdi2) \
*(___ksymtab+__vlan_find_dev_deep) \
*(___ksymtab+__vlan_hwaccel_rx) \
*(___ksymtab+__wait_on_bit) \
*(___ksymtab+__wait_on_bit_lock) \
*(___ksymtab+__wait_on_buffer) \
*(___ksymtab+__xfrm_init_state) \
*(___ksymtab+__xfrm_state_delete) \
*(___ksymtab+_atomic_dec_and_lock) \
*(___ksymtab+_bcd2bin) \
*(___ksymtab+_bin2bcd) \
*(___ksymtab+_insb) \
*(___ksymtab+_insl_ns) \
*(___ksymtab+_insw_ns) \
*(___ksymtab+_kstrtol) \
*(___ksymtab+_outsb) \
*(___ksymtab+_outsl_ns) \
*(___ksymtab+_outsw_ns) \
*(___ksymtab+_submit_bh) \
*(___ksymtab+ablkcipher_walk_done) \
*(___ksymtab+ablkcipher_walk_phys) \
*(___ksymtab+abort_creds) \
*(___ksymtab+abort_exclusive_wait) \
*(___ksymtab+account_page_dirtied) \
*(___ksymtab+account_page_redirty) \
*(___ksymtab+account_page_writeback) \
*(___ksymtab+add_input_randomness) \
*(___ksymtab+add_mtd_blktrans_dev) \
*(___ksymtab+add_page_wait_queue) \
*(___ksymtab+add_taint) \
*(___ksymtab+add_to_page_cache_lru) \
*(___ksymtab+address_space_init_once) \
*(___ksymtab+adjust_managed_page_count) \
*(___ksymtab+adjust_resource) \
*(___ksymtab+aead_geniv_alloc) \
*(___ksymtab+aead_geniv_exit) \
*(___ksymtab+aead_geniv_free) \
*(___ksymtab+aead_geniv_init) \
*(___ksymtab+aer_irq) \
*(___ksymtab+af_alg_accept) \
*(___ksymtab+af_alg_cmsg_send) \
*(___ksymtab+af_alg_free_sg) \
*(___ksymtab+af_alg_make_sg) \
*(___ksymtab+af_alg_register_type) \
*(___ksymtab+af_alg_release) \
*(___ksymtab+af_alg_unregister_type) \
*(___ksymtab+ahash_attr_alg) \
*(___ksymtab+ahash_free_instance) \
*(___ksymtab+ahash_register_instance) \
*(___ksymtab+alarm_cancel) \
*(___ksymtab+alarm_expires_remaining) \
*(___ksymtab+alarm_forward) \
*(___ksymtab+alarm_forward_now) \
*(___ksymtab+alarm_init) \
*(___ksymtab+alarm_restart) \
*(___ksymtab+alarm_start) \
*(___ksymtab+alarm_start_relative) \
*(___ksymtab+alarm_try_to_cancel) \
*(___ksymtab+alg_test) \
*(___ksymtab+alignment_exception) \
*(___ksymtab+alloc_anon_inode) \
*(___ksymtab+alloc_buffer_head) \
*(___ksymtab+alloc_chrdev_region) \
*(___ksymtab+alloc_file) \
*(___ksymtab+alloc_page_buffers) \
*(___ksymtab+alloc_pages_exact) \
*(___ksymtab+alloc_pages_exact_nid) \
*(___ksymtab+alloc_pci_dev) \
*(___ksymtab+alloc_vm_area) \
*(___ksymtab+allocate_resource) \
*(___ksymtab+anon_inode_getfd) \
*(___ksymtab+anon_inode_getfile) \
*(___ksymtab+anon_inode_getfile_private) \
*(___ksymtab+anon_transport_class_register) \
*(___ksymtab+apply_to_page_range) \
*(___ksymtab+argv_free) \
*(___ksymtab+argv_split) \
*(___ksymtab+arp_find) \
*(___ksymtab+arp_invalidate) \
*(___ksymtab+arp_tbl) \
*(___ksymtab+async_synchronize_cookie) \
*(___ksymtab+async_synchronize_cookie_domain) \
*(___ksymtab+async_synchronize_full) \
*(___ksymtab+atomic64_add) \
*(___ksymtab+atomic64_add_unless) \
*(___ksymtab+atomic64_cmpxchg) \
*(___ksymtab+atomic64_dec_if_positive) \
*(___ksymtab+atomic64_sub) \
*(___ksymtab+atomic64_sub_return) \
*(___ksymtab+atomic64_xchg) \
*(___ksymtab+atomic_notifier_call_chain) \
*(___ksymtab+atomic_notifier_chain_register) \
*(___ksymtab+atomic_notifier_chain_unregister) \
*(___ksymtab+attribute_container_classdev_to_container) \
*(___ksymtab+attribute_container_find_class_device) \
*(___ksymtab+attribute_container_register) \
*(___ksymtab+attribute_container_unregister) \
*(___ksymtab+avenrun) \
*(___ksymtab+balance_dirty_pages_ratelimited) \
*(___ksymtab+balloon_devinfo_alloc) \
*(___ksymtab+balloon_page_dequeue) \
*(___ksymtab+balloon_page_enqueue) \
*(___ksymtab+bd_link_disk_holder) \
*(___ksymtab+bd_set_size) \
*(___ksymtab+bd_unlink_disk_holder) \
*(___ksymtab+bdev_read_only) \
*(___ksymtab+bdev_stack_limits) \
*(___ksymtab+bdevname) \
*(___ksymtab+bdget) \
*(___ksymtab+bdget_disk) \
*(___ksymtab+bdgrab) \
*(___ksymtab+bdi_init) \
*(___ksymtab+bdi_register) \
*(___ksymtab+bdi_register_dev) \
*(___ksymtab+bdi_set_max_ratio) \
*(___ksymtab+bdi_unregister) \
*(___ksymtab+bdi_writeout_inc) \
*(___ksymtab+bfifo_qdisc_ops) \
*(___ksymtab+bh_submit_read) \
*(___ksymtab+bio_add_page) \
*(___ksymtab+bio_add_pc_page) \
*(___ksymtab+bio_advance) \
*(___ksymtab+bio_alloc_bioset) \
*(___ksymtab+bio_alloc_pages) \
*(___ksymtab+bio_clone_bioset) \
*(___ksymtab+bio_copy_data) \
*(___ksymtab+bio_copy_kern) \
*(___ksymtab+bio_copy_user) \
*(___ksymtab+bio_endio) \
*(___ksymtab+bio_get_nr_vecs) \
*(___ksymtab+bio_init) \
*(___ksymtab+bio_map_kern) \
*(___ksymtab+bio_map_user) \
*(___ksymtab+bio_pair_release) \
*(___ksymtab+bio_phys_segments) \
*(___ksymtab+bio_put) \
*(___ksymtab+bio_reset) \
*(___ksymtab+bio_sector_offset) \
*(___ksymtab+bio_split) \
*(___ksymtab+bio_uncopy_user) \
*(___ksymtab+bio_unmap_user) \
*(___ksymtab+bioset_create) \
*(___ksymtab+bioset_free) \
*(___ksymtab+bit_waitqueue) \
*(___ksymtab+bitmap_allocate_region) \
*(___ksymtab+bitmap_bitremap) \
*(___ksymtab+bitmap_clear) \
*(___ksymtab+bitmap_copy_le) \
*(___ksymtab+bitmap_find_free_region) \
*(___ksymtab+bitmap_find_next_zero_area) \
*(___ksymtab+bitmap_fold) \
*(___ksymtab+bitmap_onto) \
*(___ksymtab+bitmap_parse_user) \
*(___ksymtab+bitmap_parselist) \
*(___ksymtab+bitmap_parselist_user) \
*(___ksymtab+bitmap_release_region) \
*(___ksymtab+bitmap_remap) \
*(___ksymtab+bitmap_scnlistprintf) \
*(___ksymtab+bitmap_set) \
*(___ksymtab+bitrev16) \
*(___ksymtab+bitrev32) \
*(___ksymtab+blk_abort_request) \
*(___ksymtab+blk_alloc_queue) \
*(___ksymtab+blk_alloc_queue_node) \
*(___ksymtab+blk_bio_map_sg) \
*(___ksymtab+blk_check_plugged) \
*(___ksymtab+blk_fetch_request) \
*(___ksymtab+blk_finish_plug) \
*(___ksymtab+blk_init_allocated_queue) \
*(___ksymtab+blk_init_tags) \
*(___ksymtab+blk_insert_cloned_request) \
*(___ksymtab+blk_iopoll_disable) \
*(___ksymtab+blk_iopoll_enable) \
*(___ksymtab+blk_iopoll_enabled) \
*(___ksymtab+blk_iopoll_init) \
*(___ksymtab+blk_iopoll_sched) \
*(___ksymtab+blk_limits_io_min) \
*(___ksymtab+blk_limits_io_opt) \
*(___ksymtab+blk_limits_max_hw_sectors) \
*(___ksymtab+blk_lld_busy) \
*(___ksymtab+blk_make_request) \
*(___ksymtab+blk_queue_bio) \
*(___ksymtab+blk_queue_bounce) \
*(___ksymtab+blk_queue_bypass_end) \
*(___ksymtab+blk_queue_bypass_start) \
*(___ksymtab+blk_queue_dma_drain) \
*(___ksymtab+blk_queue_dma_pad) \
*(___ksymtab+blk_queue_end_tag) \
*(___ksymtab+blk_queue_find_tag) \
*(___ksymtab+blk_queue_free_tags) \
*(___ksymtab+blk_queue_init_tags) \
*(___ksymtab+blk_queue_invalidate_tags) \
*(___ksymtab+blk_queue_make_request) \
*(___ksymtab+blk_queue_max_discard_sectors) \
*(___ksymtab+blk_queue_merge_bvec) \
*(___ksymtab+blk_queue_stack_limits) \
*(___ksymtab+blk_recount_segments) \
*(___ksymtab+blk_rq_check_limits) \
*(___ksymtab+blk_rq_err_bytes) \
*(___ksymtab+blk_rq_prep_clone) \
*(___ksymtab+blk_rq_unprep_clone) \
*(___ksymtab+blk_set_default_limits) \
*(___ksymtab+blk_set_stacking_limits) \
*(___ksymtab+blk_stack_limits) \
*(___ksymtab+blk_start_plug) \
*(___ksymtab+blk_sync_queue) \
*(___ksymtab+blkcipher_walk_done) \
*(___ksymtab+blkcipher_walk_phys) \
*(___ksymtab+blkcipher_walk_virt) \
*(___ksymtab+blkcipher_walk_virt_block) \
*(___ksymtab+blkdev_aio_write) \
*(___ksymtab+blkdev_fsync) \
*(___ksymtab+blkdev_get) \
*(___ksymtab+blkdev_get_by_dev) \
*(___ksymtab+blkdev_get_by_path) \
*(___ksymtab+blkdev_ioctl) \
*(___ksymtab+blkdev_issue_discard) \
*(___ksymtab+blkdev_issue_flush) \
*(___ksymtab+blkdev_issue_write_same) \
*(___ksymtab+blkdev_issue_zeroout) \
*(___ksymtab+blkdev_put) \
*(___ksymtab+block_all_signals) \
*(___ksymtab+block_commit_write) \
*(___ksymtab+block_invalidatepage) \
*(___ksymtab+block_page_mkwrite) \
*(___ksymtab+block_read_full_page) \
*(___ksymtab+block_truncate_page) \
*(___ksymtab+block_write_begin) \
*(___ksymtab+block_write_end) \
*(___ksymtab+block_write_full_page) \
*(___ksymtab+block_write_full_page_endio) \
*(___ksymtab+blocking_notifier_chain_cond_register) \
*(___ksymtab+bmap) \
*(___ksymtab+boot_cpuid) \
*(___ksymtab+boot_cpuid_phys) \
*(___ksymtab+bprm_change_interp) \
*(___ksymtab+br_dev_queue_push_xmit) \
*(___ksymtab+br_forward_finish) \
*(___ksymtab+br_handle_frame_finish) \
*(___ksymtab+brioctl_set) \
*(___ksymtab+broadcast_uevent) \
*(___ksymtab+bsearch) \
*(___ksymtab+buffer_check_dirty_writeback) \
*(___ksymtab+buffer_migrate_page) \
*(___ksymtab+build_skb) \
*(___ksymtab+bus_create_file) \
*(___ksymtab+bus_for_each_drv) \
*(___ksymtab+bus_get_kset) \
*(___ksymtab+bus_remove_file) \
*(___ksymtab+bus_rescan_devices) \
*(___ksymtab+byte_rev_table) \
*(___ksymtab+cacheable_memzero) \
*(___ksymtab+cad_pid) \
*(___ksymtab+call_rcu_bh) \
*(___ksymtab+call_srcu) \
*(___ksymtab+call_usermodehelper) \
*(___ksymtab+call_usermodehelper_exec) \
*(___ksymtab+can_do_mlock) \
*(___ksymtab+can_nice) \
*(___ksymtab+cancel_dirty_page) \
*(___ksymtab+cfi_cmdset_0001) \
*(___ksymtab+cfi_cmdset_0002) \
*(___ksymtab+cfi_cmdset_0003) \
*(___ksymtab+cfi_cmdset_0006) \
*(___ksymtab+cfi_cmdset_0020) \
*(___ksymtab+cfi_cmdset_0200) \
*(___ksymtab+cfi_cmdset_0701) \
*(___ksymtab+cfi_qry_mode_off) \
*(___ksymtab+cfi_qry_mode_on) \
*(___ksymtab+cfi_qry_present) \
*(___ksymtab+cfi_read_pri) \
*(___ksymtab+cfi_varsize_frob) \
*(___ksymtab+check_disk_size_change) \
*(___ksymtab+check_legacy_ioport) \
*(___ksymtab+class_compat_create_link) \
*(___ksymtab+class_compat_register) \
*(___ksymtab+class_compat_remove_link) \
*(___ksymtab+class_compat_unregister) \
*(___ksymtab+class_create_file) \
*(___ksymtab+class_dev_iter_exit) \
*(___ksymtab+class_dev_iter_init) \
*(___ksymtab+class_dev_iter_next) \
*(___ksymtab+class_for_each_device) \
*(___ksymtab+class_remove_file) \
*(___ksymtab+clear_bdi_congested) \
*(___ksymtab+clear_pages) \
*(___ksymtab+clear_user_page) \
*(___ksymtab+clockevent_delta2ns) \
*(___ksymtab+clockevents_config_and_register) \
*(___ksymtab+clockevents_notify) \
*(___ksymtab+clockevents_register_device) \
*(___ksymtab+clockevents_unbind) \
*(___ksymtab+clocksource_change_rating) \
*(___ksymtab+clocksource_register) \
*(___ksymtab+clocksource_unregister) \
*(___ksymtab+cmxgcr_lock) \
*(___ksymtab+commit_creds) \
*(___ksymtab+completion_done) \
*(___ksymtab+congestion_wait) \
*(___ksymtab+console_drivers) \
*(___ksymtab+console_lock) \
*(___ksymtab+console_set_on_cmdline) \
*(___ksymtab+console_start) \
*(___ksymtab+console_stop) \
*(___ksymtab+console_suspend_enabled) \
*(___ksymtab+console_trylock) \
*(___ksymtab+console_unlock) \
*(___ksymtab+cont_write_begin) \
*(___ksymtab+convert_ifc_address) \
*(___ksymtab+copy_page) \
*(___ksymtab+copy_strings_kernel) \
*(___ksymtab+cpm_muram_addr) \
*(___ksymtab+cpm_muram_alloc) \
*(___ksymtab+cpm_muram_alloc_fixed) \
*(___ksymtab+cpm_muram_dma) \
*(___ksymtab+cpm_muram_free) \
*(___ksymtab+cpm_muram_offset) \
*(___ksymtab+cpu_active_mask) \
*(___ksymtab+cpu_add_dev_attr) \
*(___ksymtab+cpu_all_bits) \
*(___ksymtab+cpu_bit_bitmap) \
*(___ksymtab+cpu_clock) \
*(___ksymtab+cpu_is_hotpluggable) \
*(___ksymtab+cpu_online_mask) \
*(___ksymtab+cpu_possible_mask) \
*(___ksymtab+cpu_present_mask) \
*(___ksymtab+cpu_remove_dev_attr) \
*(___ksymtab+cpu_subsys) \
*(___ksymtab+cpuidle_disable) \
*(___ksymtab+crc32c) \
*(___ksymtab+crc_ccitt) \
*(___ksymtab+crc_ccitt_table) \
*(___ksymtab+create_empty_buffers) \
*(___ksymtab+create_syslog_header) \
*(___ksymtab+cred_to_ucred) \
*(___ksymtab+crypto_aead_setauthsize) \
*(___ksymtab+crypto_aes_expand_key) \
*(___ksymtab+crypto_aes_set_key) \
*(___ksymtab+crypto_ahash_final) \
*(___ksymtab+crypto_alg_list) \
*(___ksymtab+crypto_alg_sem) \
*(___ksymtab+crypto_alg_tested) \
*(___ksymtab+crypto_alloc_aead) \
*(___ksymtab+crypto_alloc_instance) \
*(___ksymtab+crypto_alloc_pcomp) \
*(___ksymtab+crypto_alloc_tfm) \
*(___ksymtab+crypto_attr_alg_name) \
*(___ksymtab+crypto_attr_u32) \
*(___ksymtab+crypto_blkcipher_type) \
*(___ksymtab+crypto_chain) \
*(___ksymtab+crypto_create_tfm) \
*(___ksymtab+crypto_default_rng) \
*(___ksymtab+crypto_dequeue_request) \
*(___ksymtab+crypto_drop_spawn) \
*(___ksymtab+crypto_enqueue_request) \
*(___ksymtab+crypto_find_alg) \
*(___ksymtab+crypto_fl_tab) \
*(___ksymtab+crypto_ft_tab) \
*(___ksymtab+crypto_get_attr_type) \
*(___ksymtab+crypto_get_default_rng) \
*(___ksymtab+crypto_givcipher_type) \
*(___ksymtab+crypto_grab_aead) \
*(___ksymtab+crypto_grab_skcipher) \
*(___ksymtab+crypto_hash_walk_done) \
*(___ksymtab+crypto_hash_walk_first) \
*(___ksymtab+crypto_il_tab) \
*(___ksymtab+crypto_inc) \
*(___ksymtab+crypto_init_ahash_spawn) \
*(___ksymtab+crypto_init_queue) \
*(___ksymtab+crypto_init_shash_spawn) \
*(___ksymtab+crypto_it_tab) \
*(___ksymtab+crypto_larval_alloc) \
*(___ksymtab+crypto_larval_kill) \
*(___ksymtab+crypto_mod_get) \
*(___ksymtab+crypto_nivaead_type) \
*(___ksymtab+crypto_probing_notify) \
*(___ksymtab+crypto_put_default_rng) \
*(___ksymtab+crypto_remove_final) \
*(___ksymtab+crypto_remove_spawns) \
*(___ksymtab+crypto_rng_type) \
*(___ksymtab+crypto_shash_digest) \
*(___ksymtab+crypto_shoot_alg) \
*(___ksymtab+crypto_tfm_in_queue) \
*(___ksymtab+crypto_unregister_instance) \
*(___ksymtab+crypto_unregister_notifier) \
*(___ksymtab+crypto_unregister_pcomp) \
*(___ksymtab+crypto_unregister_shash) \
*(___ksymtab+crypto_unregister_shashes) \
*(___ksymtab+ct_sip_get_header) \
*(___ksymtab+ct_sip_get_sdp_header) \
*(___ksymtab+ct_sip_parse_address_param) \
*(___ksymtab+ct_sip_parse_header_uri) \
*(___ksymtab+ct_sip_parse_numerical_param) \
*(___ksymtab+ct_sip_parse_request) \
*(___ksymtab+d_add_ci) \
*(___ksymtab+d_find_alias) \
*(___ksymtab+d_find_any_alias) \
*(___ksymtab+d_genocide) \
*(___ksymtab+d_move) \
*(___ksymtab+d_path) \
*(___ksymtab+d_prune_aliases) \
*(___ksymtab+d_set_d_op) \
*(___ksymtab+d_tmpfile) \
*(___ksymtab+d_validate) \
*(___ksymtab+dcache_dir_close) \
*(___ksymtab+dcache_dir_lseek) \
*(___ksymtab+dcache_dir_open) \
*(___ksymtab+dcache_readdir) \
*(___ksymtab+debug_locks) \
*(___ksymtab+debug_locks_off) \
*(___ksymtab+debug_locks_silent) \
*(___ksymtab+debugfs_create_atomic_t) \
*(___ksymtab+debugfs_create_blob) \
*(___ksymtab+debugfs_create_regset32) \
*(___ksymtab+debugfs_create_size_t) \
*(___ksymtab+debugfs_create_u16) \
*(___ksymtab+debugfs_create_x16) \
*(___ksymtab+debugfs_create_x64) \
*(___ksymtab+debugfs_create_x8) \
*(___ksymtab+debugfs_initialized) \
*(___ksymtab+debugfs_print_regs32) \
*(___ksymtab+decrementer_clockevent) \
*(___ksymtab+default_file_splice_read) \
*(___ksymtab+default_qdisc_ops) \
*(___ksymtab+del_mtd_blktrans_dev) \
*(___ksymtab+delete_from_page_cache) \
*(___ksymtab+dentry_open) \
*(___ksymtab+dentry_path_raw) \
*(___ksymtab+deregister_mtd_blktrans) \
*(___ksymtab+deregister_mtd_parser) \
*(___ksymtab+des_ekey) \
*(___ksymtab+dev_activate) \
*(___ksymtab+dev_add_offload) \
*(___ksymtab+dev_addr_add) \
*(___ksymtab+dev_addr_add_multiple) \
*(___ksymtab+dev_addr_del) \
*(___ksymtab+dev_addr_del_multiple) \
*(___ksymtab+dev_addr_flush) \
*(___ksymtab+dev_addr_init) \
*(___ksymtab+dev_alert) \
*(___ksymtab+dev_base_lock) \
*(___ksymtab+dev_change_carrier) \
*(___ksymtab+dev_change_flags) \
*(___ksymtab+dev_crit) \
*(___ksymtab+dev_deactivate) \
*(___ksymtab+dev_emerg) \
*(___ksymtab+dev_get_phys_port_id) \
*(___ksymtab+dev_getbyhwaddr_rcu) \
*(___ksymtab+dev_getfirstbyhwtype) \
*(___ksymtab+dev_graft_qdisc) \
*(___ksymtab+dev_load) \
*(___ksymtab+dev_mc_init) \
*(___ksymtab+dev_remove_offload) \
*(___ksymtab+dev_uc_add) \
*(___ksymtab+dev_uc_add_excl) \
*(___ksymtab+dev_uc_del) \
*(___ksymtab+dev_uc_init) \
*(___ksymtab+device_find_child) \
*(___ksymtab+device_move) \
*(___ksymtab+device_reprobe) \
*(___ksymtab+device_show_bool) \
*(___ksymtab+device_show_int) \
*(___ksymtab+device_show_ulong) \
*(___ksymtab+device_store_bool) \
*(___ksymtab+device_store_int) \
*(___ksymtab+device_store_ulong) \
*(___ksymtab+devm_add_action) \
*(___ksymtab+devm_gpio_free) \
*(___ksymtab+devm_gpio_request) \
*(___ksymtab+devm_gpio_request_one) \
*(___ksymtab+devm_ioport_map) \
*(___ksymtab+devm_ioport_unmap) \
*(___ksymtab+devm_remove_action) \
*(___ksymtab+devres_add) \
*(___ksymtab+devres_alloc) \
*(___ksymtab+devres_destroy) \
*(___ksymtab+devres_find) \
*(___ksymtab+devres_for_each_res) \
*(___ksymtab+devres_free) \
*(___ksymtab+devres_get) \
*(___ksymtab+devres_release) \
*(___ksymtab+devres_remove) \
*(___ksymtab+dget_parent) \
*(___ksymtab+dio_end_io) \
*(___ksymtab+directly_mappable_cdev_bdi) \
*(___ksymtab+disable_irq) \
*(___ksymtab+disable_percpu_irq) \
*(___ksymtab+disk_get_part) \
*(___ksymtab+disk_map_sector_rcu) \
*(___ksymtab+disk_part_iter_exit) \
*(___ksymtab+disk_part_iter_init) \
*(___ksymtab+disk_part_iter_next) \
*(___ksymtab+disk_stack_limits) \
*(___ksymtab+div64_s64) \
*(___ksymtab+div64_u64) \
*(___ksymtab+div64_u64_rem) \
*(___ksymtab+div_s64_rem) \
*(___ksymtab+dlci_ioctl_set) \
*(___ksymtab+dma_async_tx_descriptor_init) \
*(___ksymtab+dma_common_get_sgtable) \
*(___ksymtab+dma_common_mmap) \
*(___ksymtab+dma_direct_ops) \
*(___ksymtab+dma_find_channel) \
*(___ksymtab+dma_get_required_mask) \
*(___ksymtab+dma_get_slave_channel) \
*(___ksymtab+dma_issue_pending_all) \
*(___ksymtab+dma_release_channel) \
*(___ksymtab+dma_request_slave_channel) \
*(___ksymtab+dma_run_dependencies) \
*(___ksymtab+dma_spin_lock) \
*(___ksymtab+dma_sync_wait) \
*(___ksymtab+dma_wait_for_async_tx) \
*(___ksymtab+dmaengine_get) \
*(___ksymtab+dmaengine_put) \
*(___ksymtab+dmam_alloc_noncoherent) \
*(___ksymtab+dmam_free_coherent) \
*(___ksymtab+dmam_free_noncoherent) \
*(___ksymtab+dmam_pool_create) \
*(___ksymtab+dmam_pool_destroy) \
*(___ksymtab+do_IRQ) \
*(___ksymtab+do_SAK) \
*(___ksymtab+do_exit) \
*(___ksymtab+do_map_probe) \
*(___ksymtab+do_settimeofday) \
*(___ksymtab+do_splice_direct) \
*(___ksymtab+done_path_create) \
*(___ksymtab+dql_init) \
*(___ksymtab+dql_reset) \
*(___ksymtab+drain_workqueue) \
*(___ksymtab+driver_find) \
*(___ksymtab+driver_find_device) \
*(___ksymtab+driver_for_each_device) \
*(___ksymtab+dummy_irq_chip) \
*(___ksymtab+each_symbol_section) \
*(___ksymtab+elevator_alloc) \
*(___ksymtab+elevator_change) \
*(___ksymtab+elevator_exit) \
*(___ksymtab+elevator_init) \
*(___ksymtab+elv_abort_queue) \
*(___ksymtab+elv_add_request) \
*(___ksymtab+elv_dispatch_add_tail) \
*(___ksymtab+elv_rb_add) \
*(___ksymtab+elv_rb_del) \
*(___ksymtab+elv_rb_find) \
*(___ksymtab+elv_rb_former_request) \
*(___ksymtab+elv_rb_latter_request) \
*(___ksymtab+elv_register) \
*(___ksymtab+elv_register_queue) \
*(___ksymtab+elv_rq_merge_ok) \
*(___ksymtab+elv_unregister) \
*(___ksymtab+elv_unregister_queue) \
*(___ksymtab+emergency_restart) \
*(___ksymtab+empty_aops) \
*(___ksymtab+empty_zero_page) \
*(___ksymtab+enable_kernel_fp) \
*(___ksymtab+enable_percpu_irq) \
*(___ksymtab+end_buffer_async_write) \
*(___ksymtab+end_buffer_read_sync) \
*(___ksymtab+end_buffer_write_sync) \
*(___ksymtab+eth_change_mtu) \
*(___ksymtab+eth_header) \
*(___ksymtab+eth_header_cache) \
*(___ksymtab+eth_header_parse) \
*(___ksymtab+eth_rebuild_header) \
*(___ksymtab+eventfd_ctx_fdget) \
*(___ksymtab+eventfd_ctx_fileget) \
*(___ksymtab+eventfd_ctx_get) \
*(___ksymtab+eventfd_ctx_put) \
*(___ksymtab+eventfd_ctx_read) \
*(___ksymtab+eventfd_fget) \
*(___ksymtab+eventfd_signal) \
*(___ksymtab+expand_files) \
*(___ksymtab+f_setown) \
*(___ksymtab+fail_migrate_page) \
*(___ksymtab+fanout_mutex) \
*(___ksymtab+fb_notifier_call_chain) \
*(___ksymtab+fb_register_client) \
*(___ksymtab+fb_unregister_client) \
*(___ksymtab+fd_install) \
*(___ksymtab+fget) \
*(___ksymtab+fget_light) \
*(___ksymtab+fget_raw) \
*(___ksymtab+fib_default_rule_pref) \
*(___ksymtab+fiemap_check_flags) \
*(___ksymtab+fiemap_fill_next_extent) \
*(___ksymtab+fifo_create_dflt) \
*(___ksymtab+fifo_set_limit) \
*(___ksymtab+file_open_root) \
*(___ksymtab+file_ra_state_init) \
*(___ksymtab+file_remove_suid) \
*(___ksymtab+filemap_flush) \
*(___ksymtab+filemap_page_mkwrite) \
*(___ksymtab+filp_close) \
*(___ksymtab+filp_open) \
*(___ksymtab+find_get_page) \
*(___ksymtab+find_get_pages_contig) \
*(___ksymtab+find_get_pid) \
*(___ksymtab+find_last_bit) \
*(___ksymtab+find_linux_pte_or_hugepte) \
*(___ksymtab+find_lock_page) \
*(___ksymtab+find_module) \
*(___ksymtab+find_pid_ns) \
*(___ksymtab+find_symbol) \
*(___ksymtab+find_task_by_vpid) \
*(___ksymtab+find_vma) \
*(___ksymtab+find_vpid) \
*(___ksymtab+firmware_kobj) \
*(___ksymtab+fixed_size_llseek) \
*(___ksymtab+flex_array_alloc) \
*(___ksymtab+flex_array_clear) \
*(___ksymtab+flex_array_free) \
*(___ksymtab+flex_array_free_parts) \
*(___ksymtab+flex_array_get) \
*(___ksymtab+flex_array_get_ptr) \
*(___ksymtab+flex_array_prealloc) \
*(___ksymtab+flex_array_put) \
*(___ksymtab+flex_array_shrink) \
*(___ksymtab+flock_lock_file_wait) \
*(___ksymtab+flow_cache_genid) \
*(___ksymtab+flush_dcache_icache_page) \
*(___ksymtab+flush_dcache_range) \
*(___ksymtab+flush_fp_to_thread) \
*(___ksymtab+flush_hash_entry) \
*(___ksymtab+flush_hash_pages) \
*(___ksymtab+flush_icache_user_range) \
*(___ksymtab+flush_instruction_cache) \
*(___ksymtab+flush_kthread_work) \
*(___ksymtab+flush_kthread_worker) \
*(___ksymtab+flush_old_exec) \
*(___ksymtab+flush_tlb_kernel_range) \
*(___ksymtab+flush_tlb_mm) \
*(___ksymtab+flush_tlb_page) \
*(___ksymtab+flush_tlb_range) \
*(___ksymtab+follow_pfn) \
*(___ksymtab+free_anon_bdev) \
*(___ksymtab+free_buffer_head) \
*(___ksymtab+free_dma) \
*(___ksymtab+free_inode_nonrcu) \
*(___ksymtab+free_reserved_area) \
*(___ksymtab+free_task) \
*(___ksymtab+free_vm_area) \
*(___ksymtab+freeze_bdev) \
*(___ksymtab+fs_bio_set) \
*(___ksymtab+fs_kobj) \
*(___ksymtab+fsl_ifc_ctrl_dev) \
*(___ksymtab+fsl_ifc_find) \
*(___ksymtab+fsl_lbc_addr) \
*(___ksymtab+fsl_lbc_ctrl_dev) \
*(___ksymtab+fsl_lbc_find) \
*(___ksymtab+fsnotify) \
*(___ksymtab+fsnotify_get_cookie) \
*(___ksymtab+fsstack_copy_attr_all) \
*(___ksymtab+fsstack_copy_inode_size) \
*(___ksymtab+fsync_bdev) \
*(___ksymtab+gcd) \
*(___ksymtab+gen_estimator_active) \
*(___ksymtab+gen_kill_estimator) \
*(___ksymtab+gen_new_estimator) \
*(___ksymtab+gen_replace_estimator) \
*(___ksymtab+generate_random_uuid) \
*(___ksymtab+generic_access_phys) \
*(___ksymtab+generic_block_bmap) \
*(___ksymtab+generic_block_fiemap) \
*(___ksymtab+generic_check_addressable) \
*(___ksymtab+generic_cont_expand_simple) \
*(___ksymtab+generic_error_remove_page) \
*(___ksymtab+generic_file_buffered_write) \
*(___ksymtab+generic_file_direct_write) \
*(___ksymtab+generic_file_fsync) \
*(___ksymtab+generic_file_splice_write) \
*(___ksymtab+generic_getxattr) \
*(___ksymtab+generic_handle_irq) \
*(___ksymtab+generic_listxattr) \
*(___ksymtab+generic_make_request) \
*(___ksymtab+generic_mii_ioctl) \
*(___ksymtab+generic_pipe_buf_confirm) \
*(___ksymtab+generic_pipe_buf_get) \
*(___ksymtab+generic_pipe_buf_map) \
*(___ksymtab+generic_pipe_buf_release) \
*(___ksymtab+generic_pipe_buf_steal) \
*(___ksymtab+generic_pipe_buf_unmap) \
*(___ksymtab+generic_removexattr) \
*(___ksymtab+generic_ro_fops) \
*(___ksymtab+generic_segment_checks) \
*(___ksymtab+generic_setxattr) \
*(___ksymtab+generic_show_options) \
*(___ksymtab+generic_splice_sendpage) \
*(___ksymtab+generic_write_end) \
*(___ksymtab+genl_notify) \
*(___ksymtab+genl_register_ops) \
*(___ksymtab+genl_unregister_ops) \
*(___ksymtab+genphy_config_aneg) \
*(___ksymtab+genphy_read_status) \
*(___ksymtab+genphy_restart_aneg) \
*(___ksymtab+genphy_resume) \
*(___ksymtab+genphy_suspend) \
*(___ksymtab+get_anon_bdev) \
*(___ksymtab+get_baudrate) \
*(___ksymtab+get_brgfreq) \
*(___ksymtab+get_cpu_device) \
*(___ksymtab+get_cpu_idle_time_us) \
*(___ksymtab+get_cpu_iowait_time_us) \
*(___ksymtab+get_current_tty) \
*(___ksymtab+get_disk) \
*(___ksymtab+get_fs_type) \
*(___ksymtab+get_gendisk) \
*(___ksymtab+get_io_context) \
*(___ksymtab+get_kernel_page) \
*(___ksymtab+get_kernel_pages) \
*(___ksymtab+get_max_files) \
*(___ksymtab+get_monotonic_boottime) \
*(___ksymtab+get_mtd_device) \
*(___ksymtab+get_mtd_device_nm) \
*(___ksymtab+get_option) \
*(___ksymtab+get_options) \
*(___ksymtab+get_pci_dma_ops) \
*(___ksymtab+get_phy_device) \
*(___ksymtab+get_phy_id) \
*(___ksymtab+get_pid_task) \
*(___ksymtab+get_qe_base) \
*(___ksymtab+get_random_int) \
*(___ksymtab+get_task_comm) \
*(___ksymtab+get_task_io_context) \
*(___ksymtab+get_task_mm) \
*(___ksymtab+get_thermal_instance) \
*(___ksymtab+get_tz_trend) \
*(___ksymtab+get_unmapped_area) \
*(___ksymtab+get_unused_fd_flags) \
*(___ksymtab+get_user_pages) \
*(___ksymtab+get_user_pages_fast) \
*(___ksymtab+get_vm_area) \
*(___ksymtab+get_write_access) \
*(___ksymtab+get_zeroed_page) \
*(___ksymtab+getboottime) \
*(___ksymtab+getname) \
*(___ksymtab+getnstimeofday) \
*(___ksymtab+getrawmonotonic) \
*(___ksymtab+gfar_phc_index) \
*(___ksymtab+gnet_stats_copy_basic) \
*(___ksymtab+gnet_stats_copy_rate_est) \
*(___ksymtab+gnet_stats_finish_copy) \
*(___ksymtab+gnet_stats_start_copy) \
*(___ksymtab+gnet_stats_start_copy_compat) \
*(___ksymtab+gpio_direction_input) \
*(___ksymtab+gpio_direction_output) \
*(___ksymtab+gpio_export) \
*(___ksymtab+gpio_export_link) \
*(___ksymtab+gpio_free) \
*(___ksymtab+gpio_free_array) \
*(___ksymtab+gpio_get_value_cansleep) \
*(___ksymtab+gpio_request) \
*(___ksymtab+gpio_request_array) \
*(___ksymtab+gpio_request_one) \
*(___ksymtab+gpio_set_debounce) \
*(___ksymtab+gpio_set_value_cansleep) \
*(___ksymtab+gpio_sysfs_set_active_low) \
*(___ksymtab+gpio_unexport) \
*(___ksymtab+gpiochip_add) \
*(___ksymtab+gpiochip_find) \
*(___ksymtab+gpiochip_is_requested) \
*(___ksymtab+gpiochip_remove) \
*(___ksymtab+grab_cache_page_nowait) \
*(___ksymtab+half_md4_transform) \
*(___ksymtab+handle_edge_irq) \
*(___ksymtab+handle_level_irq) \
*(___ksymtab+handle_nested_irq) \
*(___ksymtab+handle_simple_irq) \
*(___ksymtab+have_submounts) \
*(___ksymtab+hex2bin) \
*(___ksymtab+hex_asc) \
*(___ksymtab+hex_dump_to_buffer) \
*(___ksymtab+hrtimer_forward) \
*(___ksymtab+hrtimer_get_remaining) \
*(___ksymtab+hrtimer_get_res) \
*(___ksymtab+hrtimer_start) \
*(___ksymtab+hrtimer_try_to_cancel) \
*(___ksymtab+i2c_adapter_type) \
*(___ksymtab+i2c_add_adapter) \
*(___ksymtab+i2c_add_numbered_adapter) \
*(___ksymtab+i2c_bus_type) \
*(___ksymtab+i2c_clients_command) \
*(___ksymtab+i2c_del_adapter) \
*(___ksymtab+i2c_del_driver) \
*(___ksymtab+i2c_for_each_dev) \
*(___ksymtab+i2c_get_adapter) \
*(___ksymtab+i2c_lock_adapter) \
*(___ksymtab+i2c_master_recv) \
*(___ksymtab+i2c_master_send) \
*(___ksymtab+i2c_new_device) \
*(___ksymtab+i2c_new_dummy) \
*(___ksymtab+i2c_new_probed_device) \
*(___ksymtab+i2c_probe_func_quick_read) \
*(___ksymtab+i2c_put_adapter) \
*(___ksymtab+i2c_register_driver) \
*(___ksymtab+i2c_release_client) \
*(___ksymtab+i2c_smbus_read_block_data) \
*(___ksymtab+i2c_smbus_read_byte) \
*(___ksymtab+i2c_smbus_read_byte_data) \
*(___ksymtab+i2c_smbus_read_i2c_block_data) \
*(___ksymtab+i2c_smbus_read_word_data) \
*(___ksymtab+i2c_smbus_write_block_data) \
*(___ksymtab+i2c_smbus_write_byte) \
*(___ksymtab+i2c_smbus_write_byte_data) \
*(___ksymtab+i2c_smbus_write_i2c_block_data) \
*(___ksymtab+i2c_smbus_write_word_data) \
*(___ksymtab+i2c_smbus_xfer) \
*(___ksymtab+i2c_transfer) \
*(___ksymtab+i2c_unlock_adapter) \
*(___ksymtab+i2c_unregister_device) \
*(___ksymtab+i2c_use_client) \
*(___ksymtab+i2c_verify_adapter) \
*(___ksymtab+i2c_verify_client) \
*(___ksymtab+i8042_check_port_owner) \
*(___ksymtab+i8042_command) \
*(___ksymtab+i8042_install_filter) \
*(___ksymtab+i8042_lock_chip) \
*(___ksymtab+i8042_remove_filter) \
*(___ksymtab+i8042_unlock_chip) \
*(___ksymtab+icmp_err_convert) \
*(___ksymtab+ida_destroy) \
*(___ksymtab+ida_init) \
*(___ksymtab+ida_simple_get) \
*(___ksymtab+ida_simple_remove) \
*(___ksymtab+idr_get_next) \
*(___ksymtab+idr_replace) \
*(___ksymtab+ifla_policy) \
*(___ksymtab+igrab) \
*(___ksymtab+in_dev_finish_destroy) \
*(___ksymtab+inet6_add_offload) \
*(___ksymtab+inet6_del_offload) \
*(___ksymtab+inet_add_offload) \
*(___ksymtab+inet_csk_addr2sockaddr) \
*(___ksymtab+inet_csk_bind_conflict) \
*(___ksymtab+inet_csk_clear_xmit_timers) \
*(___ksymtab+inet_csk_clone_lock) \
*(___ksymtab+inet_csk_destroy_sock) \
*(___ksymtab+inet_csk_init_xmit_timers) \
*(___ksymtab+inet_csk_listen_start) \
*(___ksymtab+inet_csk_listen_stop) \
*(___ksymtab+inet_csk_reqsk_queue_hash_add) \
*(___ksymtab+inet_csk_reqsk_queue_prune) \
*(___ksymtab+inet_csk_route_child_sock) \
*(___ksymtab+inet_csk_route_req) \
*(___ksymtab+inet_csk_search_req) \
*(___ksymtab+inet_csk_timer_bug_msg) \
*(___ksymtab+inet_del_offload) \
*(___ksymtab+inet_dev_addr_type) \
*(___ksymtab+inet_get_local_port_range) \
*(___ksymtab+inet_getname) \
*(___ksymtab+inet_proto_csum_replace16) \
*(___ksymtab+inet_proto_csum_replace4) \
*(___ksymtab+inet_put_port) \
*(___ksymtab+inet_rtx_syn_ack) \
*(___ksymtab+inet_select_addr) \
*(___ksymtab+inet_twdr_hangman) \
*(___ksymtab+inet_twdr_twcal_tick) \
*(___ksymtab+inet_twdr_twkill_work) \
*(___ksymtab+inetdev_by_index) \
*(___ksymtab+init_buffer) \
*(___ksymtab+init_dummy_netdev) \
*(___ksymtab+init_srcu_struct) \
*(___ksymtab+init_task) \
*(___ksymtab+inode_add_bytes) \
*(___ksymtab+inode_dio_done) \
*(___ksymtab+inode_dio_wait) \
*(___ksymtab+inode_get_bytes) \
*(___ksymtab+inode_init_always) \
*(___ksymtab+inode_needs_sync) \
*(___ksymtab+inode_newsize_ok) \
*(___ksymtab+inode_permission) \
*(___ksymtab+inode_sb_list_add) \
*(___ksymtab+inode_set_bytes) \
*(___ksymtab+inode_sub_bytes) \
*(___ksymtab+inode_wait) \
*(___ksymtab+install_exec_creds) \
*(___ksymtab+int_sqrt) \
*(___ksymtab+intercept_table) \
*(___ksymtab+invalidate_bh_lrus) \
*(___ksymtab+invalidate_inode_buffers) \
*(___ksymtab+invalidate_mapping_pages) \
*(___ksymtab+invalidate_partition) \
*(___ksymtab+ioctl_by_bdev) \
*(___ksymtab+ioport_map) \
*(___ksymtab+ioport_unmap) \
*(___ksymtab+ioread16) \
*(___ksymtab+ioread16_rep) \
*(___ksymtab+ioread16be) \
*(___ksymtab+ioread8) \
*(___ksymtab+ioread8_rep) \
*(___ksymtab+iov_iter_fault_in_readable) \
*(___ksymtab+iov_iter_single_seg_count) \
*(___ksymtab+iov_pages) \
*(___ksymtab+iowrite16) \
*(___ksymtab+iowrite16_rep) \
*(___ksymtab+iowrite16be) \
*(___ksymtab+iowrite8) \
*(___ksymtab+iowrite8_rep) \
*(___ksymtab+ip4_datagram_release_cb) \
*(___ksymtab+ip_build_and_send_pkt) \
*(___ksymtab+ip_check_defrag) \
*(___ksymtab+ip_ct_attach) \
*(___ksymtab+ip_defrag) \
*(___ksymtab+ip_fast_csum) \
*(___ksymtab+ip_fragment) \
*(___ksymtab+ip_options_compile) \
*(___ksymtab+ip_options_rcv_srr) \
*(___ksymtab+ip_route_me_harder) \
*(___ksymtab+ip_send_check) \
*(___ksymtab+ip_tos2prio) \
*(___ksymtab+ipt_alloc_initial_table) \
*(___ksymtab+ipt_do_table) \
*(___ksymtab+ipt_register_table) \
*(___ksymtab+ipt_unregister_table) \
*(___ksymtab+ipv4_sk_redirect) \
*(___ksymtab+ipv6_find_hdr) \
*(___ksymtab+ipv6_find_tlv) \
*(___ksymtab+irq_create_direct_mapping) \
*(___ksymtab+irq_create_mapping) \
*(___ksymtab+irq_create_of_mapping) \
*(___ksymtab+irq_create_strict_mappings) \
*(___ksymtab+irq_domain_add_legacy) \
*(___ksymtab+irq_domain_add_simple) \
*(___ksymtab+irq_domain_associate) \
*(___ksymtab+irq_domain_associate_many) \
*(___ksymtab+irq_domain_remove) \
*(___ksymtab+irq_domain_simple_ops) \
*(___ksymtab+irq_domain_xlate_onecell) \
*(___ksymtab+irq_domain_xlate_onetwocell) \
*(___ksymtab+irq_domain_xlate_twocell) \
*(___ksymtab+irq_find_host) \
*(___ksymtab+irq_find_mapping) \
*(___ksymtab+irq_free_descs) \
*(___ksymtab+irq_get_irq_data) \
*(___ksymtab+irq_modify_status) \
*(___ksymtab+irq_set_chip) \
*(___ksymtab+irq_set_chip_and_handler_name) \
*(___ksymtab+irq_set_chip_data) \
*(___ksymtab+irq_set_default_host) \
*(___ksymtab+irq_set_handler_data) \
*(___ksymtab+irq_set_irq_type) \
*(___ksymtab+irq_set_irq_wake) \
*(___ksymtab+irq_stat) \
*(___ksymtab+irq_to_desc) \
*(___ksymtab+irq_work_queue) \
*(___ksymtab+irq_work_run) \
*(___ksymtab+irq_work_sync) \
*(___ksymtab+isa_bridge_pcidev) \
*(___ksymtab+isa_dma_bridge_buggy) \
*(___ksymtab+isa_io_base) \
*(___ksymtab+isa_mem_base) \
*(___ksymtab+iter_div_u64_rem) \
*(___ksymtab+iterate_dir) \
*(___ksymtab+iterate_fd) \
*(___ksymtab+iw_handler_get_spy) \
*(___ksymtab+iw_handler_get_thrspy) \
*(___ksymtab+iw_handler_set_spy) \
*(___ksymtab+iw_handler_set_thrspy) \
*(___ksymtab+jump_label_rate_limit) \
*(___ksymtab+kallsyms_on_each_symbol) \
*(___ksymtab+kcrypto_wq) \
*(___ksymtab+kern_mount_data) \
*(___ksymtab+kern_path) \
*(___ksymtab+kern_path_create) \
*(___ksymtab+kern_path_mountpoint) \
*(___ksymtab+kern_unmount) \
*(___ksymtab+kernel_accept) \
*(___ksymtab+kernel_cpustat) \
*(___ksymtab+kernel_getpeername) \
*(___ksymtab+kernel_getsockname) \
*(___ksymtab+kernel_getsockopt) \
*(___ksymtab+kernel_halt) \
*(___ksymtab+kernel_kobj) \
*(___ksymtab+kernel_listen) \
*(___ksymtab+kernel_power_off) \
*(___ksymtab+kernel_read) \
*(___ksymtab+kernel_restart) \
*(___ksymtab+kernel_sendpage) \
*(___ksymtab+kernel_sock_ioctl) \
*(___ksymtab+kernel_write) \
*(___ksymtab+kernstart_addr) \
*(___ksymtab+kill_bdev) \
*(___ksymtab+kill_pgrp) \
*(___ksymtab+kill_pid) \
*(___ksymtab+kill_proc_info) \
*(___ksymtab+klist_add_after) \
*(___ksymtab+klist_add_before) \
*(___ksymtab+klist_add_head) \
*(___ksymtab+klist_add_tail) \
*(___ksymtab+klist_del) \
*(___ksymtab+klist_init) \
*(___ksymtab+klist_iter_exit) \
*(___ksymtab+klist_iter_init) \
*(___ksymtab+klist_iter_init_node) \
*(___ksymtab+klist_next) \
*(___ksymtab+klist_node_attached) \
*(___ksymtab+klist_remove) \
*(___ksymtab+km_new_mapping) \
*(___ksymtab+km_policy_expired) \
*(___ksymtab+km_policy_notify) \
*(___ksymtab+km_query) \
*(___ksymtab+km_report) \
*(___ksymtab+km_state_expired) \
*(___ksymtab+km_state_notify) \
*(___ksymtab+kmalloc_dma_caches) \
*(___ksymtab+kmem_cache_shrink) \
*(___ksymtab+kmsg_dump_get_buffer) \
*(___ksymtab+kmsg_dump_get_line) \
*(___ksymtab+kmsg_dump_register) \
*(___ksymtab+kmsg_dump_rewind) \
*(___ksymtab+kmsg_dump_unregister) \
*(___ksymtab+kobject_add) \
*(___ksymtab+kobject_create_and_add) \
*(___ksymtab+kobject_del) \
*(___ksymtab+kobject_get) \
*(___ksymtab+kobject_get_path) \
*(___ksymtab+kobject_init) \
*(___ksymtab+kobject_init_and_add) \
*(___ksymtab+kobject_put) \
*(___ksymtab+kobject_rename) \
*(___ksymtab+kobject_set_name) \
*(___ksymtab+krealloc) \
*(___ksymtab+kset_create_and_add) \
*(___ksymtab+kset_register) \
*(___ksymtab+kset_unregister) \
*(___ksymtab+ksize) \
*(___ksymtab+kstat) \
*(___ksymtab+kstrtoint) \
*(___ksymtab+kstrtoint_from_user) \
*(___ksymtab+kstrtol_from_user) \
*(___ksymtab+kstrtoll) \
*(___ksymtab+kstrtoll_from_user) \
*(___ksymtab+kstrtos16) \
*(___ksymtab+kstrtos16_from_user) \
*(___ksymtab+kstrtos8) \
*(___ksymtab+kstrtos8_from_user) \
*(___ksymtab+kstrtou16) \
*(___ksymtab+kstrtou16_from_user) \
*(___ksymtab+kthread_freezable_should_stop) \
*(___ksymtab+kthread_worker_fn) \
*(___ksymtab+ktime_add_ns) \
*(___ksymtab+ktime_add_safe) \
*(___ksymtab+ktime_sub_ns) \
*(___ksymtab+laptop_mode) \
*(___ksymtab+lcm) \
*(___ksymtab+lease_get_mtime) \
*(___ksymtab+lease_modify) \
*(___ksymtab+led_classdev_resume) \
*(___ksymtab+led_classdev_suspend) \
*(___ksymtab+led_stop_software_blink) \
*(___ksymtab+led_trigger_blink) \
*(___ksymtab+led_trigger_remove) \
*(___ksymtab+led_trigger_rename_static) \
*(___ksymtab+led_trigger_set) \
*(___ksymtab+led_trigger_set_default) \
*(___ksymtab+led_trigger_show) \
*(___ksymtab+led_trigger_store) \
*(___ksymtab+leds_list) \
*(___ksymtab+leds_list_lock) \
*(___ksymtab+lg_global_lock) \
*(___ksymtab+lg_global_unlock) \
*(___ksymtab+lg_local_lock) \
*(___ksymtab+lg_local_lock_cpu) \
*(___ksymtab+lg_local_unlock) \
*(___ksymtab+lg_local_unlock_cpu) \
*(___ksymtab+lg_lock_init) \
*(___ksymtab+linkwatch_fire_event) \
*(___ksymtab+list_lru_add) \
*(___ksymtab+list_lru_count_node) \
*(___ksymtab+list_lru_del) \
*(___ksymtab+list_lru_destroy) \
*(___ksymtab+list_lru_init) \
*(___ksymtab+list_lru_walk_node) \
*(___ksymtab+ll_rw_block) \
*(___ksymtab+llc_add_pack) \
*(___ksymtab+llc_build_and_send_ui_pkt) \
*(___ksymtab+llc_mac_hdr_init) \
*(___ksymtab+llc_remove_pack) \
*(___ksymtab+llc_sap_close) \
*(___ksymtab+llc_sap_find) \
*(___ksymtab+llc_sap_list) \
*(___ksymtab+llc_sap_list_lock) \
*(___ksymtab+llc_sap_open) \
*(___ksymtab+llc_set_station_handler) \
*(___ksymtab+llist_add_batch) \
*(___ksymtab+llist_del_first) \
*(___ksymtab+local_clock) \
*(___ksymtab+lock_may_read) \
*(___ksymtab+lock_may_write) \
*(___ksymtab+lock_rename) \
*(___ksymtab+lockref_put_or_lock) \
*(___ksymtab+locks_alloc_lock) \
*(___ksymtab+locks_copy_lock) \
*(___ksymtab+locks_free_lock) \
*(___ksymtab+locks_init_lock) \
*(___ksymtab+locks_mandatory_area) \
*(___ksymtab+locks_release_private) \
*(___ksymtab+locks_remove_posix) \
*(___ksymtab+loops_per_jiffy) \
*(___ksymtab+mach_mpc831x_rdb) \
*(___ksymtab+machine_check_exception) \
*(___ksymtab+machine_id) \
*(___ksymtab+machine_power_off) \
*(___ksymtab+macvlan_common_newlink) \
*(___ksymtab+macvlan_dellink) \
*(___ksymtab+macvlan_link_register) \
*(___ksymtab+macvlan_start_xmit) \
*(___ksymtab+mangle_path) \
*(___ksymtab+map_destroy) \
*(___ksymtab+map_vm_area) \
*(___ksymtab+mapping_tagged) \
*(___ksymtab+mark_buffer_async_write) \
*(___ksymtab+mark_buffer_dirty) \
*(___ksymtab+mark_buffer_dirty_inode) \
*(___ksymtab+mark_mounts_for_expiry) \
*(___ksymtab+mark_page_accessed) \
*(___ksymtab+match_hex) \
*(___ksymtab+max_mapnr) \
*(___ksymtab+may_umount) \
*(___ksymtab+may_umount_tree) \
*(___ksymtab+md5_transform) \
*(___ksymtab+mdio_bus_type) \
*(___ksymtab+mdiobus_alloc_size) \
*(___ksymtab+mdiobus_free) \
*(___ksymtab+mdiobus_read) \
*(___ksymtab+mdiobus_scan) \
*(___ksymtab+mdiobus_write) \
*(___ksymtab+memalloc_socks) \
*(___ksymtab+memory_read_from_buffer) \
*(___ksymtab+memparse) \
*(___ksymtab+mempool_kmalloc) \
*(___ksymtab+memscan) \
*(___ksymtab+memstart_addr) \
*(___ksymtab+memweight) \
*(___ksymtab+migrate_page) \
*(___ksymtab+mii_check_link) \
*(___ksymtab+mii_check_media) \
*(___ksymtab+mktime) \
*(___ksymtab+mm_kobj) \
*(___ksymtab+mmput) \
*(___ksymtab+mnt_clone_write) \
*(___ksymtab+mnt_drop_write) \
*(___ksymtab+mnt_drop_write_file) \
*(___ksymtab+mnt_pin) \
*(___ksymtab+mnt_set_expiry) \
*(___ksymtab+mnt_unpin) \
*(___ksymtab+mnt_want_write) \
*(___ksymtab+mnt_want_write_file) \
*(___ksymtab+mntget) \
*(___ksymtab+mntput) \
*(___ksymtab+mod_delayed_work_on) \
*(___ksymtab+module_mutex) \
*(___ksymtab+mol_trampoline) \
*(___ksymtab+monotonic_to_bootbased) \
*(___ksymtab+mount_bdev) \
*(___ksymtab+mount_nodev) \
*(___ksymtab+mount_ns) \
*(___ksymtab+mount_pseudo) \
*(___ksymtab+mount_subtree) \
*(___ksymtab+movable_zone) \
*(___ksymtab+mpage_readpage) \
*(___ksymtab+mpage_readpages) \
*(___ksymtab+mpage_writepage) \
*(___ksymtab+mpage_writepages) \
*(___ksymtab+mtd_add_partition) \
*(___ksymtab+mtd_blktrans_cease_background) \
*(___ksymtab+mtd_concat_create) \
*(___ksymtab+mtd_concat_destroy) \
*(___ksymtab+mtd_del_partition) \
*(___ksymtab+mtd_device_parse_register) \
*(___ksymtab+mtd_do_chip_probe) \
*(___ksymtab+mtd_get_fact_prot_info) \
*(___ksymtab+mtd_get_unmapped_area) \
*(___ksymtab+mtd_get_user_prot_info) \
*(___ksymtab+mtd_is_locked) \
*(___ksymtab+mtd_is_partition) \
*(___ksymtab+mtd_lock) \
*(___ksymtab+mtd_lock_user_prot_reg) \
*(___ksymtab+mtd_table_mutex) \
*(___ksymtab+mtd_unlock) \
*(___ksymtab+n_tty_inherit_ops) \
*(___ksymtab+names_cachep) \
*(___ksymtab+nand_calculate_ecc) \
*(___ksymtab+nand_correct_data) \
*(___ksymtab+nand_default_bbt) \
*(___ksymtab+nand_flash_ids) \
*(___ksymtab+nand_lock) \
*(___ksymtab+nand_manuf_ids) \
*(___ksymtab+nand_release) \
*(___ksymtab+nand_scan) \
*(___ksymtab+nand_scan_bbt) \
*(___ksymtab+nand_scan_ident) \
*(___ksymtab+nand_scan_tail) \
*(___ksymtab+nand_unlock) \
*(___ksymtab+nand_wait_ready) \
*(___ksymtab+napi_by_id) \
*(___ksymtab+napi_get_frags) \
*(___ksymtab+napi_gro_flush) \
*(___ksymtab+napi_gro_frags) \
*(___ksymtab+napi_hash_add) \
*(___ksymtab+napi_hash_del) \
*(___ksymtab+ndo_dflt_bridge_getlink) \
*(___ksymtab+ndo_dflt_fdb_add) \
*(___ksymtab+ndo_dflt_fdb_del) \
*(___ksymtab+ndo_dflt_fdb_dump) \
*(___ksymtab+need_conntrack) \
*(___ksymtab+need_ipv4_conntrack) \
*(___ksymtab+neigh_compat_output) \
*(___ksymtab+neigh_event_ns) \
*(___ksymtab+neigh_for_each) \
*(___ksymtab+neigh_seq_next) \
*(___ksymtab+neigh_seq_start) \
*(___ksymtab+neigh_seq_stop) \
*(___ksymtab+net_disable_timestamp) \
*(___ksymtab+net_enable_timestamp) \
*(___ksymtab+net_namespace_list) \
*(___ksymtab+netdev_alert) \
*(___ksymtab+netdev_alloc_frag) \
*(___ksymtab+netdev_crit) \
*(___ksymtab+netdev_emerg) \
*(___ksymtab+netdev_features_change) \
*(___ksymtab+netdev_notify_peers) \
*(___ksymtab+netdev_refcnt_read) \
*(___ksymtab+netdev_rx_csum_fault) \
*(___ksymtab+netdev_stats_to_stats64) \
*(___ksymtab+netif_set_real_num_tx_queues) \
*(___ksymtab+netif_skb_features) \
*(___ksymtab+netif_stacked_transfer_operstate) \
*(___ksymtab+netlink_ack) \
*(___ksymtab+netlink_add_tap) \
*(___ksymtab+netlink_alloc_skb) \
*(___ksymtab+netlink_has_listeners) \
*(___ksymtab+netlink_rcv_skb) \
*(___ksymtab+netlink_remove_tap) \
*(___ksymtab+netlink_set_err) \
*(___ksymtab+nf_conntrack_alloc) \
*(___ksymtab+nf_conntrack_alter_reply) \
*(___ksymtab+nf_conntrack_broadcast_help) \
*(___ksymtab+nf_conntrack_flush) \
*(___ksymtab+nf_conntrack_flush_report) \
*(___ksymtab+nf_conntrack_free) \
*(___ksymtab+nf_conntrack_hash_check_insert) \
*(___ksymtab+nf_conntrack_hash_rnd) \
*(___ksymtab+nf_conntrack_htable_size) \
*(___ksymtab+nf_conntrack_in) \
*(___ksymtab+nf_conntrack_l3proto_generic) \
*(___ksymtab+nf_conntrack_l4proto_tcp4) \
*(___ksymtab+nf_conntrack_l4proto_tcp6) \
*(___ksymtab+nf_conntrack_l4proto_udp4) \
*(___ksymtab+nf_conntrack_l4proto_udp6) \
*(___ksymtab+nf_conntrack_lock) \
*(___ksymtab+nf_conntrack_max) \
*(___ksymtab+nf_conntrack_set_hashsize) \
*(___ksymtab+nf_ct_alloc_hashtable) \
*(___ksymtab+nf_ct_delete) \
*(___ksymtab+nf_ct_deliver_cached_events) \
*(___ksymtab+nf_ct_destroy) \
*(___ksymtab+nf_ct_expect_hsize) \
*(___ksymtab+nf_ct_expect_register_notifier) \
*(___ksymtab+nf_ct_expect_unregister_notifier) \
*(___ksymtab+nf_ct_extend_register) \
*(___ksymtab+nf_ct_extend_unregister) \
*(___ksymtab+nf_ct_free_hashtable) \
*(___ksymtab+nf_ct_helper_expectfn_find_by_name) \
*(___ksymtab+nf_ct_helper_expectfn_find_by_symbol) \
*(___ksymtab+nf_ct_helper_ext_add) \
*(___ksymtab+nf_ct_helper_hash) \
*(___ksymtab+nf_ct_helper_hsize) \
*(___ksymtab+nf_ct_l3proto_find_get) \
*(___ksymtab+nf_ct_l3proto_pernet_register) \
*(___ksymtab+nf_ct_l3proto_pernet_unregister) \
*(___ksymtab+nf_ct_l3proto_put) \
*(___ksymtab+nf_ct_l3protos) \
*(___ksymtab+nf_ct_l4proto_find_get) \
*(___ksymtab+nf_ct_l4proto_put) \
*(___ksymtab+nf_ct_seq_adjust) \
*(___ksymtab+nf_ct_seq_offset) \
*(___ksymtab+nf_ct_seqadj_init) \
*(___ksymtab+nf_ct_seqadj_set) \
*(___ksymtab+nf_ct_tcp_seqadj_set) \
*(___ksymtab+nf_ct_unlink_expect_report) \
*(___ksymtab+nf_ct_untracked_status_or) \
*(___ksymtab+nf_defrag_ipv4_enable) \
*(___ksymtab+nf_hooks) \
*(___ksymtab+nf_ip_checksum) \
*(___ksymtab+nf_log_bind_pf) \
*(___ksymtab+nf_log_unbind_pf) \
*(___ksymtab+nf_nat_decode_session_hook) \
*(___ksymtab+nf_nat_ftp_hook) \
*(___ksymtab+nf_nat_icmp_reply_translation) \
*(___ksymtab+nf_nat_irc_hook) \
*(___ksymtab+nf_nat_packet) \
*(___ksymtab+nf_nat_rtsp_hook) \
*(___ksymtab+nf_nat_rtsp_hook_expectfn) \
*(___ksymtab+nf_nat_sdp_addr_hook) \
*(___ksymtab+nf_nat_sdp_media_hook) \
*(___ksymtab+nf_nat_sdp_port_hook) \
*(___ksymtab+nf_nat_sdp_session_hook) \
*(___ksymtab+nf_nat_seq_adjust_hook) \
*(___ksymtab+nf_nat_sip_expect_hook) \
*(___ksymtab+nf_nat_sip_hook) \
*(___ksymtab+nf_nat_sip_seq_adjust_hook) \
*(___ksymtab+nf_nat_snmp_hook) \
*(___ksymtab+nf_nat_tftp_hook) \
*(___ksymtab+nf_queue_entry_get_refs) \
*(___ksymtab+nf_queue_entry_release_refs) \
*(___ksymtab+nf_register_hook) \
*(___ksymtab+nf_register_queue_handler) \
*(___ksymtab+nf_register_queue_imq_handler) \
*(___ksymtab+nf_reinject) \
*(___ksymtab+nf_unregister_hook) \
*(___ksymtab+nf_unregister_queue_handler) \
*(___ksymtab+nf_unregister_queue_imq_handler) \
*(___ksymtab+nf_xfrm_me_harder) \
*(___ksymtab+nfnetlink_alloc_skb) \
*(___ksymtab+nfnetlink_has_listeners) \
*(___ksymtab+nfnetlink_send) \
*(___ksymtab+nfnetlink_set_err) \
*(___ksymtab+nfnetlink_subsys_register) \
*(___ksymtab+nfnetlink_subsys_unregister) \
*(___ksymtab+nfnl_lock) \
*(___ksymtab+nfnl_unlock) \
*(___ksymtab+nfq_ct_hook) \
*(___ksymtab+nfq_ct_nat_hook) \
*(___ksymtab+nfulnl_log_packet) \
*(___ksymtab+nl_table) \
*(___ksymtab+nl_table_lock) \
*(___ksymtab+nla_append) \
*(___ksymtab+nla_policy_len) \
*(___ksymtab+nla_validate) \
*(___ksymtab+nlmsg_notify) \
*(___ksymtab+no_pci_devices) \
*(___ksymtab+nobh_truncate_page) \
*(___ksymtab+nobh_write_begin) \
*(___ksymtab+nobh_write_end) \
*(___ksymtab+nobh_writepage) \
*(___ksymtab+node_states) \
*(___ksymtab+noop_fsync) \
*(___ksymtab+notify_change) \
*(___ksymtab+nr_free_buffer_pages) \
*(___ksymtab+nr_irqs) \
*(___ksymtab+ns_to_timespec) \
*(___ksymtab+ns_to_timeval) \
*(___ksymtab+nvram_commit) \
*(___ksymtab+nvram_get) \
*(___ksymtab+nvram_get_size) \
*(___ksymtab+nvram_getall) \
*(___ksymtab+nvram_read_byte) \
*(___ksymtab+nvram_set) \
*(___ksymtab+nvram_sync) \
*(___ksymtab+nvram_unset) \
*(___ksymtab+nvram_write_byte) \
*(___ksymtab+of_alias_get_id) \
*(___ksymtab+of_allnodes) \
*(___ksymtab+of_can_translate_address) \
*(___ksymtab+of_count_phandle_with_args) \
*(___ksymtab+of_create_pci_dev) \
*(___ksymtab+of_dev_get) \
*(___ksymtab+of_dev_put) \
*(___ksymtab+of_device_alloc) \
*(___ksymtab+of_device_is_stdout_path) \
*(___ksymtab+of_dma_controller_free) \
*(___ksymtab+of_dma_controller_register) \
*(___ksymtab+of_dma_simple_xlate) \
*(___ksymtab+of_fdt_unflatten_tree) \
*(___ksymtab+of_find_all_nodes) \
*(___ksymtab+of_find_device_by_node) \
*(___ksymtab+of_find_i2c_adapter_by_node) \
*(___ksymtab+of_find_i2c_device_by_node) \
*(___ksymtab+of_find_matching_node_and_match) \
*(___ksymtab+of_find_node_by_name) \
*(___ksymtab+of_find_node_by_path) \
*(___ksymtab+of_find_node_by_phandle) \
*(___ksymtab+of_find_node_by_type) \
*(___ksymtab+of_find_node_with_property) \
*(___ksymtab+of_find_property) \
*(___ksymtab+of_get_address) \
*(___ksymtab+of_get_child_by_name) \
*(___ksymtab+of_get_cpu_node) \
*(___ksymtab+of_get_dma_window) \
*(___ksymtab+of_get_mac_address) \
*(___ksymtab+of_get_mac_address_mtd) \
*(___ksymtab+of_get_named_gpio_flags) \
*(___ksymtab+of_get_nand_bus_width) \
*(___ksymtab+of_get_nand_ecc_mode) \
*(___ksymtab+of_get_nand_on_flash_bbt) \
*(___ksymtab+of_get_next_available_child) \
*(___ksymtab+of_get_next_child) \
*(___ksymtab+of_get_next_parent) \
*(___ksymtab+of_get_parent) \
*(___ksymtab+of_get_pci_address) \
*(___ksymtab+of_get_phy_mode) \
*(___ksymtab+of_gpio_simple_xlate) \
*(___ksymtab+of_i8042_aux_irq) \
*(___ksymtab+of_i8042_kbd_irq) \
*(___ksymtab+of_irq_map_one) \
*(___ksymtab+of_irq_map_pci) \
*(___ksymtab+of_irq_map_raw) \
*(___ksymtab+of_irq_to_resource) \
*(___ksymtab+of_irq_to_resource_table) \
*(___ksymtab+of_machine_is_compatible) \
*(___ksymtab+of_match_node) \
*(___ksymtab+of_mdio_find_bus) \
*(___ksymtab+of_mm_gpiochip_add) \
*(___ksymtab+of_modalias_node) \
*(___ksymtab+of_n_addr_cells) \
*(___ksymtab+of_n_size_cells) \
*(___ksymtab+of_parse_phandle) \
*(___ksymtab+of_parse_phandle_with_args) \
*(___ksymtab+of_parse_phandle_with_fixed_args) \
*(___ksymtab+of_pci_address_to_resource) \
*(___ksymtab+of_pci_find_child_device) \
*(___ksymtab+of_pci_get_devfn) \
*(___ksymtab+of_pci_parse_bus_range) \
*(___ksymtab+of_pci_range_parser_init) \
*(___ksymtab+of_pci_range_parser_one) \
*(___ksymtab+of_phy_connect) \
*(___ksymtab+of_phy_connect_fixed_link) \
*(___ksymtab+of_phy_find_device) \
*(___ksymtab+of_platform_populate) \
*(___ksymtab+of_prop_next_string) \
*(___ksymtab+of_prop_next_u32) \
*(___ksymtab+of_property_count_strings) \
*(___ksymtab+of_property_match_string) \
*(___ksymtab+of_property_read_u16_array) \
*(___ksymtab+of_property_read_u32_array) \
*(___ksymtab+of_property_read_u32_index) \
*(___ksymtab+of_property_read_u64) \
*(___ksymtab+of_property_read_u8_array) \
*(___ksymtab+of_rescan_bus) \
*(___ksymtab+of_scan_bus) \
*(___ksymtab+of_scan_pci_bridge) \
*(___ksymtab+of_translate_address) \
*(___ksymtab+of_translate_dma_address) \
*(___ksymtab+of_usb_get_phy_mode) \
*(___ksymtab+on_each_cpu) \
*(___ksymtab+on_each_cpu_cond) \
*(___ksymtab+on_each_cpu_mask) \
*(___ksymtab+oops_in_progress) \
*(___ksymtab+open_exec) \
*(___ksymtab+orderly_poweroff) \
*(___ksymtab+out_of_line_wait_on_atomic_t) \
*(___ksymtab+override_creds) \
*(___ksymtab+page_cache_async_readahead) \
*(___ksymtab+page_cache_sync_readahead) \
*(___ksymtab+page_follow_link_light) \
*(___ksymtab+page_is_ram) \
*(___ksymtab+page_mkclean) \
*(___ksymtab+page_put_link) \
*(___ksymtab+page_readlink) \
*(___ksymtab+page_symlink) \
*(___ksymtab+page_symlink_inode_operations) \
*(___ksymtab+page_zero_new_buffers) \
*(___ksymtab+pagecache_write_begin) \
*(___ksymtab+pagecache_write_end) \
*(___ksymtab+par_io_config_pin) \
*(___ksymtab+par_io_data_set) \
*(___ksymtab+par_io_of_config) \
*(___ksymtab+param_get_bool) \
*(___ksymtab+param_get_byte) \
*(___ksymtab+param_get_charp) \
*(___ksymtab+param_get_int) \
*(___ksymtab+param_get_invbool) \
*(___ksymtab+param_get_long) \
*(___ksymtab+param_get_short) \
*(___ksymtab+param_get_string) \
*(___ksymtab+param_get_uint) \
*(___ksymtab+param_get_ulong) \
*(___ksymtab+param_get_ushort) \
*(___ksymtab+param_ops_bint) \
*(___ksymtab+param_ops_byte) \
*(___ksymtab+param_ops_invbool) \
*(___ksymtab+param_ops_long) \
*(___ksymtab+param_ops_short) \
*(___ksymtab+param_ops_ulong) \
*(___ksymtab+param_set_bint) \
*(___ksymtab+param_set_bool) \
*(___ksymtab+param_set_byte) \
*(___ksymtab+param_set_charp) \
*(___ksymtab+param_set_copystring) \
*(___ksymtab+param_set_int) \
*(___ksymtab+param_set_invbool) \
*(___ksymtab+param_set_long) \
*(___ksymtab+param_set_short) \
*(___ksymtab+param_set_uint) \
*(___ksymtab+param_set_ulong) \
*(___ksymtab+param_set_ushort) \
*(___ksymtab+part_round_stats) \
*(___ksymtab+path_get) \
*(___ksymtab+path_is_under) \
*(___ksymtab+path_put) \
*(___ksymtab+pci_add_dynid) \
*(___ksymtab+pci_add_new_bus) \
*(___ksymtab+pci_add_resource) \
*(___ksymtab+pci_add_resource_offset) \
*(___ksymtab+pci_address_to_pio) \
*(___ksymtab+pci_alloc_dev) \
*(___ksymtab+pci_assign_resource) \
*(___ksymtab+pci_assign_unassigned_bridge_resources) \
*(___ksymtab+pci_back_from_sleep) \
*(___ksymtab+pci_bus_add_device) \
*(___ksymtab+pci_bus_add_devices) \
*(___ksymtab+pci_bus_alloc_resource) \
*(___ksymtab+pci_bus_assign_resources) \
*(___ksymtab+pci_bus_find_capability) \
*(___ksymtab+pci_bus_get) \
*(___ksymtab+pci_bus_max_busnr) \
*(___ksymtab+pci_bus_put) \
*(___ksymtab+pci_bus_read_dev_vendor_id) \
*(___ksymtab+pci_bus_resource_n) \
*(___ksymtab+pci_bus_sem) \
*(___ksymtab+pci_bus_set_ops) \
*(___ksymtab+pci_bus_size_bridges) \
*(___ksymtab+pci_bus_type) \
*(___ksymtab+pci_bus_write_config_word) \
*(___ksymtab+pci_cfg_access_lock) \
*(___ksymtab+pci_cfg_access_trylock) \
*(___ksymtab+pci_cfg_access_unlock) \
*(___ksymtab+pci_check_and_mask_intx) \
*(___ksymtab+pci_check_and_unmask_intx) \
*(___ksymtab+pci_choose_state) \
*(___ksymtab+pci_claim_resource) \
*(___ksymtab+pci_clear_master) \
*(___ksymtab+pci_clear_mwi) \
*(___ksymtab+pci_create_slot) \
*(___ksymtab+pci_destroy_slot) \
*(___ksymtab+pci_dev_driver) \
*(___ksymtab+pci_dev_get) \
*(___ksymtab+pci_dev_present) \
*(___ksymtab+pci_device_from_OF_node) \
*(___ksymtab+pci_disable_ido) \
*(___ksymtab+pci_disable_ltr) \
*(___ksymtab+pci_disable_obff) \
*(___ksymtab+pci_disable_pcie_error_reporting) \
*(___ksymtab+pci_disable_rom) \
*(___ksymtab+pci_domain_nr) \
*(___ksymtab+pci_dram_offset) \
*(___ksymtab+pci_enable_ido) \
*(___ksymtab+pci_enable_ltr) \
*(___ksymtab+pci_enable_obff) \
*(___ksymtab+pci_enable_pcie_error_reporting) \
*(___ksymtab+pci_enable_rom) \
*(___ksymtab+pci_find_bus) \
*(___ksymtab+pci_find_ext_capability) \
*(___ksymtab+pci_find_ht_capability) \
*(___ksymtab+pci_find_next_bus) \
*(___ksymtab+pci_find_next_capability) \
*(___ksymtab+pci_find_next_ext_capability) \
*(___ksymtab+pci_find_next_ht_capability) \
*(___ksymtab+pci_find_parent_resource) \
*(___ksymtab+pci_free_resource_list) \
*(___ksymtab+pci_get_class) \
*(___ksymtab+pci_get_domain_bus_and_slot) \
*(___ksymtab+pci_get_subsys) \
*(___ksymtab+pci_intx) \
*(___ksymtab+pci_iomap) \
*(___ksymtab+pci_load_and_free_saved_state) \
*(___ksymtab+pci_load_saved_state) \
*(___ksymtab+pci_map_rom) \
*(___ksymtab+pci_msi_off) \
*(___ksymtab+pci_pci_problems) \
*(___ksymtab+pci_platform_rom) \
*(___ksymtab+pci_pme_active) \
*(___ksymtab+pci_power_names) \
*(___ksymtab+pci_prepare_to_sleep) \
*(___ksymtab+pci_probe_reset_bus) \
*(___ksymtab+pci_probe_reset_slot) \
*(___ksymtab+pci_read_vpd) \
*(___ksymtab+pci_reenable_device) \
*(___ksymtab+pci_release_region) \
*(___ksymtab+pci_release_regions) \
*(___ksymtab+pci_release_selected_regions) \
*(___ksymtab+pci_remove_bus) \
*(___ksymtab+pci_renumber_slot) \
*(___ksymtab+pci_request_region) \
*(___ksymtab+pci_request_region_exclusive) \
*(___ksymtab+pci_request_regions) \
*(___ksymtab+pci_request_regions_exclusive) \
*(___ksymtab+pci_request_selected_regions) \
*(___ksymtab+pci_request_selected_regions_exclusive) \
*(___ksymtab+pci_rescan_bus) \
*(___ksymtab+pci_reset_bridge_secondary_bus) \
*(___ksymtab+pci_reset_bus) \
*(___ksymtab+pci_reset_function) \
*(___ksymtab+pci_reset_slot) \
*(___ksymtab+pci_restore_state) \
*(___ksymtab+pci_root_buses) \
*(___ksymtab+pci_save_state) \
*(___ksymtab+pci_scan_bridge) \
*(___ksymtab+pci_scan_bus) \
*(___ksymtab+pci_scan_bus_parented) \
*(___ksymtab+pci_scan_child_bus) \
*(___ksymtab+pci_scan_root_bus) \
*(___ksymtab+pci_scan_single_device) \
*(___ksymtab+pci_scan_slot) \
*(___ksymtab+pci_select_bars) \
*(___ksymtab+pci_set_cacheline_size) \
*(___ksymtab+pci_set_dma_max_seg_size) \
*(___ksymtab+pci_set_dma_seg_boundary) \
*(___ksymtab+pci_set_ltr) \
*(___ksymtab+pci_set_pcie_reset_state) \
*(___ksymtab+pci_set_power_state) \
*(___ksymtab+pci_slots_kset) \
*(___ksymtab+pci_stop_and_remove_bus_device) \
*(___ksymtab+pci_store_saved_state) \
*(___ksymtab+pci_target_state) \
*(___ksymtab+pci_try_set_mwi) \
*(___ksymtab+pci_unmap_rom) \
*(___ksymtab+pci_user_read_config_byte) \
*(___ksymtab+pci_user_read_config_dword) \
*(___ksymtab+pci_user_read_config_word) \
*(___ksymtab+pci_user_write_config_byte) \
*(___ksymtab+pci_user_write_config_dword) \
*(___ksymtab+pci_user_write_config_word) \
*(___ksymtab+pci_vpd_find_info_keyword) \
*(___ksymtab+pci_vpd_find_tag) \
*(___ksymtab+pci_vpd_truncate) \
*(___ksymtab+pci_wait_for_pending_transaction) \
*(___ksymtab+pci_wake_from_d3) \
*(___ksymtab+pci_walk_bus) \
*(___ksymtab+pci_write_vpd) \
*(___ksymtab+pcibios_align_resource) \
*(___ksymtab+pcibios_bus_to_resource) \
*(___ksymtab+pcibios_finish_adding_to_bus) \
*(___ksymtab+pcibios_resource_to_bus) \
*(___ksymtab+pcie_bus_configure_settings) \
*(___ksymtab+pcie_capability_clear_and_set_dword) \
*(___ksymtab+pcie_capability_clear_and_set_word) \
*(___ksymtab+pcie_capability_read_dword) \
*(___ksymtab+pcie_capability_write_dword) \
*(___ksymtab+pcie_capability_write_word) \
*(___ksymtab+pcie_get_minimum_link) \
*(___ksymtab+pcie_get_readrq) \
*(___ksymtab+pcie_port_bus_type) \
*(___ksymtab+pcie_port_service_register) \
*(___ksymtab+pcie_port_service_unregister) \
*(___ksymtab+pcie_set_readrq) \
*(___ksymtab+pcim_iomap) \
*(___ksymtab+pcim_pin_device) \
*(___ksymtab+pcix_get_max_mmrbc) \
*(___ksymtab+pcix_get_mmrbc) \
*(___ksymtab+pcix_set_mmrbc) \
*(___ksymtab+pcpu_base_addr) \
*(___ksymtab+percpu_ida_alloc) \
*(___ksymtab+percpu_ida_destroy) \
*(___ksymtab+percpu_ida_free) \
*(___ksymtab+percpu_ida_init) \
*(___ksymtab+pfifo_qdisc_ops) \
*(___ksymtab+phy_attach) \
*(___ksymtab+phy_connect) \
*(___ksymtab+phy_connect_direct) \
*(___ksymtab+phy_detach) \
*(___ksymtab+phy_device_free) \
*(___ksymtab+phy_disconnect) \
*(___ksymtab+phy_drivers_register) \
*(___ksymtab+phy_drivers_unregister) \
*(___ksymtab+phy_ethtool_get_eee) \
*(___ksymtab+phy_ethtool_get_wol) \
*(___ksymtab+phy_ethtool_gset) \
*(___ksymtab+phy_ethtool_ioctl) \
*(___ksymtab+phy_ethtool_set_eee) \
*(___ksymtab+phy_ethtool_set_wol) \
*(___ksymtab+phy_ethtool_sset) \
*(___ksymtab+phy_find_first) \
*(___ksymtab+phy_get_eee_err) \
*(___ksymtab+phy_init_eee) \
*(___ksymtab+phy_mii_ioctl) \
*(___ksymtab+phy_print_status) \
*(___ksymtab+phy_start) \
*(___ksymtab+phy_start_aneg) \
*(___ksymtab+phy_stop) \
*(___ksymtab+phys_mem_access_prot) \
*(___ksymtab+pid_task) \
*(___ksymtab+pid_vnr) \
*(___ksymtab+ping_prot) \
*(___ksymtab+pipe_lock) \
*(___ksymtab+pipe_to_file) \
*(___ksymtab+pipe_unlock) \
*(___ksymtab+platform_add_devices) \
*(___ksymtab+platform_create_bundle) \
*(___ksymtab+platform_driver_probe) \
*(___ksymtab+pm_power_off) \
*(___ksymtab+pm_qos_add_request) \
*(___ksymtab+pm_qos_remove_request) \
*(___ksymtab+poll_freewait) \
*(___ksymtab+poll_initwait) \
*(___ksymtab+posix_clock_register) \
*(___ksymtab+posix_clock_unregister) \
*(___ksymtab+posix_timer_event) \
*(___ksymtab+posix_timers_register_clock) \
*(___ksymtab+powerpc_debugfs_root) \
*(___ksymtab+ppc_enable_pmcs) \
*(___ksymtab+ppc_md) \
*(___ksymtab+ppc_proc_freq) \
*(___ksymtab+ppc_tb_freq) \
*(___ksymtab+ppp_channel_index) \
*(___ksymtab+ppp_register_channel) \
*(___ksymtab+ppp_register_compressor) \
*(___ksymtab+ppp_unit_number) \
*(___ksymtab+ppp_unregister_channel) \
*(___ksymtab+ppp_unregister_compressor) \
*(___ksymtab+prandom_bytes) \
*(___ksymtab+prandom_bytes_state) \
*(___ksymtab+prepare_binprm) \
*(___ksymtab+prepare_creds) \
*(___ksymtab+prepare_kernel_cred) \
*(___ksymtab+probe_kernel_read) \
*(___ksymtab+probe_kernel_write) \
*(___ksymtab+proc_doulongvec_minmax) \
*(___ksymtab+proc_get_parent_data) \
*(___ksymtab+proc_set_size) \
*(___ksymtab+proc_set_user) \
*(___ksymtab+proc_symlink) \
*(___ksymtab+process_srcu) \
*(___ksymtab+program_check_exception) \
*(___ksymtab+psched_ratecfg_precompute) \
*(___ksymtab+put_io_context) \
*(___ksymtab+put_mtd_device) \
*(___ksymtab+put_unused_fd) \
*(___ksymtab+pvclock_gtod_register_notifier) \
*(___ksymtab+pvclock_gtod_unregister_notifier) \
*(___ksymtab+qdisc_class_hash_destroy) \
*(___ksymtab+qdisc_class_hash_grow) \
*(___ksymtab+qdisc_class_hash_init) \
*(___ksymtab+qdisc_class_hash_insert) \
*(___ksymtab+qdisc_class_hash_remove) \
*(___ksymtab+qdisc_create_dflt) \
*(___ksymtab+qdisc_destroy) \
*(___ksymtab+qdisc_get_rtab) \
*(___ksymtab+qdisc_list_del) \
*(___ksymtab+qdisc_put_rtab) \
*(___ksymtab+qdisc_put_stab) \
*(___ksymtab+qdisc_reset) \
*(___ksymtab+qdisc_warn_nonwc) \
*(___ksymtab+qdisc_watchdog_cancel) \
*(___ksymtab+qdisc_watchdog_init) \
*(___ksymtab+qe_clock_source) \
*(___ksymtab+qe_get_brg_clk) \
*(___ksymtab+qe_get_firmware_info) \
*(___ksymtab+qe_get_num_of_risc) \
*(___ksymtab+qe_get_num_of_snums) \
*(___ksymtab+qe_get_snum) \
*(___ksymtab+qe_immr) \
*(___ksymtab+qe_issue_cmd) \
*(___ksymtab+qe_pin_free) \
*(___ksymtab+qe_pin_request) \
*(___ksymtab+qe_pin_set_dedicated) \
*(___ksymtab+qe_pin_set_gpio) \
*(___ksymtab+qe_put_snum) \
*(___ksymtab+qe_setbrg) \
*(___ksymtab+queue_kthread_work) \
*(___ksymtab+radix_tree_delete) \
*(___ksymtab+radix_tree_insert) \
*(___ksymtab+radix_tree_maybe_preload) \
*(___ksymtab+radix_tree_next_chunk) \
*(___ksymtab+radix_tree_next_hole) \
*(___ksymtab+radix_tree_preload) \
*(___ksymtab+radix_tree_prev_hole) \
*(___ksymtab+radix_tree_range_tag_if_tagged) \
*(___ksymtab+radix_tree_tag_clear) \
*(___ksymtab+radix_tree_tag_get) \
*(___ksymtab+radix_tree_tag_set) \
*(___ksymtab+radix_tree_tagged) \
*(___ksymtab+raw_notifier_call_chain) \
*(___ksymtab+raw_notifier_chain_register) \
*(___ksymtab+raw_notifier_chain_unregister) \
*(___ksymtab+rcu_idle_enter) \
*(___ksymtab+rcu_idle_exit) \
*(___ksymtab+rcu_irq_enter) \
*(___ksymtab+rcu_irq_exit) \
*(___ksymtab+read_cache_page) \
*(___ksymtab+read_cache_page_gfp) \
*(___ksymtab+read_cache_pages) \
*(___ksymtab+read_code) \
*(___ksymtab+recalc_sigpending) \
*(___ksymtab+reciprocal_value) \
*(___ksymtab+ref_module) \
*(___ksymtab+refresh_mtd_partitions) \
*(___ksymtab+register_8022_client) \
*(___ksymtab+register_console) \
*(___ksymtab+register_die_notifier) \
*(___ksymtab+register_exec_domain) \
*(___ksymtab+register_gifconf) \
*(___ksymtab+register_inet6addr_notifier) \
*(___ksymtab+register_inetaddr_notifier) \
*(___ksymtab+register_module_notifier) \
*(___ksymtab+register_mtd_blktrans) \
*(___ksymtab+register_mtd_chip_driver) \
*(___ksymtab+register_mtd_parser) \
*(___ksymtab+register_mtd_user) \
*(___ksymtab+register_netevent_notifier) \
*(___ksymtab+register_nls) \
*(___ksymtab+register_oom_notifier) \
*(___ksymtab+register_reboot_notifier) \
*(___ksymtab+register_shrinker) \
*(___ksymtab+register_snap_client) \
*(___ksymtab+register_switch) \
*(___ksymtab+register_syscore_ops) \
*(___ksymtab+register_sysctl) \
*(___ksymtab+register_sysctl_paths) \
*(___ksymtab+register_tcf_proto_ops) \
*(___ksymtab+release_pages) \
*(___ksymtab+release_pmc_hardware) \
*(___ksymtab+release_resource) \
*(___ksymtab+remap_pfn_range) \
*(___ksymtab+remove_arg_zero) \
*(___ksymtab+remove_irq) \
*(___ksymtab+remove_proc_subtree) \
*(___ksymtab+replace_mount_options) \
*(___ksymtab+replace_page_cache_page) \
*(___ksymtab+request_any_context_irq) \
*(___ksymtab+request_dma) \
*(___ksymtab+request_firmware) \
*(___ksymtab+request_resource) \
*(___ksymtab+reserve_pmc_hardware) \
*(___ksymtab+reset_devices) \
*(___ksymtab+revert_creds) \
*(___ksymtab+rh_alloc) \
*(___ksymtab+rh_alloc_align) \
*(___ksymtab+rh_alloc_fixed) \
*(___ksymtab+rh_attach_region) \
*(___ksymtab+rh_create) \
*(___ksymtab+rh_destroy) \
*(___ksymtab+rh_detach_region) \
*(___ksymtab+rh_dump) \
*(___ksymtab+rh_dump_blk) \
*(___ksymtab+rh_free) \
*(___ksymtab+rh_get_stats) \
*(___ksymtab+rh_init) \
*(___ksymtab+rh_set_owner) \
*(___ksymtab+rt_mutex_destroy) \
*(___ksymtab+rt_mutex_timed_lock) \
*(___ksymtab+rtc_lock) \
*(___ksymtab+rtnl_configure_link) \
*(___ksymtab+rtnl_create_link) \
*(___ksymtab+rtnl_link_get_net) \
*(___ksymtab+rtnl_unregister) \
*(___ksymtab+rwsem_wake) \
*(___ksymtab+save_mount_options) \
*(___ksymtab+sb_min_blocksize) \
*(___ksymtab+sb_set_blocksize) \
*(___ksymtab+scatterwalk_bytes_sglen) \
*(___ksymtab+scatterwalk_copychunks) \
*(___ksymtab+scatterwalk_done) \
*(___ksymtab+scatterwalk_map) \
*(___ksymtab+scatterwalk_map_and_copy) \
*(___ksymtab+scatterwalk_start) \
*(___ksymtab+sched_clock) \
*(___ksymtab+scm_detach_fds) \
*(___ksymtab+scsi_cmd_ioctl) \
*(___ksymtab+search_binary_handler) \
*(___ksymtab+secure_ipv4_port_ephemeral) \
*(___ksymtab+secure_ipv6_port_ephemeral) \
*(___ksymtab+send_remote_softirq) \
*(___ksymtab+seq_bitmap) \
*(___ksymtab+seq_bitmap_list) \
*(___ksymtab+seq_escape) \
*(___ksymtab+seq_hlist_next) \
*(___ksymtab+seq_hlist_next_percpu) \
*(___ksymtab+seq_hlist_next_rcu) \
*(___ksymtab+seq_hlist_start) \
*(___ksymtab+seq_hlist_start_head) \
*(___ksymtab+seq_hlist_start_head_rcu) \
*(___ksymtab+seq_hlist_start_percpu) \
*(___ksymtab+seq_hlist_start_rcu) \
*(___ksymtab+seq_list_next) \
*(___ksymtab+seq_list_start) \
*(___ksymtab+seq_list_start_head) \
*(___ksymtab+seq_path) \
*(___ksymtab+seq_print_acct) \
*(___ksymtab+seq_put_decimal_ll) \
*(___ksymtab+seq_put_decimal_ull) \
*(___ksymtab+seq_vprintf) \
*(___ksymtab+seq_write) \
*(___ksymtab+serial8250_clear_and_reinit_fifos) \
*(___ksymtab+serial8250_do_pm) \
*(___ksymtab+serial8250_do_set_termios) \
*(___ksymtab+serial8250_handle_irq) \
*(___ksymtab+serial8250_modem_status) \
*(___ksymtab+serial8250_register_8250_port) \
*(___ksymtab+serial8250_resume_port) \
*(___ksymtab+serial8250_rx_chars) \
*(___ksymtab+serial8250_set_isa_configurator) \
*(___ksymtab+serial8250_suspend_port) \
*(___ksymtab+serial8250_tx_chars) \
*(___ksymtab+serial8250_unregister_port) \
*(___ksymtab+serio_close) \
*(___ksymtab+serio_open) \
*(___ksymtab+serio_reconnect) \
*(___ksymtab+serio_rescan) \
*(___ksymtab+serio_unregister_child_port) \
*(___ksymtab+serio_unregister_driver) \
*(___ksymtab+serio_unregister_port) \
*(___ksymtab+set_bdi_congested) \
*(___ksymtab+set_bh_page) \
*(___ksymtab+set_binfmt) \
*(___ksymtab+set_blocksize) \
*(___ksymtab+set_create_files_as) \
*(___ksymtab+set_device_ro) \
*(___ksymtab+set_normalized_timespec) \
*(___ksymtab+set_security_override) \
*(___ksymtab+set_security_override_from_ctx) \
*(___ksymtab+set_task_ioprio) \
*(___ksymtab+set_timer_slack) \
*(___ksymtab+sg_alloc_table) \
*(___ksymtab+sg_alloc_table_from_pages) \
*(___ksymtab+sg_copy_from_buffer) \
*(___ksymtab+sg_free_table) \
*(___ksymtab+sg_miter_next) \
*(___ksymtab+sg_miter_start) \
*(___ksymtab+sg_miter_stop) \
*(___ksymtab+sg_nents) \
*(___ksymtab+sg_pcopy_from_buffer) \
*(___ksymtab+shash_ahash_digest) \
*(___ksymtab+shash_attr_alg) \
*(___ksymtab+shmem_read_mapping_page_gfp) \
*(___ksymtab+shmem_set_file) \
*(___ksymtab+shmem_truncate_range) \
*(___ksymtab+should_remove_suid) \
*(___ksymtab+show_class_attr_string) \
*(___ksymtab+shrink_dcache_parent) \
*(___ksymtab+shrink_dcache_sb) \
*(___ksymtab+si_meminfo) \
*(___ksymtab+sigprocmask) \
*(___ksymtab+simple_attr_open) \
*(___ksymtab+simple_attr_read) \
*(___ksymtab+simple_attr_release) \
*(___ksymtab+simple_attr_write) \
*(___ksymtab+simple_empty) \
*(___ksymtab+simple_getattr) \
*(___ksymtab+simple_link) \
*(___ksymtab+simple_readpage) \
*(___ksymtab+simple_rename) \
*(___ksymtab+simple_rmdir) \
*(___ksymtab+simple_setattr) \
*(___ksymtab+simple_strtol) \
*(___ksymtab+simple_strtoll) \
*(___ksymtab+simple_transaction_get) \
*(___ksymtab+simple_transaction_read) \
*(___ksymtab+simple_transaction_release) \
*(___ksymtab+simple_transaction_set) \
*(___ksymtab+simple_unlink) \
*(___ksymtab+simple_write_begin) \
*(___ksymtab+simple_write_end) \
*(___ksymtab+simple_write_to_buffer) \
*(___ksymtab+single_step_exception) \
*(___ksymtab+sk_attach_filter) \
*(___ksymtab+sk_chk_filter) \
*(___ksymtab+sk_clear_memalloc) \
*(___ksymtab+sk_clone_lock) \
*(___ksymtab+sk_detach_filter) \
*(___ksymtab+sk_reset_timer) \
*(___ksymtab+sk_reset_txq) \
*(___ksymtab+sk_run_filter) \
*(___ksymtab+sk_set_memalloc) \
*(___ksymtab+sk_stop_timer) \
*(___ksymtab+sk_stream_error) \
*(___ksymtab+sk_stream_kill_queues) \
*(___ksymtab+sk_stream_wait_close) \
*(___ksymtab+sk_stream_wait_connect) \
*(___ksymtab+sk_stream_wait_memory) \
*(___ksymtab+sk_stream_write_space) \
*(___ksymtab+sk_unattached_filter_create) \
*(___ksymtab+sk_unattached_filter_destroy) \
*(___ksymtab+sk_wait_data) \
*(___ksymtab+skb_add_rx_frag) \
*(___ksymtab+skb_append) \
*(___ksymtab+skb_cow_data) \
*(___ksymtab+skb_find_text) \
*(___ksymtab+skb_gro_receive) \
*(___ksymtab+skb_insert) \
*(___ksymtab+skb_mac_gso_segment) \
*(___ksymtab+skb_orphan_partial) \
*(___ksymtab+skb_pad) \
*(___ksymtab+skb_partial_csum_set) \
*(___ksymtab+skb_queue_head) \
*(___ksymtab+skb_restore_cb) \
*(___ksymtab+skb_save_cb) \
*(___ksymtab+skb_segment) \
*(___ksymtab+skb_split) \
*(___ksymtab+skb_to_sgvec) \
*(___ksymtab+skb_tx_error) \
*(___ksymtab+skb_unlink) \
*(___ksymtab+skcipher_geniv_alloc) \
*(___ksymtab+skcipher_geniv_exit) \
*(___ksymtab+skcipher_geniv_free) \
*(___ksymtab+skcipher_geniv_init) \
*(___ksymtab+skip_spaces) \
*(___ksymtab+sleep_on) \
*(___ksymtab+sleep_on_timeout) \
*(___ksymtab+slhc_compress) \
*(___ksymtab+slhc_free) \
*(___ksymtab+slhc_init) \
*(___ksymtab+slhc_remember) \
*(___ksymtab+slhc_toss) \
*(___ksymtab+slhc_uncompress) \
*(___ksymtab+smp_call_function_single) \
*(___ksymtab+smpboot_register_percpu_thread) \
*(___ksymtab+smpboot_unregister_percpu_thread) \
*(___ksymtab+sock_alloc_file) \
*(___ksymtab+sock_alloc_send_pskb) \
*(___ksymtab+sock_create) \
*(___ksymtab+sock_create_lite) \
*(___ksymtab+sock_from_file) \
*(___ksymtab+sock_no_connect) \
*(___ksymtab+sock_no_getname) \
*(___ksymtab+sock_no_getsockopt) \
*(___ksymtab+sock_no_ioctl) \
*(___ksymtab+sock_no_poll) \
*(___ksymtab+sock_no_recvmsg) \
*(___ksymtab+sock_no_sendmsg) \
*(___ksymtab+sock_no_setsockopt) \
*(___ksymtab+sock_recv_errqueue) \
*(___ksymtab+sock_recvmsg) \
*(___ksymtab+sock_sendmsg) \
*(___ksymtab+sock_setsockopt) \
*(___ksymtab+sock_wake_async) \
*(___ksymtab+softirq_work_list) \
*(___ksymtab+softnet_data) \
*(___ksymtab+spi_add_device) \
*(___ksymtab+spi_alloc_device) \
*(___ksymtab+spi_alloc_master) \
*(___ksymtab+spi_async) \
*(___ksymtab+spi_async_locked) \
*(___ksymtab+spi_bitbang_start) \
*(___ksymtab+spi_bitbang_stop) \
*(___ksymtab+spi_bus_lock) \
*(___ksymtab+spi_bus_type) \
*(___ksymtab+spi_bus_unlock) \
*(___ksymtab+spi_busnum_to_master) \
*(___ksymtab+spi_finalize_current_message) \
*(___ksymtab+spi_get_next_queued_message) \
*(___ksymtab+spi_master_resume) \
*(___ksymtab+spi_master_suspend) \
*(___ksymtab+spi_new_device) \
*(___ksymtab+spi_register_driver) \
*(___ksymtab+spi_register_master) \
*(___ksymtab+spi_sync) \
*(___ksymtab+spi_sync_locked) \
*(___ksymtab+spi_unregister_master) \
*(___ksymtab+spi_write_then_read) \
*(___ksymtab+splice_direct_to_actor) \
*(___ksymtab+splice_from_pipe_begin) \
*(___ksymtab+splice_from_pipe_end) \
*(___ksymtab+splice_from_pipe_feed) \
*(___ksymtab+splice_from_pipe_next) \
*(___ksymtab+split_page) \
*(___ksymtab+sprint_symbol) \
*(___ksymtab+sprint_symbol_no_offset) \
*(___ksymtab+srcu_barrier) \
*(___ksymtab+srcu_init_notifier_head) \
*(___ksymtab+srcu_notifier_call_chain) \
*(___ksymtab+srcu_notifier_chain_register) \
*(___ksymtab+srcu_notifier_chain_unregister) \
*(___ksymtab+start_thread) \
*(___ksymtab+start_tty) \
*(___ksymtab+static_key_slow_dec) \
*(___ksymtab+static_key_slow_dec_deferred) \
*(___ksymtab+stop_tty) \
*(___ksymtab+strim) \
*(___ksymtab+string_unescape) \
*(___ksymtab+strlcat) \
*(___ksymtab+strncasecmp) \
*(___ksymtab+strnchr) \
*(___ksymtab+strnstr) \
*(___ksymtab+strstr) \
*(___ksymtab+strtobool) \
*(___ksymtab+submit_bh) \
*(___ksymtab+submit_bio) \
*(___ksymtab+submit_bio_wait) \
*(___ksymtab+subsys_dev_iter_exit) \
*(___ksymtab+subsys_dev_iter_init) \
*(___ksymtab+subsys_dev_iter_next) \
*(___ksymtab+subsys_find_device_by_id) \
*(___ksymtab+subsys_interface_register) \
*(___ksymtab+subsys_interface_unregister) \
*(___ksymtab+subsys_system_register) \
*(___ksymtab+subsys_virtual_register) \
*(___ksymtab+switch_mmu_context) \
*(___ksymtab+symbol_put_addr) \
*(___ksymtab+sync_blockdev) \
*(___ksymtab+sync_dirty_buffer) \
*(___ksymtab+sync_filesystem) \
*(___ksymtab+sync_inode) \
*(___ksymtab+sync_inode_metadata) \
*(___ksymtab+sync_inodes_sb) \
*(___ksymtab+sync_mapping_buffers) \
*(___ksymtab+synchronize_srcu) \
*(___ksymtab+synchronize_srcu_expedited) \
*(___ksymtab+sys_close) \
*(___ksymtab+sys_sigreturn) \
*(___ksymtab+sys_tz) \
*(___ksymtab+sysctl_local_reserved_ports) \
*(___ksymtab+sysctl_rmem_max) \
*(___ksymtab+sysctl_tcp_dma_copybreak) \
*(___ksymtab+sysctl_tcp_low_latency) \
*(___ksymtab+sysctl_tcp_reordering) \
*(___ksymtab+sysctl_vfs_cache_pressure) \
*(___ksymtab+sysctl_wmem_max) \
*(___ksymtab+sysfs_chmod_file) \
*(___ksymtab+sysfs_create_bin_file) \
*(___ksymtab+sysfs_create_file) \
*(___ksymtab+sysfs_create_files) \
*(___ksymtab+sysfs_format_mac) \
*(___ksymtab+sysfs_get) \
*(___ksymtab+sysfs_get_dirent) \
*(___ksymtab+sysfs_notify) \
*(___ksymtab+sysfs_notify_dirent) \
*(___ksymtab+sysfs_put) \
*(___ksymtab+sysfs_remove_bin_file) \
*(___ksymtab+sysfs_remove_file) \
*(___ksymtab+sysfs_remove_files) \
*(___ksymtab+sysfs_rename_link) \
*(___ksymtab+system_freezable_power_efficient_wq) \
*(___ksymtab+system_highpri_wq) \
*(___ksymtab+system_power_efficient_wq) \
*(___ksymtab+system_unbound_wq) \
*(___ksymtab+tag_pages_for_writeback) \
*(___ksymtab+task_current_syscall) \
*(___ksymtab+task_nice) \
*(___ksymtab+task_tgid_nr_ns) \
*(___ksymtab+task_user_regset_view) \
*(___ksymtab+tb_ticks_per_jiffy) \
*(___ksymtab+tb_ticks_per_sec) \
*(___ksymtab+tcf_action_dump_1) \
*(___ksymtab+tcf_action_exec) \
*(___ksymtab+tcf_exts_change) \
*(___ksymtab+tcf_exts_destroy) \
*(___ksymtab+tcf_exts_dump) \
*(___ksymtab+tcf_exts_dump_stats) \
*(___ksymtab+tcf_exts_validate) \
*(___ksymtab+tcf_generic_walker) \
*(___ksymtab+tcf_hash_check) \
*(___ksymtab+tcf_hash_create) \
*(___ksymtab+tcf_hash_destroy) \
*(___ksymtab+tcf_hash_insert) \
*(___ksymtab+tcf_hash_new_index) \
*(___ksymtab+tcf_hash_release) \
*(___ksymtab+tcf_hash_search) \
*(___ksymtab+tcf_register_action) \
*(___ksymtab+tcf_unregister_action) \
*(___ksymtab+tcp_cong_avoid_ai) \
*(___ksymtab+tcp_get_info) \
*(___ksymtab+tcp_gro_receive) \
*(___ksymtab+tcp_init_congestion_ops) \
*(___ksymtab+tcp_init_xmit_timers) \
*(___ksymtab+tcp_is_cwnd_limited) \
*(___ksymtab+tcp_read_sock) \
*(___ksymtab+tcp_register_congestion_control) \
*(___ksymtab+tcp_reno_cong_avoid) \
*(___ksymtab+tcp_reno_min_cwnd) \
*(___ksymtab+tcp_reno_ssthresh) \
*(___ksymtab+tcp_slow_start) \
*(___ksymtab+tcp_tso_segment) \
*(___ksymtab+tcp_unregister_congestion_control) \
*(___ksymtab+tcp_vegas_cwnd_event) \
*(___ksymtab+tcp_vegas_get_info) \
*(___ksymtab+tcp_vegas_init) \
*(___ksymtab+tcp_vegas_pkts_acked) \
*(___ksymtab+tcp_vegas_state) \
*(___ksymtab+test_taint) \
*(___ksymtab+textsearch_destroy) \
*(___ksymtab+textsearch_find_continuous) \
*(___ksymtab+textsearch_prepare) \
*(___ksymtab+textsearch_register) \
*(___ksymtab+textsearch_unregister) \
*(___ksymtab+thaw_bdev) \
*(___ksymtab+thermal_generate_netlink_event) \
*(___ksymtab+thermal_notify_framework) \
*(___ksymtab+thermal_zone_bind_cooling_device) \
*(___ksymtab+thermal_zone_get_temp) \
*(___ksymtab+thermal_zone_get_zone_by_name) \
*(___ksymtab+thermal_zone_unbind_cooling_device) \
*(___ksymtab+tick_nohz_idle_enter) \
*(___ksymtab+tick_nohz_idle_exit) \
*(___ksymtab+timecounter_cyc2time) \
*(___ksymtab+timecounter_init) \
*(___ksymtab+timecounter_read) \
*(___ksymtab+timekeeping_clocktai) \
*(___ksymtab+timekeeping_inject_offset) \
*(___ksymtab+timerqueue_add) \
*(___ksymtab+timerqueue_del) \
*(___ksymtab+timerqueue_iterate_next) \
*(___ksymtab+timespec_trunc) \
*(___ksymtab+to_tm) \
*(___ksymtab+totalram_pages) \
*(___ksymtab+touch_atime) \
*(___ksymtab+touch_buffer) \
*(___ksymtab+transfer_to_handler) \
*(___ksymtab+transport_class_register) \
*(___ksymtab+try_to_free_buffers) \
*(___ksymtab+try_to_release_page) \
*(___ksymtab+try_to_writeback_inodes_sb) \
*(___ksymtab+try_to_writeback_inodes_sb_nr) \
*(___ksymtab+tty_buffer_request_room) \
*(___ksymtab+tty_check_change) \
*(___ksymtab+tty_devnum) \
*(___ksymtab+tty_do_resize) \
*(___ksymtab+tty_driver_kref_put) \
*(___ksymtab+tty_free_termios) \
*(___ksymtab+tty_get_pgrp) \
*(___ksymtab+tty_init_termios) \
*(___ksymtab+tty_ldisc_deref) \
*(___ksymtab+tty_ldisc_flush) \
*(___ksymtab+tty_ldisc_ref) \
*(___ksymtab+tty_ldisc_ref_wait) \
*(___ksymtab+tty_lock) \
*(___ksymtab+tty_lock_pair) \
*(___ksymtab+tty_mode_ioctl) \
*(___ksymtab+tty_mutex) \
*(___ksymtab+tty_name) \
*(___ksymtab+tty_pair_get_pty) \
*(___ksymtab+tty_pair_get_tty) \
*(___ksymtab+tty_perform_flush) \
*(___ksymtab+tty_port_alloc_xmit_buf) \
*(___ksymtab+tty_port_block_til_ready) \
*(___ksymtab+tty_port_carrier_raised) \
*(___ksymtab+tty_port_free_xmit_buf) \
*(___ksymtab+tty_port_link_device) \
*(___ksymtab+tty_port_lower_dtr_rts) \
*(___ksymtab+tty_port_put) \
*(___ksymtab+tty_port_raise_dtr_rts) \
*(___ksymtab+tty_port_register_device) \
*(___ksymtab+tty_port_register_device_attr) \
*(___ksymtab+tty_port_tty_set) \
*(___ksymtab+tty_prepare_flip_string) \
*(___ksymtab+tty_prepare_flip_string_flags) \
*(___ksymtab+tty_put_char) \
*(___ksymtab+tty_set_termios) \
*(___ksymtab+tty_standard_install) \
*(___ksymtab+tty_termios_encode_baud_rate) \
*(___ksymtab+tty_termios_input_baud_rate) \
*(___ksymtab+tty_throttle) \
*(___ksymtab+tty_unlock) \
*(___ksymtab+tty_unlock_pair) \
*(___ksymtab+tty_unthrottle) \
*(___ksymtab+tty_wait_until_sent) \
*(___ksymtab+tty_write_room) \
*(___ksymtab+tun_get_socket) \
*(___ksymtab+uart_add_one_port) \
*(___ksymtab+uart_console_write) \
*(___ksymtab+uart_get_baud_rate) \
*(___ksymtab+uart_get_divisor) \
*(___ksymtab+uart_handle_cts_change) \
*(___ksymtab+uart_handle_dcd_change) \
*(___ksymtab+uart_insert_char) \
*(___ksymtab+uart_match_port) \
*(___ksymtab+uart_parse_options) \
*(___ksymtab+uart_register_driver) \
*(___ksymtab+uart_remove_one_port) \
*(___ksymtab+uart_resume_port) \
*(___ksymtab+uart_set_options) \
*(___ksymtab+uart_suspend_port) \
*(___ksymtab+uart_unregister_driver) \
*(___ksymtab+ucc_fast_disable) \
*(___ksymtab+ucc_fast_dump_regs) \
*(___ksymtab+ucc_fast_enable) \
*(___ksymtab+ucc_fast_free) \
*(___ksymtab+ucc_fast_get_qe_cr_subblock) \
*(___ksymtab+ucc_fast_init) \
*(___ksymtab+ucc_fast_transmit_on_demand) \
*(___ksymtab+ucc_set_qe_mux_mii_mng) \
*(___ksymtab+udp4_hwcsum) \
*(___ksymtab+udp_rcv) \
*(___ksymtab+uevent_next_seqnum) \
*(___ksymtab+uhci_check_and_reset_hc) \
*(___ksymtab+unblock_all_signals) \
*(___ksymtab+unix_inq_len) \
*(___ksymtab+unix_outq_len) \
*(___ksymtab+unix_peer_get) \
*(___ksymtab+unix_socket_table) \
*(___ksymtab+unix_table_lock) \
*(___ksymtab+unlock_buffer) \
*(___ksymtab+unlock_rename) \
*(___ksymtab+unmap_kernel_range) \
*(___ksymtab+unmap_kernel_range_noflush) \
*(___ksymtab+unmap_mapping_range) \
*(___ksymtab+unmap_underlying_metadata) \
*(___ksymtab+unregister_8022_client) \
*(___ksymtab+unregister_binfmt) \
*(___ksymtab+unregister_console) \
*(___ksymtab+unregister_die_notifier) \
*(___ksymtab+unregister_exec_domain) \
*(___ksymtab+unregister_inet6addr_notifier) \
*(___ksymtab+unregister_inetaddr_notifier) \
*(___ksymtab+unregister_module_notifier) \
*(___ksymtab+unregister_mtd_chip_driver) \
*(___ksymtab+unregister_mtd_user) \
*(___ksymtab+unregister_netevent_notifier) \
*(___ksymtab+unregister_nls) \
*(___ksymtab+unregister_oom_notifier) \
*(___ksymtab+unregister_reboot_notifier) \
*(___ksymtab+unregister_shrinker) \
*(___ksymtab+unregister_snap_client) \
*(___ksymtab+unregister_switch) \
*(___ksymtab+unregister_syscore_ops) \
*(___ksymtab+unregister_tcf_proto_ops) \
*(___ksymtab+unshare_fs_struct) \
*(___ksymtab+unuse_mm) \
*(___ksymtab+usb_disable_xhci_ports) \
*(___ksymtab+usb_enable_intel_xhci_ports) \
*(___ksymtab+use_mm) \
*(___ksymtab+user_path_at) \
*(___ksymtab+user_path_create) \
*(___ksymtab+usermodehelper_read_lock_wait) \
*(___ksymtab+usermodehelper_read_trylock) \
*(___ksymtab+usermodehelper_read_unlock) \
*(___ksymtab+utf32_to_utf8) \
*(___ksymtab+utf8_to_utf32) \
*(___ksymtab+uuid_be_gen) \
*(___ksymtab+uuid_le_gen) \
*(___ksymtab+validate_sp) \
*(___ksymtab+vfs_cancel_lock) \
*(___ksymtab+vfs_create) \
*(___ksymtab+vfs_fstat) \
*(___ksymtab+vfs_fstatat) \
*(___ksymtab+vfs_fsync) \
*(___ksymtab+vfs_fsync_range) \
*(___ksymtab+vfs_getattr) \
*(___ksymtab+vfs_getattr_nosec) \
*(___ksymtab+vfs_getxattr) \
*(___ksymtab+vfs_kern_mount) \
*(___ksymtab+vfs_link) \
*(___ksymtab+vfs_listxattr) \
*(___ksymtab+vfs_llseek) \
*(___ksymtab+vfs_lock_file) \
*(___ksymtab+vfs_lstat) \
*(___ksymtab+vfs_mkdir) \
*(___ksymtab+vfs_mknod) \
*(___ksymtab+vfs_read) \
*(___ksymtab+vfs_readlink) \
*(___ksymtab+vfs_readv) \
*(___ksymtab+vfs_removexattr) \
*(___ksymtab+vfs_rename) \
*(___ksymtab+vfs_rmdir) \
*(___ksymtab+vfs_setlease) \
*(___ksymtab+vfs_setpos) \
*(___ksymtab+vfs_setxattr) \
*(___ksymtab+vfs_stat) \
*(___ksymtab+vfs_statfs) \
*(___ksymtab+vfs_symlink) \
*(___ksymtab+vfs_test_lock) \
*(___ksymtab+vfs_truncate) \
*(___ksymtab+vfs_unlink) \
*(___ksymtab+vfs_write) \
*(___ksymtab+vfs_writev) \
*(___ksymtab+virq_to_hw) \
*(___ksymtab+vlan_dev_real_dev) \
*(___ksymtab+vlan_ioctl_set) \
*(___ksymtab+vlan_untag) \
*(___ksymtab+vm_brk) \
*(___ksymtab+vm_get_page_prot) \
*(___ksymtab+vm_insert_mixed) \
*(___ksymtab+vm_insert_page) \
*(___ksymtab+vm_insert_pfn) \
*(___ksymtab+vm_iomap_memory) \
*(___ksymtab+vm_map_ram) \
*(___ksymtab+vm_memory_committed) \
*(___ksymtab+vm_mmap) \
*(___ksymtab+vm_munmap) \
*(___ksymtab+vm_stat) \
*(___ksymtab+vm_unmap_aliases) \
*(___ksymtab+vm_unmap_ram) \
*(___ksymtab+vmap) \
*(___ksymtab+vunmap) \
*(___ksymtab+wait_for_device_probe) \
*(___ksymtab+wait_for_stable_page) \
*(___ksymtab+wait_iff_congested) \
*(___ksymtab+wake_bit_function) \
*(___ksymtab+walk_system_ram_range) \
*(___ksymtab+watchdog_init_timeout) \
*(___ksymtab+watchdog_register_device) \
*(___ksymtab+watchdog_unregister_device) \
*(___ksymtab+work_busy) \
*(___ksymtab+workqueue_congested) \
*(___ksymtab+workqueue_set_max_active) \
*(___ksymtab+would_dump) \
*(___ksymtab+write_cache_pages) \
*(___ksymtab+write_dirty_buffer) \
*(___ksymtab+write_inode_now) \
*(___ksymtab+write_one_page) \
*(___ksymtab+writeback_in_progress) \
*(___ksymtab+writeback_inodes_sb) \
*(___ksymtab+writeback_inodes_sb_nr) \
*(___ksymtab+xattr_getsecurity) \
*(___ksymtab+xfrm4_prepare_output) \
*(___ksymtab+xfrm4_rcv) \
*(___ksymtab+xfrm4_rcv_encap) \
*(___ksymtab+xfrm_alloc_spi) \
*(___ksymtab+xfrm_cfg_mutex) \
*(___ksymtab+xfrm_find_acq) \
*(___ksymtab+xfrm_find_acq_byseq) \
*(___ksymtab+xfrm_garbage_collect) \
*(___ksymtab+xfrm_get_acqseq) \
*(___ksymtab+xfrm_init_replay) \
*(___ksymtab+xfrm_init_state) \
*(___ksymtab+xfrm_policy_alloc) \
*(___ksymtab+xfrm_policy_byid) \
*(___ksymtab+xfrm_policy_bysel_ctx) \
*(___ksymtab+xfrm_policy_delete) \
*(___ksymtab+xfrm_policy_flush) \
*(___ksymtab+xfrm_policy_insert) \
*(___ksymtab+xfrm_policy_walk) \
*(___ksymtab+xfrm_policy_walk_done) \
*(___ksymtab+xfrm_policy_walk_init) \
*(___ksymtab+xfrm_register_km) \
*(___ksymtab+xfrm_register_type) \
*(___ksymtab+xfrm_sad_getinfo) \
*(___ksymtab+xfrm_spd_getinfo) \
*(___ksymtab+xfrm_state_add) \
*(___ksymtab+xfrm_state_alloc) \
*(___ksymtab+xfrm_state_delete) \
*(___ksymtab+xfrm_state_delete_tunnel) \
*(___ksymtab+xfrm_state_flush) \
*(___ksymtab+xfrm_state_insert) \
*(___ksymtab+xfrm_state_walk) \
*(___ksymtab+xfrm_state_walk_done) \
*(___ksymtab+xfrm_state_walk_init) \
*(___ksymtab+xfrm_stateonly_find) \
*(___ksymtab+xfrm_unregister_km) \
*(___ksymtab+xfrm_unregister_type) \
*(___ksymtab+xt_alloc_table_info) \
*(___ksymtab+xt_find_match) \
*(___ksymtab+xt_find_revision) \
*(___ksymtab+xt_find_table_lock) \
*(___ksymtab+xt_find_target) \
*(___ksymtab+xt_free_table_info) \
*(___ksymtab+xt_hook_link) \
*(___ksymtab+xt_hook_unlink) \
*(___ksymtab+xt_proto_fini) \
*(___ksymtab+xt_proto_init) \
*(___ksymtab+xt_recseq) \
*(___ksymtab+xt_register_table) \
*(___ksymtab+xt_replace_table) \
*(___ksymtab+xt_table_unlock) \
*(___ksymtab+xt_unregister_table) \
*(___ksymtab+xtnu_ip_route_me_harder) \
*(___ksymtab+xtnu_register_target) \
*(___ksymtab+xtnu_register_targets) \
*(___ksymtab+xtnu_request_find_match) \
*(___ksymtab+xtnu_unregister_target) \
*(___ksymtab+xtnu_unregister_targets) \
*(___ksymtab+zap_vma_ptes) \
*(___ksymtab+zero_fill_bio) \
*(___ksymtab+zerocopy_sg_from_iovec) \

#define SYMTAB_DISCARD_GPL \
*(___ksymtab_gpl+DMA_MODE_READ) \
*(___ksymtab_gpl+DMA_MODE_WRITE) \
*(___ksymtab_gpl+HX_memmem) \
*(___ksymtab_gpl+ISA_DMA_THRESHOLD) \
*(___ksymtab_gpl+I_BDEV) \
*(___ksymtab_gpl+__ashrdi3) \
*(___ksymtab_gpl+__atomic_notifier_call_chain) \
*(___ksymtab_gpl+__bdevname) \
*(___ksymtab_gpl+__bforget) \
*(___ksymtab_gpl+__bio_clone) \
*(___ksymtab_gpl+__bitmap_and) \
*(___ksymtab_gpl+__bitmap_andnot) \
*(___ksymtab_gpl+__bitmap_complement) \
*(___ksymtab_gpl+__bitmap_equal) \
*(___ksymtab_gpl+__bitmap_full) \
*(___ksymtab_gpl+__bitmap_intersects) \
*(___ksymtab_gpl+__bitmap_or) \
*(___ksymtab_gpl+__bitmap_parse) \
*(___ksymtab_gpl+__bitmap_shift_left) \
*(___ksymtab_gpl+__bitmap_shift_right) \
*(___ksymtab_gpl+__bitmap_subset) \
*(___ksymtab_gpl+__bitmap_weight) \
*(___ksymtab_gpl+__bitmap_xor) \
*(___ksymtab_gpl+__blkdev_driver_ioctl) \
*(___ksymtab_gpl+__block_page_mkwrite) \
*(___ksymtab_gpl+__block_write_begin) \
*(___ksymtab_gpl+__blockdev_direct_IO) \
*(___ksymtab_gpl+__bread) \
*(___ksymtab_gpl+__breadahead) \
*(___ksymtab_gpl+__brelse) \
*(___ksymtab_gpl+__bswapdi2) \
*(___ksymtab_gpl+__cap_empty_set) \
*(___ksymtab_gpl+__check_region) \
*(___ksymtab_gpl+__clear_user) \
*(___ksymtab_gpl+__clocksource_register_scale) \
*(___ksymtab_gpl+__clzdi2) \
*(___ksymtab_gpl+__clzsi2) \
*(___ksymtab_gpl+__cookie_v4_check) \
*(___ksymtab_gpl+__cookie_v4_init_sequence) \
*(___ksymtab_gpl+__crc32c_le) \
*(___ksymtab_gpl+__crypto_alloc_tfm) \
*(___ksymtab_gpl+__crypto_dequeue_request) \
*(___ksymtab_gpl+__ctzdi2) \
*(___ksymtab_gpl+__ctzsi2) \
*(___ksymtab_gpl+__delay) \
*(___ksymtab_gpl+__destroy_context) \
*(___ksymtab_gpl+__destroy_inode) \
*(___ksymtab_gpl+__dev_getfirstbyhwtype) \
*(___ksymtab_gpl+__dev_remove_offload) \
*(___ksymtab_gpl+__devm_release_region) \
*(___ksymtab_gpl+__devm_request_region) \
*(___ksymtab_gpl+__dma_request_channel) \
*(___ksymtab_gpl+__elv_add_request) \
*(___ksymtab_gpl+__f_setown) \
*(___ksymtab_gpl+__find_get_block) \
*(___ksymtab_gpl+__fsnotify_inode_delete) \
*(___ksymtab_gpl+__fsnotify_parent) \
*(___ksymtab_gpl+__generic_block_fiemap) \
*(___ksymtab_gpl+__genl_register_family) \
*(___ksymtab_gpl+__get_mtd_device) \
*(___ksymtab_gpl+__get_user_pages) \
*(___ksymtab_gpl+__get_user_pages_fast) \
*(___ksymtab_gpl+__get_vm_area) \
*(___ksymtab_gpl+__getblk) \
*(___ksymtab_gpl+__getnstimeofday) \
*(___ksymtab_gpl+__gpio_cansleep) \
*(___ksymtab_gpl+__gpio_get_value) \
*(___ksymtab_gpl+__gpio_set_value) \
*(___ksymtab_gpl+__gpio_to_irq) \
*(___ksymtab_gpl+__hw_addr_add_multiple) \
*(___ksymtab_gpl+__hw_addr_del_multiple) \
*(___ksymtab_gpl+__hw_addr_flush) \
*(___ksymtab_gpl+__i2c_board_list) \
*(___ksymtab_gpl+__i2c_board_lock) \
*(___ksymtab_gpl+__i2c_first_dynamic_bus_num) \
*(___ksymtab_gpl+__i2c_transfer) \
*(___ksymtab_gpl+__idr_get_new_above) \
*(___ksymtab_gpl+__idr_pre_get) \
*(___ksymtab_gpl+__inet_twsk_hashdance) \
*(___ksymtab_gpl+__init_kthread_worker) \
*(___ksymtab_gpl+__init_new_context) \
*(___ksymtab_gpl+__inode_sub_bytes) \
*(___ksymtab_gpl+__insert_inode_hash) \
*(___ksymtab_gpl+__invalidate_device) \
*(___ksymtab_gpl+__iowrite64_copy) \
*(___ksymtab_gpl+__ip_dev_find) \
*(___ksymtab_gpl+__ip_route_output_key) \
*(___ksymtab_gpl+__irq_alloc_descs) \
*(___ksymtab_gpl+__irq_domain_add) \
*(___ksymtab_gpl+__irq_offset_value) \
*(___ksymtab_gpl+__irq_regs) \
*(___ksymtab_gpl+__irq_set_handler) \
*(___ksymtab_gpl+__kfifo_dma_in_finish_r) \
*(___ksymtab_gpl+__kfifo_dma_in_prepare) \
*(___ksymtab_gpl+__kfifo_dma_in_prepare_r) \
*(___ksymtab_gpl+__kfifo_dma_out_finish_r) \
*(___ksymtab_gpl+__kfifo_dma_out_prepare) \
*(___ksymtab_gpl+__kfifo_dma_out_prepare_r) \
*(___ksymtab_gpl+__kfifo_from_user) \
*(___ksymtab_gpl+__kfifo_from_user_r) \
*(___ksymtab_gpl+__kfifo_len_r) \
*(___ksymtab_gpl+__kfifo_max_r) \
*(___ksymtab_gpl+__kfifo_skip_r) \
*(___ksymtab_gpl+__kfifo_to_user) \
*(___ksymtab_gpl+__kfifo_to_user_r) \
*(___ksymtab_gpl+__krealloc) \
*(___ksymtab_gpl+__lock_buffer) \
*(___ksymtab_gpl+__locks_copy_lock) \
*(___ksymtab_gpl+__mdio_board_list) \
*(___ksymtab_gpl+__mdio_board_lock) \
*(___ksymtab_gpl+__mmdrop) \
*(___ksymtab_gpl+__mnt_is_readonly) \
*(___ksymtab_gpl+__module_address) \
*(___ksymtab_gpl+__module_text_address) \
*(___ksymtab_gpl+__mtd_next_device) \
*(___ksymtab_gpl+__nand_calculate_ecc) \
*(___ksymtab_gpl+__nand_correct_data) \
*(___ksymtab_gpl+__neigh_event_send) \
*(___ksymtab_gpl+__neigh_for_each_release) \
*(___ksymtab_gpl+__netdev_pick_tx) \
*(___ksymtab_gpl+__netlink_dump_start) \
*(___ksymtab_gpl+__netlink_remove_tap) \
*(___ksymtab_gpl+__nf_conntrack_confirm) \
*(___ksymtab_gpl+__nf_conntrack_find) \
*(___ksymtab_gpl+__nf_conntrack_helper_find) \
*(___ksymtab_gpl+__nf_ct_ext_add_length) \
*(___ksymtab_gpl+__nf_ct_ext_destroy) \
*(___ksymtab_gpl+__nf_ct_kill_acct) \
*(___ksymtab_gpl+__nf_ct_l4proto_find) \
*(___ksymtab_gpl+__nf_ct_try_assign_helper) \
*(___ksymtab_gpl+__nf_nat_l4proto_find) \
*(___ksymtab_gpl+__page_symlink) \
*(___ksymtab_gpl+__pagevec_lru_add) \
*(___ksymtab_gpl+__pagevec_release) \
*(___ksymtab_gpl+__par_io_config_pin) \
*(___ksymtab_gpl+__pci_enable_wake) \
*(___ksymtab_gpl+__pci_reset_function) \
*(___ksymtab_gpl+__pci_reset_function_locked) \
*(___ksymtab_gpl+__print_symbol) \
*(___ksymtab_gpl+__put_mtd_device) \
*(___ksymtab_gpl+__put_task_struct) \
*(___ksymtab_gpl+__qdisc_calculate_pkt_len) \
*(___ksymtab_gpl+__raw_notifier_call_chain) \
*(___ksymtab_gpl+__rb_insert_augmented) \
*(___ksymtab_gpl+__register_binfmt) \
*(___ksymtab_gpl+__remove_inode_hash) \
*(___ksymtab_gpl+__rt_mutex_init) \
*(___ksymtab_gpl+__sb_end_write) \
*(___ksymtab_gpl+__sb_start_write) \
*(___ksymtab_gpl+__scm_destroy) \
*(___ksymtab_gpl+__scm_send) \
*(___ksymtab_gpl+__send_remote_softirq) \
*(___ksymtab_gpl+__serio_register_driver) \
*(___ksymtab_gpl+__serio_register_port) \
*(___ksymtab_gpl+__set_personality) \
*(___ksymtab_gpl+__sg_page_iter_next) \
*(___ksymtab_gpl+__sg_page_iter_start) \
*(___ksymtab_gpl+__sk_backlog_rcv) \
*(___ksymtab_gpl+__sk_mem_reclaim) \
*(___ksymtab_gpl+__skb_get_rxhash) \
*(___ksymtab_gpl+__skb_gso_segment) \
*(___ksymtab_gpl+__skb_tx_hash) \
*(___ksymtab_gpl+__splice_from_pipe) \
*(___ksymtab_gpl+__srcu_notifier_call_chain) \
*(___ksymtab_gpl+__srcu_read_lock) \
*(___ksymtab_gpl+__srcu_read_unlock) \
*(___ksymtab_gpl+__symbol_get) \
*(___ksymtab_gpl+__symbol_put) \
*(___ksymtab_gpl+__sync_dirty_buffer) \
*(___ksymtab_gpl+__ucmpdi2) \
*(___ksymtab_gpl+__vlan_find_dev_deep) \
*(___ksymtab_gpl+__vlan_hwaccel_rx) \
*(___ksymtab_gpl+__wait_on_bit) \
*(___ksymtab_gpl+__wait_on_bit_lock) \
*(___ksymtab_gpl+__wait_on_buffer) \
*(___ksymtab_gpl+__xfrm_init_state) \
*(___ksymtab_gpl+__xfrm_state_delete) \
*(___ksymtab_gpl+_atomic_dec_and_lock) \
*(___ksymtab_gpl+_bcd2bin) \
*(___ksymtab_gpl+_bin2bcd) \
*(___ksymtab_gpl+_insb) \
*(___ksymtab_gpl+_insl_ns) \
*(___ksymtab_gpl+_insw_ns) \
*(___ksymtab_gpl+_kstrtol) \
*(___ksymtab_gpl+_outsb) \
*(___ksymtab_gpl+_outsl_ns) \
*(___ksymtab_gpl+_outsw_ns) \
*(___ksymtab_gpl+_submit_bh) \
*(___ksymtab_gpl+ablkcipher_walk_done) \
*(___ksymtab_gpl+ablkcipher_walk_phys) \
*(___ksymtab_gpl+abort_creds) \
*(___ksymtab_gpl+abort_exclusive_wait) \
*(___ksymtab_gpl+account_page_dirtied) \
*(___ksymtab_gpl+account_page_redirty) \
*(___ksymtab_gpl+account_page_writeback) \
*(___ksymtab_gpl+add_input_randomness) \
*(___ksymtab_gpl+add_mtd_blktrans_dev) \
*(___ksymtab_gpl+add_page_wait_queue) \
*(___ksymtab_gpl+add_taint) \
*(___ksymtab_gpl+add_to_page_cache_lru) \
*(___ksymtab_gpl+address_space_init_once) \
*(___ksymtab_gpl+adjust_managed_page_count) \
*(___ksymtab_gpl+adjust_resource) \
*(___ksymtab_gpl+aead_geniv_alloc) \
*(___ksymtab_gpl+aead_geniv_exit) \
*(___ksymtab_gpl+aead_geniv_free) \
*(___ksymtab_gpl+aead_geniv_init) \
*(___ksymtab_gpl+aer_irq) \
*(___ksymtab_gpl+af_alg_accept) \
*(___ksymtab_gpl+af_alg_cmsg_send) \
*(___ksymtab_gpl+af_alg_free_sg) \
*(___ksymtab_gpl+af_alg_make_sg) \
*(___ksymtab_gpl+af_alg_register_type) \
*(___ksymtab_gpl+af_alg_release) \
*(___ksymtab_gpl+af_alg_unregister_type) \
*(___ksymtab_gpl+ahash_attr_alg) \
*(___ksymtab_gpl+ahash_free_instance) \
*(___ksymtab_gpl+ahash_register_instance) \
*(___ksymtab_gpl+alarm_cancel) \
*(___ksymtab_gpl+alarm_expires_remaining) \
*(___ksymtab_gpl+alarm_forward) \
*(___ksymtab_gpl+alarm_forward_now) \
*(___ksymtab_gpl+alarm_init) \
*(___ksymtab_gpl+alarm_restart) \
*(___ksymtab_gpl+alarm_start) \
*(___ksymtab_gpl+alarm_start_relative) \
*(___ksymtab_gpl+alarm_try_to_cancel) \
*(___ksymtab_gpl+alg_test) \
*(___ksymtab_gpl+alignment_exception) \
*(___ksymtab_gpl+alloc_anon_inode) \
*(___ksymtab_gpl+alloc_buffer_head) \
*(___ksymtab_gpl+alloc_chrdev_region) \
*(___ksymtab_gpl+alloc_file) \
*(___ksymtab_gpl+alloc_page_buffers) \
*(___ksymtab_gpl+alloc_pages_exact) \
*(___ksymtab_gpl+alloc_pages_exact_nid) \
*(___ksymtab_gpl+alloc_pci_dev) \
*(___ksymtab_gpl+alloc_vm_area) \
*(___ksymtab_gpl+allocate_resource) \
*(___ksymtab_gpl+anon_inode_getfd) \
*(___ksymtab_gpl+anon_inode_getfile) \
*(___ksymtab_gpl+anon_inode_getfile_private) \
*(___ksymtab_gpl+anon_transport_class_register) \
*(___ksymtab_gpl+apply_to_page_range) \
*(___ksymtab_gpl+argv_free) \
*(___ksymtab_gpl+argv_split) \
*(___ksymtab_gpl+arp_find) \
*(___ksymtab_gpl+arp_invalidate) \
*(___ksymtab_gpl+arp_tbl) \
*(___ksymtab_gpl+async_synchronize_cookie) \
*(___ksymtab_gpl+async_synchronize_cookie_domain) \
*(___ksymtab_gpl+async_synchronize_full) \
*(___ksymtab_gpl+atomic64_add) \
*(___ksymtab_gpl+atomic64_add_unless) \
*(___ksymtab_gpl+atomic64_cmpxchg) \
*(___ksymtab_gpl+atomic64_dec_if_positive) \
*(___ksymtab_gpl+atomic64_sub) \
*(___ksymtab_gpl+atomic64_sub_return) \
*(___ksymtab_gpl+atomic64_xchg) \
*(___ksymtab_gpl+atomic_notifier_call_chain) \
*(___ksymtab_gpl+atomic_notifier_chain_register) \
*(___ksymtab_gpl+atomic_notifier_chain_unregister) \
*(___ksymtab_gpl+attribute_container_classdev_to_container) \
*(___ksymtab_gpl+attribute_container_find_class_device) \
*(___ksymtab_gpl+attribute_container_register) \
*(___ksymtab_gpl+attribute_container_unregister) \
*(___ksymtab_gpl+avenrun) \
*(___ksymtab_gpl+balance_dirty_pages_ratelimited) \
*(___ksymtab_gpl+balloon_devinfo_alloc) \
*(___ksymtab_gpl+balloon_page_dequeue) \
*(___ksymtab_gpl+balloon_page_enqueue) \
*(___ksymtab_gpl+bd_link_disk_holder) \
*(___ksymtab_gpl+bd_set_size) \
*(___ksymtab_gpl+bd_unlink_disk_holder) \
*(___ksymtab_gpl+bdev_read_only) \
*(___ksymtab_gpl+bdev_stack_limits) \
*(___ksymtab_gpl+bdevname) \
*(___ksymtab_gpl+bdget) \
*(___ksymtab_gpl+bdget_disk) \
*(___ksymtab_gpl+bdgrab) \
*(___ksymtab_gpl+bdi_init) \
*(___ksymtab_gpl+bdi_register) \
*(___ksymtab_gpl+bdi_register_dev) \
*(___ksymtab_gpl+bdi_set_max_ratio) \
*(___ksymtab_gpl+bdi_unregister) \
*(___ksymtab_gpl+bdi_writeout_inc) \
*(___ksymtab_gpl+bfifo_qdisc_ops) \
*(___ksymtab_gpl+bh_submit_read) \
*(___ksymtab_gpl+bio_add_page) \
*(___ksymtab_gpl+bio_add_pc_page) \
*(___ksymtab_gpl+bio_advance) \
*(___ksymtab_gpl+bio_alloc_bioset) \
*(___ksymtab_gpl+bio_alloc_pages) \
*(___ksymtab_gpl+bio_clone_bioset) \
*(___ksymtab_gpl+bio_copy_data) \
*(___ksymtab_gpl+bio_copy_kern) \
*(___ksymtab_gpl+bio_copy_user) \
*(___ksymtab_gpl+bio_endio) \
*(___ksymtab_gpl+bio_get_nr_vecs) \
*(___ksymtab_gpl+bio_init) \
*(___ksymtab_gpl+bio_map_kern) \
*(___ksymtab_gpl+bio_map_user) \
*(___ksymtab_gpl+bio_pair_release) \
*(___ksymtab_gpl+bio_phys_segments) \
*(___ksymtab_gpl+bio_put) \
*(___ksymtab_gpl+bio_reset) \
*(___ksymtab_gpl+bio_sector_offset) \
*(___ksymtab_gpl+bio_split) \
*(___ksymtab_gpl+bio_uncopy_user) \
*(___ksymtab_gpl+bio_unmap_user) \
*(___ksymtab_gpl+bioset_create) \
*(___ksymtab_gpl+bioset_free) \
*(___ksymtab_gpl+bit_waitqueue) \
*(___ksymtab_gpl+bitmap_allocate_region) \
*(___ksymtab_gpl+bitmap_bitremap) \
*(___ksymtab_gpl+bitmap_clear) \
*(___ksymtab_gpl+bitmap_copy_le) \
*(___ksymtab_gpl+bitmap_find_free_region) \
*(___ksymtab_gpl+bitmap_find_next_zero_area) \
*(___ksymtab_gpl+bitmap_fold) \
*(___ksymtab_gpl+bitmap_onto) \
*(___ksymtab_gpl+bitmap_parse_user) \
*(___ksymtab_gpl+bitmap_parselist) \
*(___ksymtab_gpl+bitmap_parselist_user) \
*(___ksymtab_gpl+bitmap_release_region) \
*(___ksymtab_gpl+bitmap_remap) \
*(___ksymtab_gpl+bitmap_scnlistprintf) \
*(___ksymtab_gpl+bitmap_set) \
*(___ksymtab_gpl+bitrev16) \
*(___ksymtab_gpl+bitrev32) \
*(___ksymtab_gpl+blk_abort_request) \
*(___ksymtab_gpl+blk_alloc_queue) \
*(___ksymtab_gpl+blk_alloc_queue_node) \
*(___ksymtab_gpl+blk_bio_map_sg) \
*(___ksymtab_gpl+blk_check_plugged) \
*(___ksymtab_gpl+blk_fetch_request) \
*(___ksymtab_gpl+blk_finish_plug) \
*(___ksymtab_gpl+blk_init_allocated_queue) \
*(___ksymtab_gpl+blk_init_tags) \
*(___ksymtab_gpl+blk_insert_cloned_request) \
*(___ksymtab_gpl+blk_iopoll_disable) \
*(___ksymtab_gpl+blk_iopoll_enable) \
*(___ksymtab_gpl+blk_iopoll_enabled) \
*(___ksymtab_gpl+blk_iopoll_init) \
*(___ksymtab_gpl+blk_iopoll_sched) \
*(___ksymtab_gpl+blk_limits_io_min) \
*(___ksymtab_gpl+blk_limits_io_opt) \
*(___ksymtab_gpl+blk_limits_max_hw_sectors) \
*(___ksymtab_gpl+blk_lld_busy) \
*(___ksymtab_gpl+blk_make_request) \
*(___ksymtab_gpl+blk_queue_bio) \
*(___ksymtab_gpl+blk_queue_bounce) \
*(___ksymtab_gpl+blk_queue_bypass_end) \
*(___ksymtab_gpl+blk_queue_bypass_start) \
*(___ksymtab_gpl+blk_queue_dma_drain) \
*(___ksymtab_gpl+blk_queue_dma_pad) \
*(___ksymtab_gpl+blk_queue_end_tag) \
*(___ksymtab_gpl+blk_queue_find_tag) \
*(___ksymtab_gpl+blk_queue_free_tags) \
*(___ksymtab_gpl+blk_queue_init_tags) \
*(___ksymtab_gpl+blk_queue_invalidate_tags) \
*(___ksymtab_gpl+blk_queue_make_request) \
*(___ksymtab_gpl+blk_queue_max_discard_sectors) \
*(___ksymtab_gpl+blk_queue_merge_bvec) \
*(___ksymtab_gpl+blk_queue_stack_limits) \
*(___ksymtab_gpl+blk_recount_segments) \
*(___ksymtab_gpl+blk_rq_check_limits) \
*(___ksymtab_gpl+blk_rq_err_bytes) \
*(___ksymtab_gpl+blk_rq_prep_clone) \
*(___ksymtab_gpl+blk_rq_unprep_clone) \
*(___ksymtab_gpl+blk_set_default_limits) \
*(___ksymtab_gpl+blk_set_stacking_limits) \
*(___ksymtab_gpl+blk_stack_limits) \
*(___ksymtab_gpl+blk_start_plug) \
*(___ksymtab_gpl+blk_sync_queue) \
*(___ksymtab_gpl+blkcipher_walk_done) \
*(___ksymtab_gpl+blkcipher_walk_phys) \
*(___ksymtab_gpl+blkcipher_walk_virt) \
*(___ksymtab_gpl+blkcipher_walk_virt_block) \
*(___ksymtab_gpl+blkdev_aio_write) \
*(___ksymtab_gpl+blkdev_fsync) \
*(___ksymtab_gpl+blkdev_get) \
*(___ksymtab_gpl+blkdev_get_by_dev) \
*(___ksymtab_gpl+blkdev_get_by_path) \
*(___ksymtab_gpl+blkdev_ioctl) \
*(___ksymtab_gpl+blkdev_issue_discard) \
*(___ksymtab_gpl+blkdev_issue_flush) \
*(___ksymtab_gpl+blkdev_issue_write_same) \
*(___ksymtab_gpl+blkdev_issue_zeroout) \
*(___ksymtab_gpl+blkdev_put) \
*(___ksymtab_gpl+block_all_signals) \
*(___ksymtab_gpl+block_commit_write) \
*(___ksymtab_gpl+block_invalidatepage) \
*(___ksymtab_gpl+block_page_mkwrite) \
*(___ksymtab_gpl+block_read_full_page) \
*(___ksymtab_gpl+block_truncate_page) \
*(___ksymtab_gpl+block_write_begin) \
*(___ksymtab_gpl+block_write_end) \
*(___ksymtab_gpl+block_write_full_page) \
*(___ksymtab_gpl+block_write_full_page_endio) \
*(___ksymtab_gpl+blocking_notifier_chain_cond_register) \
*(___ksymtab_gpl+bmap) \
*(___ksymtab_gpl+boot_cpuid) \
*(___ksymtab_gpl+boot_cpuid_phys) \
*(___ksymtab_gpl+bprm_change_interp) \
*(___ksymtab_gpl+br_dev_queue_push_xmit) \
*(___ksymtab_gpl+br_forward_finish) \
*(___ksymtab_gpl+br_handle_frame_finish) \
*(___ksymtab_gpl+brioctl_set) \
*(___ksymtab_gpl+broadcast_uevent) \
*(___ksymtab_gpl+bsearch) \
*(___ksymtab_gpl+buffer_check_dirty_writeback) \
*(___ksymtab_gpl+buffer_migrate_page) \
*(___ksymtab_gpl+build_skb) \
*(___ksymtab_gpl+bus_create_file) \
*(___ksymtab_gpl+bus_for_each_drv) \
*(___ksymtab_gpl+bus_get_kset) \
*(___ksymtab_gpl+bus_remove_file) \
*(___ksymtab_gpl+bus_rescan_devices) \
*(___ksymtab_gpl+byte_rev_table) \
*(___ksymtab_gpl+cacheable_memzero) \
*(___ksymtab_gpl+cad_pid) \
*(___ksymtab_gpl+call_rcu_bh) \
*(___ksymtab_gpl+call_srcu) \
*(___ksymtab_gpl+call_usermodehelper) \
*(___ksymtab_gpl+call_usermodehelper_exec) \
*(___ksymtab_gpl+can_do_mlock) \
*(___ksymtab_gpl+can_nice) \
*(___ksymtab_gpl+cancel_dirty_page) \
*(___ksymtab_gpl+cfi_cmdset_0001) \
*(___ksymtab_gpl+cfi_cmdset_0002) \
*(___ksymtab_gpl+cfi_cmdset_0003) \
*(___ksymtab_gpl+cfi_cmdset_0006) \
*(___ksymtab_gpl+cfi_cmdset_0020) \
*(___ksymtab_gpl+cfi_cmdset_0200) \
*(___ksymtab_gpl+cfi_cmdset_0701) \
*(___ksymtab_gpl+cfi_qry_mode_off) \
*(___ksymtab_gpl+cfi_qry_mode_on) \
*(___ksymtab_gpl+cfi_qry_present) \
*(___ksymtab_gpl+cfi_read_pri) \
*(___ksymtab_gpl+cfi_varsize_frob) \
*(___ksymtab_gpl+check_disk_size_change) \
*(___ksymtab_gpl+check_legacy_ioport) \
*(___ksymtab_gpl+class_compat_create_link) \
*(___ksymtab_gpl+class_compat_register) \
*(___ksymtab_gpl+class_compat_remove_link) \
*(___ksymtab_gpl+class_compat_unregister) \
*(___ksymtab_gpl+class_create_file) \
*(___ksymtab_gpl+class_dev_iter_exit) \
*(___ksymtab_gpl+class_dev_iter_init) \
*(___ksymtab_gpl+class_dev_iter_next) \
*(___ksymtab_gpl+class_for_each_device) \
*(___ksymtab_gpl+class_remove_file) \
*(___ksymtab_gpl+clear_bdi_congested) \
*(___ksymtab_gpl+clear_pages) \
*(___ksymtab_gpl+clear_user_page) \
*(___ksymtab_gpl+clockevent_delta2ns) \
*(___ksymtab_gpl+clockevents_config_and_register) \
*(___ksymtab_gpl+clockevents_notify) \
*(___ksymtab_gpl+clockevents_register_device) \
*(___ksymtab_gpl+clockevents_unbind) \
*(___ksymtab_gpl+clocksource_change_rating) \
*(___ksymtab_gpl+clocksource_register) \
*(___ksymtab_gpl+clocksource_unregister) \
*(___ksymtab_gpl+cmxgcr_lock) \
*(___ksymtab_gpl+commit_creds) \
*(___ksymtab_gpl+completion_done) \
*(___ksymtab_gpl+congestion_wait) \
*(___ksymtab_gpl+console_drivers) \
*(___ksymtab_gpl+console_lock) \
*(___ksymtab_gpl+console_set_on_cmdline) \
*(___ksymtab_gpl+console_start) \
*(___ksymtab_gpl+console_stop) \
*(___ksymtab_gpl+console_suspend_enabled) \
*(___ksymtab_gpl+console_trylock) \
*(___ksymtab_gpl+console_unlock) \
*(___ksymtab_gpl+cont_write_begin) \
*(___ksymtab_gpl+convert_ifc_address) \
*(___ksymtab_gpl+copy_page) \
*(___ksymtab_gpl+copy_strings_kernel) \
*(___ksymtab_gpl+cpm_muram_addr) \
*(___ksymtab_gpl+cpm_muram_alloc) \
*(___ksymtab_gpl+cpm_muram_alloc_fixed) \
*(___ksymtab_gpl+cpm_muram_dma) \
*(___ksymtab_gpl+cpm_muram_free) \
*(___ksymtab_gpl+cpm_muram_offset) \
*(___ksymtab_gpl+cpu_active_mask) \
*(___ksymtab_gpl+cpu_add_dev_attr) \
*(___ksymtab_gpl+cpu_all_bits) \
*(___ksymtab_gpl+cpu_bit_bitmap) \
*(___ksymtab_gpl+cpu_clock) \
*(___ksymtab_gpl+cpu_is_hotpluggable) \
*(___ksymtab_gpl+cpu_online_mask) \
*(___ksymtab_gpl+cpu_possible_mask) \
*(___ksymtab_gpl+cpu_present_mask) \
*(___ksymtab_gpl+cpu_remove_dev_attr) \
*(___ksymtab_gpl+cpu_subsys) \
*(___ksymtab_gpl+cpuidle_disable) \
*(___ksymtab_gpl+crc32c) \
*(___ksymtab_gpl+crc_ccitt) \
*(___ksymtab_gpl+crc_ccitt_table) \
*(___ksymtab_gpl+create_empty_buffers) \
*(___ksymtab_gpl+create_syslog_header) \
*(___ksymtab_gpl+cred_to_ucred) \
*(___ksymtab_gpl+crypto_aead_setauthsize) \
*(___ksymtab_gpl+crypto_aes_expand_key) \
*(___ksymtab_gpl+crypto_aes_set_key) \
*(___ksymtab_gpl+crypto_ahash_final) \
*(___ksymtab_gpl+crypto_alg_list) \
*(___ksymtab_gpl+crypto_alg_sem) \
*(___ksymtab_gpl+crypto_alg_tested) \
*(___ksymtab_gpl+crypto_alloc_aead) \
*(___ksymtab_gpl+crypto_alloc_instance) \
*(___ksymtab_gpl+crypto_alloc_pcomp) \
*(___ksymtab_gpl+crypto_alloc_tfm) \
*(___ksymtab_gpl+crypto_attr_alg_name) \
*(___ksymtab_gpl+crypto_attr_u32) \
*(___ksymtab_gpl+crypto_blkcipher_type) \
*(___ksymtab_gpl+crypto_chain) \
*(___ksymtab_gpl+crypto_create_tfm) \
*(___ksymtab_gpl+crypto_default_rng) \
*(___ksymtab_gpl+crypto_dequeue_request) \
*(___ksymtab_gpl+crypto_drop_spawn) \
*(___ksymtab_gpl+crypto_enqueue_request) \
*(___ksymtab_gpl+crypto_find_alg) \
*(___ksymtab_gpl+crypto_fl_tab) \
*(___ksymtab_gpl+crypto_ft_tab) \
*(___ksymtab_gpl+crypto_get_attr_type) \
*(___ksymtab_gpl+crypto_get_default_rng) \
*(___ksymtab_gpl+crypto_givcipher_type) \
*(___ksymtab_gpl+crypto_grab_aead) \
*(___ksymtab_gpl+crypto_grab_skcipher) \
*(___ksymtab_gpl+crypto_hash_walk_done) \
*(___ksymtab_gpl+crypto_hash_walk_first) \
*(___ksymtab_gpl+crypto_il_tab) \
*(___ksymtab_gpl+crypto_inc) \
*(___ksymtab_gpl+crypto_init_ahash_spawn) \
*(___ksymtab_gpl+crypto_init_queue) \
*(___ksymtab_gpl+crypto_init_shash_spawn) \
*(___ksymtab_gpl+crypto_it_tab) \
*(___ksymtab_gpl+crypto_larval_alloc) \
*(___ksymtab_gpl+crypto_larval_kill) \
*(___ksymtab_gpl+crypto_mod_get) \
*(___ksymtab_gpl+crypto_nivaead_type) \
*(___ksymtab_gpl+crypto_probing_notify) \
*(___ksymtab_gpl+crypto_put_default_rng) \
*(___ksymtab_gpl+crypto_remove_final) \
*(___ksymtab_gpl+crypto_remove_spawns) \
*(___ksymtab_gpl+crypto_rng_type) \
*(___ksymtab_gpl+crypto_shash_digest) \
*(___ksymtab_gpl+crypto_shoot_alg) \
*(___ksymtab_gpl+crypto_tfm_in_queue) \
*(___ksymtab_gpl+crypto_unregister_instance) \
*(___ksymtab_gpl+crypto_unregister_notifier) \
*(___ksymtab_gpl+crypto_unregister_pcomp) \
*(___ksymtab_gpl+crypto_unregister_shash) \
*(___ksymtab_gpl+crypto_unregister_shashes) \
*(___ksymtab_gpl+ct_sip_get_header) \
*(___ksymtab_gpl+ct_sip_get_sdp_header) \
*(___ksymtab_gpl+ct_sip_parse_address_param) \
*(___ksymtab_gpl+ct_sip_parse_header_uri) \
*(___ksymtab_gpl+ct_sip_parse_numerical_param) \
*(___ksymtab_gpl+ct_sip_parse_request) \
*(___ksymtab_gpl+d_add_ci) \
*(___ksymtab_gpl+d_find_alias) \
*(___ksymtab_gpl+d_find_any_alias) \
*(___ksymtab_gpl+d_genocide) \
*(___ksymtab_gpl+d_move) \
*(___ksymtab_gpl+d_path) \
*(___ksymtab_gpl+d_prune_aliases) \
*(___ksymtab_gpl+d_set_d_op) \
*(___ksymtab_gpl+d_tmpfile) \
*(___ksymtab_gpl+d_validate) \
*(___ksymtab_gpl+dcache_dir_close) \
*(___ksymtab_gpl+dcache_dir_lseek) \
*(___ksymtab_gpl+dcache_dir_open) \
*(___ksymtab_gpl+dcache_readdir) \
*(___ksymtab_gpl+debug_locks) \
*(___ksymtab_gpl+debug_locks_off) \
*(___ksymtab_gpl+debug_locks_silent) \
*(___ksymtab_gpl+debugfs_create_atomic_t) \
*(___ksymtab_gpl+debugfs_create_blob) \
*(___ksymtab_gpl+debugfs_create_regset32) \
*(___ksymtab_gpl+debugfs_create_size_t) \
*(___ksymtab_gpl+debugfs_create_u16) \
*(___ksymtab_gpl+debugfs_create_x16) \
*(___ksymtab_gpl+debugfs_create_x64) \
*(___ksymtab_gpl+debugfs_create_x8) \
*(___ksymtab_gpl+debugfs_initialized) \
*(___ksymtab_gpl+debugfs_print_regs32) \
*(___ksymtab_gpl+decrementer_clockevent) \
*(___ksymtab_gpl+default_file_splice_read) \
*(___ksymtab_gpl+default_qdisc_ops) \
*(___ksymtab_gpl+del_mtd_blktrans_dev) \
*(___ksymtab_gpl+delete_from_page_cache) \
*(___ksymtab_gpl+dentry_open) \
*(___ksymtab_gpl+dentry_path_raw) \
*(___ksymtab_gpl+deregister_mtd_blktrans) \
*(___ksymtab_gpl+deregister_mtd_parser) \
*(___ksymtab_gpl+des_ekey) \
*(___ksymtab_gpl+dev_activate) \
*(___ksymtab_gpl+dev_add_offload) \
*(___ksymtab_gpl+dev_addr_add) \
*(___ksymtab_gpl+dev_addr_add_multiple) \
*(___ksymtab_gpl+dev_addr_del) \
*(___ksymtab_gpl+dev_addr_del_multiple) \
*(___ksymtab_gpl+dev_addr_flush) \
*(___ksymtab_gpl+dev_addr_init) \
*(___ksymtab_gpl+dev_alert) \
*(___ksymtab_gpl+dev_base_lock) \
*(___ksymtab_gpl+dev_change_carrier) \
*(___ksymtab_gpl+dev_change_flags) \
*(___ksymtab_gpl+dev_crit) \
*(___ksymtab_gpl+dev_deactivate) \
*(___ksymtab_gpl+dev_emerg) \
*(___ksymtab_gpl+dev_get_phys_port_id) \
*(___ksymtab_gpl+dev_getbyhwaddr_rcu) \
*(___ksymtab_gpl+dev_getfirstbyhwtype) \
*(___ksymtab_gpl+dev_graft_qdisc) \
*(___ksymtab_gpl+dev_load) \
*(___ksymtab_gpl+dev_mc_init) \
*(___ksymtab_gpl+dev_remove_offload) \
*(___ksymtab_gpl+dev_uc_add) \
*(___ksymtab_gpl+dev_uc_add_excl) \
*(___ksymtab_gpl+dev_uc_del) \
*(___ksymtab_gpl+dev_uc_init) \
*(___ksymtab_gpl+device_find_child) \
*(___ksymtab_gpl+device_move) \
*(___ksymtab_gpl+device_reprobe) \
*(___ksymtab_gpl+device_show_bool) \
*(___ksymtab_gpl+device_show_int) \
*(___ksymtab_gpl+device_show_ulong) \
*(___ksymtab_gpl+device_store_bool) \
*(___ksymtab_gpl+device_store_int) \
*(___ksymtab_gpl+device_store_ulong) \
*(___ksymtab_gpl+devm_add_action) \
*(___ksymtab_gpl+devm_gpio_free) \
*(___ksymtab_gpl+devm_gpio_request) \
*(___ksymtab_gpl+devm_gpio_request_one) \
*(___ksymtab_gpl+devm_ioport_map) \
*(___ksymtab_gpl+devm_ioport_unmap) \
*(___ksymtab_gpl+devm_remove_action) \
*(___ksymtab_gpl+devres_add) \
*(___ksymtab_gpl+devres_alloc) \
*(___ksymtab_gpl+devres_destroy) \
*(___ksymtab_gpl+devres_find) \
*(___ksymtab_gpl+devres_for_each_res) \
*(___ksymtab_gpl+devres_free) \
*(___ksymtab_gpl+devres_get) \
*(___ksymtab_gpl+devres_release) \
*(___ksymtab_gpl+devres_remove) \
*(___ksymtab_gpl+dget_parent) \
*(___ksymtab_gpl+dio_end_io) \
*(___ksymtab_gpl+directly_mappable_cdev_bdi) \
*(___ksymtab_gpl+disable_irq) \
*(___ksymtab_gpl+disable_percpu_irq) \
*(___ksymtab_gpl+disk_get_part) \
*(___ksymtab_gpl+disk_map_sector_rcu) \
*(___ksymtab_gpl+disk_part_iter_exit) \
*(___ksymtab_gpl+disk_part_iter_init) \
*(___ksymtab_gpl+disk_part_iter_next) \
*(___ksymtab_gpl+disk_stack_limits) \
*(___ksymtab_gpl+div64_s64) \
*(___ksymtab_gpl+div64_u64) \
*(___ksymtab_gpl+div64_u64_rem) \
*(___ksymtab_gpl+div_s64_rem) \
*(___ksymtab_gpl+dlci_ioctl_set) \
*(___ksymtab_gpl+dma_async_tx_descriptor_init) \
*(___ksymtab_gpl+dma_common_get_sgtable) \
*(___ksymtab_gpl+dma_common_mmap) \
*(___ksymtab_gpl+dma_direct_ops) \
*(___ksymtab_gpl+dma_find_channel) \
*(___ksymtab_gpl+dma_get_required_mask) \
*(___ksymtab_gpl+dma_get_slave_channel) \
*(___ksymtab_gpl+dma_issue_pending_all) \
*(___ksymtab_gpl+dma_release_channel) \
*(___ksymtab_gpl+dma_request_slave_channel) \
*(___ksymtab_gpl+dma_run_dependencies) \
*(___ksymtab_gpl+dma_spin_lock) \
*(___ksymtab_gpl+dma_sync_wait) \
*(___ksymtab_gpl+dma_wait_for_async_tx) \
*(___ksymtab_gpl+dmaengine_get) \
*(___ksymtab_gpl+dmaengine_put) \
*(___ksymtab_gpl+dmam_alloc_noncoherent) \
*(___ksymtab_gpl+dmam_free_coherent) \
*(___ksymtab_gpl+dmam_free_noncoherent) \
*(___ksymtab_gpl+dmam_pool_create) \
*(___ksymtab_gpl+dmam_pool_destroy) \
*(___ksymtab_gpl+do_IRQ) \
*(___ksymtab_gpl+do_SAK) \
*(___ksymtab_gpl+do_exit) \
*(___ksymtab_gpl+do_map_probe) \
*(___ksymtab_gpl+do_settimeofday) \
*(___ksymtab_gpl+do_splice_direct) \
*(___ksymtab_gpl+done_path_create) \
*(___ksymtab_gpl+dql_init) \
*(___ksymtab_gpl+dql_reset) \
*(___ksymtab_gpl+drain_workqueue) \
*(___ksymtab_gpl+driver_find) \
*(___ksymtab_gpl+driver_find_device) \
*(___ksymtab_gpl+driver_for_each_device) \
*(___ksymtab_gpl+dummy_irq_chip) \
*(___ksymtab_gpl+each_symbol_section) \
*(___ksymtab_gpl+elevator_alloc) \
*(___ksymtab_gpl+elevator_change) \
*(___ksymtab_gpl+elevator_exit) \
*(___ksymtab_gpl+elevator_init) \
*(___ksymtab_gpl+elv_abort_queue) \
*(___ksymtab_gpl+elv_add_request) \
*(___ksymtab_gpl+elv_dispatch_add_tail) \
*(___ksymtab_gpl+elv_rb_add) \
*(___ksymtab_gpl+elv_rb_del) \
*(___ksymtab_gpl+elv_rb_find) \
*(___ksymtab_gpl+elv_rb_former_request) \
*(___ksymtab_gpl+elv_rb_latter_request) \
*(___ksymtab_gpl+elv_register) \
*(___ksymtab_gpl+elv_register_queue) \
*(___ksymtab_gpl+elv_rq_merge_ok) \
*(___ksymtab_gpl+elv_unregister) \
*(___ksymtab_gpl+elv_unregister_queue) \
*(___ksymtab_gpl+emergency_restart) \
*(___ksymtab_gpl+empty_aops) \
*(___ksymtab_gpl+empty_zero_page) \
*(___ksymtab_gpl+enable_kernel_fp) \
*(___ksymtab_gpl+enable_percpu_irq) \
*(___ksymtab_gpl+end_buffer_async_write) \
*(___ksymtab_gpl+end_buffer_read_sync) \
*(___ksymtab_gpl+end_buffer_write_sync) \
*(___ksymtab_gpl+eth_change_mtu) \
*(___ksymtab_gpl+eth_header) \
*(___ksymtab_gpl+eth_header_cache) \
*(___ksymtab_gpl+eth_header_parse) \
*(___ksymtab_gpl+eth_rebuild_header) \
*(___ksymtab_gpl+eventfd_ctx_fdget) \
*(___ksymtab_gpl+eventfd_ctx_fileget) \
*(___ksymtab_gpl+eventfd_ctx_get) \
*(___ksymtab_gpl+eventfd_ctx_put) \
*(___ksymtab_gpl+eventfd_ctx_read) \
*(___ksymtab_gpl+eventfd_fget) \
*(___ksymtab_gpl+eventfd_signal) \
*(___ksymtab_gpl+expand_files) \
*(___ksymtab_gpl+f_setown) \
*(___ksymtab_gpl+fail_migrate_page) \
*(___ksymtab_gpl+fanout_mutex) \
*(___ksymtab_gpl+fb_notifier_call_chain) \
*(___ksymtab_gpl+fb_register_client) \
*(___ksymtab_gpl+fb_unregister_client) \
*(___ksymtab_gpl+fd_install) \
*(___ksymtab_gpl+fget) \
*(___ksymtab_gpl+fget_light) \
*(___ksymtab_gpl+fget_raw) \
*(___ksymtab_gpl+fib_default_rule_pref) \
*(___ksymtab_gpl+fiemap_check_flags) \
*(___ksymtab_gpl+fiemap_fill_next_extent) \
*(___ksymtab_gpl+fifo_create_dflt) \
*(___ksymtab_gpl+fifo_set_limit) \
*(___ksymtab_gpl+file_open_root) \
*(___ksymtab_gpl+file_ra_state_init) \
*(___ksymtab_gpl+file_remove_suid) \
*(___ksymtab_gpl+filemap_flush) \
*(___ksymtab_gpl+filemap_page_mkwrite) \
*(___ksymtab_gpl+filp_close) \
*(___ksymtab_gpl+filp_open) \
*(___ksymtab_gpl+find_get_page) \
*(___ksymtab_gpl+find_get_pages_contig) \
*(___ksymtab_gpl+find_get_pid) \
*(___ksymtab_gpl+find_last_bit) \
*(___ksymtab_gpl+find_linux_pte_or_hugepte) \
*(___ksymtab_gpl+find_lock_page) \
*(___ksymtab_gpl+find_module) \
*(___ksymtab_gpl+find_pid_ns) \
*(___ksymtab_gpl+find_symbol) \
*(___ksymtab_gpl+find_task_by_vpid) \
*(___ksymtab_gpl+find_vma) \
*(___ksymtab_gpl+find_vpid) \
*(___ksymtab_gpl+firmware_kobj) \
*(___ksymtab_gpl+fixed_size_llseek) \
*(___ksymtab_gpl+flex_array_alloc) \
*(___ksymtab_gpl+flex_array_clear) \
*(___ksymtab_gpl+flex_array_free) \
*(___ksymtab_gpl+flex_array_free_parts) \
*(___ksymtab_gpl+flex_array_get) \
*(___ksymtab_gpl+flex_array_get_ptr) \
*(___ksymtab_gpl+flex_array_prealloc) \
*(___ksymtab_gpl+flex_array_put) \
*(___ksymtab_gpl+flex_array_shrink) \
*(___ksymtab_gpl+flock_lock_file_wait) \
*(___ksymtab_gpl+flow_cache_genid) \
*(___ksymtab_gpl+flush_dcache_icache_page) \
*(___ksymtab_gpl+flush_dcache_range) \
*(___ksymtab_gpl+flush_fp_to_thread) \
*(___ksymtab_gpl+flush_hash_entry) \
*(___ksymtab_gpl+flush_hash_pages) \
*(___ksymtab_gpl+flush_icache_user_range) \
*(___ksymtab_gpl+flush_instruction_cache) \
*(___ksymtab_gpl+flush_kthread_work) \
*(___ksymtab_gpl+flush_kthread_worker) \
*(___ksymtab_gpl+flush_old_exec) \
*(___ksymtab_gpl+flush_tlb_kernel_range) \
*(___ksymtab_gpl+flush_tlb_mm) \
*(___ksymtab_gpl+flush_tlb_page) \
*(___ksymtab_gpl+flush_tlb_range) \
*(___ksymtab_gpl+follow_pfn) \
*(___ksymtab_gpl+free_anon_bdev) \
*(___ksymtab_gpl+free_buffer_head) \
*(___ksymtab_gpl+free_dma) \
*(___ksymtab_gpl+free_inode_nonrcu) \
*(___ksymtab_gpl+free_reserved_area) \
*(___ksymtab_gpl+free_task) \
*(___ksymtab_gpl+free_vm_area) \
*(___ksymtab_gpl+freeze_bdev) \
*(___ksymtab_gpl+fs_bio_set) \
*(___ksymtab_gpl+fs_kobj) \
*(___ksymtab_gpl+fsl_ifc_ctrl_dev) \
*(___ksymtab_gpl+fsl_ifc_find) \
*(___ksymtab_gpl+fsl_lbc_addr) \
*(___ksymtab_gpl+fsl_lbc_ctrl_dev) \
*(___ksymtab_gpl+fsl_lbc_find) \
*(___ksymtab_gpl+fsnotify) \
*(___ksymtab_gpl+fsnotify_get_cookie) \
*(___ksymtab_gpl+fsstack_copy_attr_all) \
*(___ksymtab_gpl+fsstack_copy_inode_size) \
*(___ksymtab_gpl+fsync_bdev) \
*(___ksymtab_gpl+gcd) \
*(___ksymtab_gpl+gen_estimator_active) \
*(___ksymtab_gpl+gen_kill_estimator) \
*(___ksymtab_gpl+gen_new_estimator) \
*(___ksymtab_gpl+gen_replace_estimator) \
*(___ksymtab_gpl+generate_random_uuid) \
*(___ksymtab_gpl+generic_access_phys) \
*(___ksymtab_gpl+generic_block_bmap) \
*(___ksymtab_gpl+generic_block_fiemap) \
*(___ksymtab_gpl+generic_check_addressable) \
*(___ksymtab_gpl+generic_cont_expand_simple) \
*(___ksymtab_gpl+generic_error_remove_page) \
*(___ksymtab_gpl+generic_file_buffered_write) \
*(___ksymtab_gpl+generic_file_direct_write) \
*(___ksymtab_gpl+generic_file_fsync) \
*(___ksymtab_gpl+generic_file_splice_write) \
*(___ksymtab_gpl+generic_getxattr) \
*(___ksymtab_gpl+generic_handle_irq) \
*(___ksymtab_gpl+generic_listxattr) \
*(___ksymtab_gpl+generic_make_request) \
*(___ksymtab_gpl+generic_mii_ioctl) \
*(___ksymtab_gpl+generic_pipe_buf_confirm) \
*(___ksymtab_gpl+generic_pipe_buf_get) \
*(___ksymtab_gpl+generic_pipe_buf_map) \
*(___ksymtab_gpl+generic_pipe_buf_release) \
*(___ksymtab_gpl+generic_pipe_buf_steal) \
*(___ksymtab_gpl+generic_pipe_buf_unmap) \
*(___ksymtab_gpl+generic_removexattr) \
*(___ksymtab_gpl+generic_ro_fops) \
*(___ksymtab_gpl+generic_segment_checks) \
*(___ksymtab_gpl+generic_setxattr) \
*(___ksymtab_gpl+generic_show_options) \
*(___ksymtab_gpl+generic_splice_sendpage) \
*(___ksymtab_gpl+generic_write_end) \
*(___ksymtab_gpl+genl_notify) \
*(___ksymtab_gpl+genl_register_ops) \
*(___ksymtab_gpl+genl_unregister_ops) \
*(___ksymtab_gpl+genphy_config_aneg) \
*(___ksymtab_gpl+genphy_read_status) \
*(___ksymtab_gpl+genphy_restart_aneg) \
*(___ksymtab_gpl+genphy_resume) \
*(___ksymtab_gpl+genphy_suspend) \
*(___ksymtab_gpl+get_anon_bdev) \
*(___ksymtab_gpl+get_baudrate) \
*(___ksymtab_gpl+get_brgfreq) \
*(___ksymtab_gpl+get_cpu_device) \
*(___ksymtab_gpl+get_cpu_idle_time_us) \
*(___ksymtab_gpl+get_cpu_iowait_time_us) \
*(___ksymtab_gpl+get_current_tty) \
*(___ksymtab_gpl+get_disk) \
*(___ksymtab_gpl+get_fs_type) \
*(___ksymtab_gpl+get_gendisk) \
*(___ksymtab_gpl+get_io_context) \
*(___ksymtab_gpl+get_kernel_page) \
*(___ksymtab_gpl+get_kernel_pages) \
*(___ksymtab_gpl+get_max_files) \
*(___ksymtab_gpl+get_monotonic_boottime) \
*(___ksymtab_gpl+get_mtd_device) \
*(___ksymtab_gpl+get_mtd_device_nm) \
*(___ksymtab_gpl+get_option) \
*(___ksymtab_gpl+get_options) \
*(___ksymtab_gpl+get_pci_dma_ops) \
*(___ksymtab_gpl+get_phy_device) \
*(___ksymtab_gpl+get_phy_id) \
*(___ksymtab_gpl+get_pid_task) \
*(___ksymtab_gpl+get_qe_base) \
*(___ksymtab_gpl+get_random_int) \
*(___ksymtab_gpl+get_task_comm) \
*(___ksymtab_gpl+get_task_io_context) \
*(___ksymtab_gpl+get_task_mm) \
*(___ksymtab_gpl+get_thermal_instance) \
*(___ksymtab_gpl+get_tz_trend) \
*(___ksymtab_gpl+get_unmapped_area) \
*(___ksymtab_gpl+get_unused_fd_flags) \
*(___ksymtab_gpl+get_user_pages) \
*(___ksymtab_gpl+get_user_pages_fast) \
*(___ksymtab_gpl+get_vm_area) \
*(___ksymtab_gpl+get_write_access) \
*(___ksymtab_gpl+get_zeroed_page) \
*(___ksymtab_gpl+getboottime) \
*(___ksymtab_gpl+getname) \
*(___ksymtab_gpl+getnstimeofday) \
*(___ksymtab_gpl+getrawmonotonic) \
*(___ksymtab_gpl+gfar_phc_index) \
*(___ksymtab_gpl+gnet_stats_copy_basic) \
*(___ksymtab_gpl+gnet_stats_copy_rate_est) \
*(___ksymtab_gpl+gnet_stats_finish_copy) \
*(___ksymtab_gpl+gnet_stats_start_copy) \
*(___ksymtab_gpl+gnet_stats_start_copy_compat) \
*(___ksymtab_gpl+gpio_direction_input) \
*(___ksymtab_gpl+gpio_direction_output) \
*(___ksymtab_gpl+gpio_export) \
*(___ksymtab_gpl+gpio_export_link) \
*(___ksymtab_gpl+gpio_free) \
*(___ksymtab_gpl+gpio_free_array) \
*(___ksymtab_gpl+gpio_get_value_cansleep) \
*(___ksymtab_gpl+gpio_request) \
*(___ksymtab_gpl+gpio_request_array) \
*(___ksymtab_gpl+gpio_request_one) \
*(___ksymtab_gpl+gpio_set_debounce) \
*(___ksymtab_gpl+gpio_set_value_cansleep) \
*(___ksymtab_gpl+gpio_sysfs_set_active_low) \
*(___ksymtab_gpl+gpio_unexport) \
*(___ksymtab_gpl+gpiochip_add) \
*(___ksymtab_gpl+gpiochip_find) \
*(___ksymtab_gpl+gpiochip_is_requested) \
*(___ksymtab_gpl+gpiochip_remove) \
*(___ksymtab_gpl+grab_cache_page_nowait) \
*(___ksymtab_gpl+half_md4_transform) \
*(___ksymtab_gpl+handle_edge_irq) \
*(___ksymtab_gpl+handle_level_irq) \
*(___ksymtab_gpl+handle_nested_irq) \
*(___ksymtab_gpl+handle_simple_irq) \
*(___ksymtab_gpl+have_submounts) \
*(___ksymtab_gpl+hex2bin) \
*(___ksymtab_gpl+hex_asc) \
*(___ksymtab_gpl+hex_dump_to_buffer) \
*(___ksymtab_gpl+hrtimer_forward) \
*(___ksymtab_gpl+hrtimer_get_remaining) \
*(___ksymtab_gpl+hrtimer_get_res) \
*(___ksymtab_gpl+hrtimer_start) \
*(___ksymtab_gpl+hrtimer_try_to_cancel) \
*(___ksymtab_gpl+i2c_adapter_type) \
*(___ksymtab_gpl+i2c_add_adapter) \
*(___ksymtab_gpl+i2c_add_numbered_adapter) \
*(___ksymtab_gpl+i2c_bus_type) \
*(___ksymtab_gpl+i2c_clients_command) \
*(___ksymtab_gpl+i2c_del_adapter) \
*(___ksymtab_gpl+i2c_del_driver) \
*(___ksymtab_gpl+i2c_for_each_dev) \
*(___ksymtab_gpl+i2c_get_adapter) \
*(___ksymtab_gpl+i2c_lock_adapter) \
*(___ksymtab_gpl+i2c_master_recv) \
*(___ksymtab_gpl+i2c_master_send) \
*(___ksymtab_gpl+i2c_new_device) \
*(___ksymtab_gpl+i2c_new_dummy) \
*(___ksymtab_gpl+i2c_new_probed_device) \
*(___ksymtab_gpl+i2c_probe_func_quick_read) \
*(___ksymtab_gpl+i2c_put_adapter) \
*(___ksymtab_gpl+i2c_register_driver) \
*(___ksymtab_gpl+i2c_release_client) \
*(___ksymtab_gpl+i2c_smbus_read_block_data) \
*(___ksymtab_gpl+i2c_smbus_read_byte) \
*(___ksymtab_gpl+i2c_smbus_read_byte_data) \
*(___ksymtab_gpl+i2c_smbus_read_i2c_block_data) \
*(___ksymtab_gpl+i2c_smbus_read_word_data) \
*(___ksymtab_gpl+i2c_smbus_write_block_data) \
*(___ksymtab_gpl+i2c_smbus_write_byte) \
*(___ksymtab_gpl+i2c_smbus_write_byte_data) \
*(___ksymtab_gpl+i2c_smbus_write_i2c_block_data) \
*(___ksymtab_gpl+i2c_smbus_write_word_data) \
*(___ksymtab_gpl+i2c_smbus_xfer) \
*(___ksymtab_gpl+i2c_transfer) \
*(___ksymtab_gpl+i2c_unlock_adapter) \
*(___ksymtab_gpl+i2c_unregister_device) \
*(___ksymtab_gpl+i2c_use_client) \
*(___ksymtab_gpl+i2c_verify_adapter) \
*(___ksymtab_gpl+i2c_verify_client) \
*(___ksymtab_gpl+i8042_check_port_owner) \
*(___ksymtab_gpl+i8042_command) \
*(___ksymtab_gpl+i8042_install_filter) \
*(___ksymtab_gpl+i8042_lock_chip) \
*(___ksymtab_gpl+i8042_remove_filter) \
*(___ksymtab_gpl+i8042_unlock_chip) \
*(___ksymtab_gpl+icmp_err_convert) \
*(___ksymtab_gpl+ida_destroy) \
*(___ksymtab_gpl+ida_init) \
*(___ksymtab_gpl+ida_simple_get) \
*(___ksymtab_gpl+ida_simple_remove) \
*(___ksymtab_gpl+idr_get_next) \
*(___ksymtab_gpl+idr_replace) \
*(___ksymtab_gpl+ifla_policy) \
*(___ksymtab_gpl+igrab) \
*(___ksymtab_gpl+in_dev_finish_destroy) \
*(___ksymtab_gpl+inet6_add_offload) \
*(___ksymtab_gpl+inet6_del_offload) \
*(___ksymtab_gpl+inet_add_offload) \
*(___ksymtab_gpl+inet_csk_addr2sockaddr) \
*(___ksymtab_gpl+inet_csk_bind_conflict) \
*(___ksymtab_gpl+inet_csk_clear_xmit_timers) \
*(___ksymtab_gpl+inet_csk_clone_lock) \
*(___ksymtab_gpl+inet_csk_destroy_sock) \
*(___ksymtab_gpl+inet_csk_init_xmit_timers) \
*(___ksymtab_gpl+inet_csk_listen_start) \
*(___ksymtab_gpl+inet_csk_listen_stop) \
*(___ksymtab_gpl+inet_csk_reqsk_queue_hash_add) \
*(___ksymtab_gpl+inet_csk_reqsk_queue_prune) \
*(___ksymtab_gpl+inet_csk_route_child_sock) \
*(___ksymtab_gpl+inet_csk_route_req) \
*(___ksymtab_gpl+inet_csk_search_req) \
*(___ksymtab_gpl+inet_csk_timer_bug_msg) \
*(___ksymtab_gpl+inet_del_offload) \
*(___ksymtab_gpl+inet_dev_addr_type) \
*(___ksymtab_gpl+inet_get_local_port_range) \
*(___ksymtab_gpl+inet_getname) \
*(___ksymtab_gpl+inet_proto_csum_replace16) \
*(___ksymtab_gpl+inet_proto_csum_replace4) \
*(___ksymtab_gpl+inet_put_port) \
*(___ksymtab_gpl+inet_rtx_syn_ack) \
*(___ksymtab_gpl+inet_select_addr) \
*(___ksymtab_gpl+inet_twdr_hangman) \
*(___ksymtab_gpl+inet_twdr_twcal_tick) \
*(___ksymtab_gpl+inet_twdr_twkill_work) \
*(___ksymtab_gpl+inetdev_by_index) \
*(___ksymtab_gpl+init_buffer) \
*(___ksymtab_gpl+init_dummy_netdev) \
*(___ksymtab_gpl+init_srcu_struct) \
*(___ksymtab_gpl+init_task) \
*(___ksymtab_gpl+inode_add_bytes) \
*(___ksymtab_gpl+inode_dio_done) \
*(___ksymtab_gpl+inode_dio_wait) \
*(___ksymtab_gpl+inode_get_bytes) \
*(___ksymtab_gpl+inode_init_always) \
*(___ksymtab_gpl+inode_needs_sync) \
*(___ksymtab_gpl+inode_newsize_ok) \
*(___ksymtab_gpl+inode_permission) \
*(___ksymtab_gpl+inode_sb_list_add) \
*(___ksymtab_gpl+inode_set_bytes) \
*(___ksymtab_gpl+inode_sub_bytes) \
*(___ksymtab_gpl+inode_wait) \
*(___ksymtab_gpl+install_exec_creds) \
*(___ksymtab_gpl+int_sqrt) \
*(___ksymtab_gpl+intercept_table) \
*(___ksymtab_gpl+invalidate_bh_lrus) \
*(___ksymtab_gpl+invalidate_inode_buffers) \
*(___ksymtab_gpl+invalidate_mapping_pages) \
*(___ksymtab_gpl+invalidate_partition) \
*(___ksymtab_gpl+ioctl_by_bdev) \
*(___ksymtab_gpl+ioport_map) \
*(___ksymtab_gpl+ioport_unmap) \
*(___ksymtab_gpl+ioread16) \
*(___ksymtab_gpl+ioread16_rep) \
*(___ksymtab_gpl+ioread16be) \
*(___ksymtab_gpl+ioread8) \
*(___ksymtab_gpl+ioread8_rep) \
*(___ksymtab_gpl+iov_iter_fault_in_readable) \
*(___ksymtab_gpl+iov_iter_single_seg_count) \
*(___ksymtab_gpl+iov_pages) \
*(___ksymtab_gpl+iowrite16) \
*(___ksymtab_gpl+iowrite16_rep) \
*(___ksymtab_gpl+iowrite16be) \
*(___ksymtab_gpl+iowrite8) \
*(___ksymtab_gpl+iowrite8_rep) \
*(___ksymtab_gpl+ip4_datagram_release_cb) \
*(___ksymtab_gpl+ip_build_and_send_pkt) \
*(___ksymtab_gpl+ip_check_defrag) \
*(___ksymtab_gpl+ip_ct_attach) \
*(___ksymtab_gpl+ip_defrag) \
*(___ksymtab_gpl+ip_fast_csum) \
*(___ksymtab_gpl+ip_fragment) \
*(___ksymtab_gpl+ip_options_compile) \
*(___ksymtab_gpl+ip_options_rcv_srr) \
*(___ksymtab_gpl+ip_route_me_harder) \
*(___ksymtab_gpl+ip_send_check) \
*(___ksymtab_gpl+ip_tos2prio) \
*(___ksymtab_gpl+ipt_alloc_initial_table) \
*(___ksymtab_gpl+ipt_do_table) \
*(___ksymtab_gpl+ipt_register_table) \
*(___ksymtab_gpl+ipt_unregister_table) \
*(___ksymtab_gpl+ipv4_sk_redirect) \
*(___ksymtab_gpl+ipv6_find_hdr) \
*(___ksymtab_gpl+ipv6_find_tlv) \
*(___ksymtab_gpl+irq_create_direct_mapping) \
*(___ksymtab_gpl+irq_create_mapping) \
*(___ksymtab_gpl+irq_create_of_mapping) \
*(___ksymtab_gpl+irq_create_strict_mappings) \
*(___ksymtab_gpl+irq_domain_add_legacy) \
*(___ksymtab_gpl+irq_domain_add_simple) \
*(___ksymtab_gpl+irq_domain_associate) \
*(___ksymtab_gpl+irq_domain_associate_many) \
*(___ksymtab_gpl+irq_domain_remove) \
*(___ksymtab_gpl+irq_domain_simple_ops) \
*(___ksymtab_gpl+irq_domain_xlate_onecell) \
*(___ksymtab_gpl+irq_domain_xlate_onetwocell) \
*(___ksymtab_gpl+irq_domain_xlate_twocell) \
*(___ksymtab_gpl+irq_find_host) \
*(___ksymtab_gpl+irq_find_mapping) \
*(___ksymtab_gpl+irq_free_descs) \
*(___ksymtab_gpl+irq_get_irq_data) \
*(___ksymtab_gpl+irq_modify_status) \
*(___ksymtab_gpl+irq_set_chip) \
*(___ksymtab_gpl+irq_set_chip_and_handler_name) \
*(___ksymtab_gpl+irq_set_chip_data) \
*(___ksymtab_gpl+irq_set_default_host) \
*(___ksymtab_gpl+irq_set_handler_data) \
*(___ksymtab_gpl+irq_set_irq_type) \
*(___ksymtab_gpl+irq_set_irq_wake) \
*(___ksymtab_gpl+irq_stat) \
*(___ksymtab_gpl+irq_to_desc) \
*(___ksymtab_gpl+irq_work_queue) \
*(___ksymtab_gpl+irq_work_run) \
*(___ksymtab_gpl+irq_work_sync) \
*(___ksymtab_gpl+isa_bridge_pcidev) \
*(___ksymtab_gpl+isa_dma_bridge_buggy) \
*(___ksymtab_gpl+isa_io_base) \
*(___ksymtab_gpl+isa_mem_base) \
*(___ksymtab_gpl+iter_div_u64_rem) \
*(___ksymtab_gpl+iterate_dir) \
*(___ksymtab_gpl+iterate_fd) \
*(___ksymtab_gpl+iw_handler_get_spy) \
*(___ksymtab_gpl+iw_handler_get_thrspy) \
*(___ksymtab_gpl+iw_handler_set_spy) \
*(___ksymtab_gpl+iw_handler_set_thrspy) \
*(___ksymtab_gpl+jump_label_rate_limit) \
*(___ksymtab_gpl+kallsyms_on_each_symbol) \
*(___ksymtab_gpl+kcrypto_wq) \
*(___ksymtab_gpl+kern_mount_data) \
*(___ksymtab_gpl+kern_path) \
*(___ksymtab_gpl+kern_path_create) \
*(___ksymtab_gpl+kern_path_mountpoint) \
*(___ksymtab_gpl+kern_unmount) \
*(___ksymtab_gpl+kernel_accept) \
*(___ksymtab_gpl+kernel_cpustat) \
*(___ksymtab_gpl+kernel_getpeername) \
*(___ksymtab_gpl+kernel_getsockname) \
*(___ksymtab_gpl+kernel_getsockopt) \
*(___ksymtab_gpl+kernel_halt) \
*(___ksymtab_gpl+kernel_kobj) \
*(___ksymtab_gpl+kernel_listen) \
*(___ksymtab_gpl+kernel_power_off) \
*(___ksymtab_gpl+kernel_read) \
*(___ksymtab_gpl+kernel_restart) \
*(___ksymtab_gpl+kernel_sendpage) \
*(___ksymtab_gpl+kernel_sock_ioctl) \
*(___ksymtab_gpl+kernel_write) \
*(___ksymtab_gpl+kernstart_addr) \
*(___ksymtab_gpl+kill_bdev) \
*(___ksymtab_gpl+kill_pgrp) \
*(___ksymtab_gpl+kill_pid) \
*(___ksymtab_gpl+kill_proc_info) \
*(___ksymtab_gpl+klist_add_after) \
*(___ksymtab_gpl+klist_add_before) \
*(___ksymtab_gpl+klist_add_head) \
*(___ksymtab_gpl+klist_add_tail) \
*(___ksymtab_gpl+klist_del) \
*(___ksymtab_gpl+klist_init) \
*(___ksymtab_gpl+klist_iter_exit) \
*(___ksymtab_gpl+klist_iter_init) \
*(___ksymtab_gpl+klist_iter_init_node) \
*(___ksymtab_gpl+klist_next) \
*(___ksymtab_gpl+klist_node_attached) \
*(___ksymtab_gpl+klist_remove) \
*(___ksymtab_gpl+km_new_mapping) \
*(___ksymtab_gpl+km_policy_expired) \
*(___ksymtab_gpl+km_policy_notify) \
*(___ksymtab_gpl+km_query) \
*(___ksymtab_gpl+km_report) \
*(___ksymtab_gpl+km_state_expired) \
*(___ksymtab_gpl+km_state_notify) \
*(___ksymtab_gpl+kmalloc_dma_caches) \
*(___ksymtab_gpl+kmem_cache_shrink) \
*(___ksymtab_gpl+kmsg_dump_get_buffer) \
*(___ksymtab_gpl+kmsg_dump_get_line) \
*(___ksymtab_gpl+kmsg_dump_register) \
*(___ksymtab_gpl+kmsg_dump_rewind) \
*(___ksymtab_gpl+kmsg_dump_unregister) \
*(___ksymtab_gpl+kobject_add) \
*(___ksymtab_gpl+kobject_create_and_add) \
*(___ksymtab_gpl+kobject_del) \
*(___ksymtab_gpl+kobject_get) \
*(___ksymtab_gpl+kobject_get_path) \
*(___ksymtab_gpl+kobject_init) \
*(___ksymtab_gpl+kobject_init_and_add) \
*(___ksymtab_gpl+kobject_put) \
*(___ksymtab_gpl+kobject_rename) \
*(___ksymtab_gpl+kobject_set_name) \
*(___ksymtab_gpl+krealloc) \
*(___ksymtab_gpl+kset_create_and_add) \
*(___ksymtab_gpl+kset_register) \
*(___ksymtab_gpl+kset_unregister) \
*(___ksymtab_gpl+ksize) \
*(___ksymtab_gpl+kstat) \
*(___ksymtab_gpl+kstrtoint) \
*(___ksymtab_gpl+kstrtoint_from_user) \
*(___ksymtab_gpl+kstrtol_from_user) \
*(___ksymtab_gpl+kstrtoll) \
*(___ksymtab_gpl+kstrtoll_from_user) \
*(___ksymtab_gpl+kstrtos16) \
*(___ksymtab_gpl+kstrtos16_from_user) \
*(___ksymtab_gpl+kstrtos8) \
*(___ksymtab_gpl+kstrtos8_from_user) \
*(___ksymtab_gpl+kstrtou16) \
*(___ksymtab_gpl+kstrtou16_from_user) \
*(___ksymtab_gpl+kthread_freezable_should_stop) \
*(___ksymtab_gpl+kthread_worker_fn) \
*(___ksymtab_gpl+ktime_add_ns) \
*(___ksymtab_gpl+ktime_add_safe) \
*(___ksymtab_gpl+ktime_sub_ns) \
*(___ksymtab_gpl+laptop_mode) \
*(___ksymtab_gpl+lcm) \
*(___ksymtab_gpl+lease_get_mtime) \
*(___ksymtab_gpl+lease_modify) \
*(___ksymtab_gpl+led_classdev_resume) \
*(___ksymtab_gpl+led_classdev_suspend) \
*(___ksymtab_gpl+led_stop_software_blink) \
*(___ksymtab_gpl+led_trigger_blink) \
*(___ksymtab_gpl+led_trigger_remove) \
*(___ksymtab_gpl+led_trigger_rename_static) \
*(___ksymtab_gpl+led_trigger_set) \
*(___ksymtab_gpl+led_trigger_set_default) \
*(___ksymtab_gpl+led_trigger_show) \
*(___ksymtab_gpl+led_trigger_store) \
*(___ksymtab_gpl+leds_list) \
*(___ksymtab_gpl+leds_list_lock) \
*(___ksymtab_gpl+lg_global_lock) \
*(___ksymtab_gpl+lg_global_unlock) \
*(___ksymtab_gpl+lg_local_lock) \
*(___ksymtab_gpl+lg_local_lock_cpu) \
*(___ksymtab_gpl+lg_local_unlock) \
*(___ksymtab_gpl+lg_local_unlock_cpu) \
*(___ksymtab_gpl+lg_lock_init) \
*(___ksymtab_gpl+linkwatch_fire_event) \
*(___ksymtab_gpl+list_lru_add) \
*(___ksymtab_gpl+list_lru_count_node) \
*(___ksymtab_gpl+list_lru_del) \
*(___ksymtab_gpl+list_lru_destroy) \
*(___ksymtab_gpl+list_lru_init) \
*(___ksymtab_gpl+list_lru_walk_node) \
*(___ksymtab_gpl+ll_rw_block) \
*(___ksymtab_gpl+llc_add_pack) \
*(___ksymtab_gpl+llc_build_and_send_ui_pkt) \
*(___ksymtab_gpl+llc_mac_hdr_init) \
*(___ksymtab_gpl+llc_remove_pack) \
*(___ksymtab_gpl+llc_sap_close) \
*(___ksymtab_gpl+llc_sap_find) \
*(___ksymtab_gpl+llc_sap_list) \
*(___ksymtab_gpl+llc_sap_list_lock) \
*(___ksymtab_gpl+llc_sap_open) \
*(___ksymtab_gpl+llc_set_station_handler) \
*(___ksymtab_gpl+llist_add_batch) \
*(___ksymtab_gpl+llist_del_first) \
*(___ksymtab_gpl+local_clock) \
*(___ksymtab_gpl+lock_may_read) \
*(___ksymtab_gpl+lock_may_write) \
*(___ksymtab_gpl+lock_rename) \
*(___ksymtab_gpl+lockref_put_or_lock) \
*(___ksymtab_gpl+locks_alloc_lock) \
*(___ksymtab_gpl+locks_copy_lock) \
*(___ksymtab_gpl+locks_free_lock) \
*(___ksymtab_gpl+locks_init_lock) \
*(___ksymtab_gpl+locks_mandatory_area) \
*(___ksymtab_gpl+locks_release_private) \
*(___ksymtab_gpl+locks_remove_posix) \
*(___ksymtab_gpl+loops_per_jiffy) \
*(___ksymtab_gpl+mach_mpc831x_rdb) \
*(___ksymtab_gpl+machine_check_exception) \
*(___ksymtab_gpl+machine_id) \
*(___ksymtab_gpl+machine_power_off) \
*(___ksymtab_gpl+macvlan_common_newlink) \
*(___ksymtab_gpl+macvlan_dellink) \
*(___ksymtab_gpl+macvlan_link_register) \
*(___ksymtab_gpl+macvlan_start_xmit) \
*(___ksymtab_gpl+mangle_path) \
*(___ksymtab_gpl+map_destroy) \
*(___ksymtab_gpl+map_vm_area) \
*(___ksymtab_gpl+mapping_tagged) \
*(___ksymtab_gpl+mark_buffer_async_write) \
*(___ksymtab_gpl+mark_buffer_dirty) \
*(___ksymtab_gpl+mark_buffer_dirty_inode) \
*(___ksymtab_gpl+mark_mounts_for_expiry) \
*(___ksymtab_gpl+mark_page_accessed) \
*(___ksymtab_gpl+match_hex) \
*(___ksymtab_gpl+max_mapnr) \
*(___ksymtab_gpl+may_umount) \
*(___ksymtab_gpl+may_umount_tree) \
*(___ksymtab_gpl+md5_transform) \
*(___ksymtab_gpl+mdio_bus_type) \
*(___ksymtab_gpl+mdiobus_alloc_size) \
*(___ksymtab_gpl+mdiobus_free) \
*(___ksymtab_gpl+mdiobus_read) \
*(___ksymtab_gpl+mdiobus_scan) \
*(___ksymtab_gpl+mdiobus_write) \
*(___ksymtab_gpl+memalloc_socks) \
*(___ksymtab_gpl+memory_read_from_buffer) \
*(___ksymtab_gpl+memparse) \
*(___ksymtab_gpl+mempool_kmalloc) \
*(___ksymtab_gpl+memscan) \
*(___ksymtab_gpl+memstart_addr) \
*(___ksymtab_gpl+memweight) \
*(___ksymtab_gpl+migrate_page) \
*(___ksymtab_gpl+mii_check_link) \
*(___ksymtab_gpl+mii_check_media) \
*(___ksymtab_gpl+mktime) \
*(___ksymtab_gpl+mm_kobj) \
*(___ksymtab_gpl+mmput) \
*(___ksymtab_gpl+mnt_clone_write) \
*(___ksymtab_gpl+mnt_drop_write) \
*(___ksymtab_gpl+mnt_drop_write_file) \
*(___ksymtab_gpl+mnt_pin) \
*(___ksymtab_gpl+mnt_set_expiry) \
*(___ksymtab_gpl+mnt_unpin) \
*(___ksymtab_gpl+mnt_want_write) \
*(___ksymtab_gpl+mnt_want_write_file) \
*(___ksymtab_gpl+mntget) \
*(___ksymtab_gpl+mntput) \
*(___ksymtab_gpl+mod_delayed_work_on) \
*(___ksymtab_gpl+module_mutex) \
*(___ksymtab_gpl+mol_trampoline) \
*(___ksymtab_gpl+monotonic_to_bootbased) \
*(___ksymtab_gpl+mount_bdev) \
*(___ksymtab_gpl+mount_nodev) \
*(___ksymtab_gpl+mount_ns) \
*(___ksymtab_gpl+mount_pseudo) \
*(___ksymtab_gpl+mount_subtree) \
*(___ksymtab_gpl+movable_zone) \
*(___ksymtab_gpl+mpage_readpage) \
*(___ksymtab_gpl+mpage_readpages) \
*(___ksymtab_gpl+mpage_writepage) \
*(___ksymtab_gpl+mpage_writepages) \
*(___ksymtab_gpl+mtd_add_partition) \
*(___ksymtab_gpl+mtd_blktrans_cease_background) \
*(___ksymtab_gpl+mtd_concat_create) \
*(___ksymtab_gpl+mtd_concat_destroy) \
*(___ksymtab_gpl+mtd_del_partition) \
*(___ksymtab_gpl+mtd_device_parse_register) \
*(___ksymtab_gpl+mtd_do_chip_probe) \
*(___ksymtab_gpl+mtd_get_fact_prot_info) \
*(___ksymtab_gpl+mtd_get_unmapped_area) \
*(___ksymtab_gpl+mtd_get_user_prot_info) \
*(___ksymtab_gpl+mtd_is_locked) \
*(___ksymtab_gpl+mtd_is_partition) \
*(___ksymtab_gpl+mtd_lock) \
*(___ksymtab_gpl+mtd_lock_user_prot_reg) \
*(___ksymtab_gpl+mtd_table_mutex) \
*(___ksymtab_gpl+mtd_unlock) \
*(___ksymtab_gpl+n_tty_inherit_ops) \
*(___ksymtab_gpl+names_cachep) \
*(___ksymtab_gpl+nand_calculate_ecc) \
*(___ksymtab_gpl+nand_correct_data) \
*(___ksymtab_gpl+nand_default_bbt) \
*(___ksymtab_gpl+nand_flash_ids) \
*(___ksymtab_gpl+nand_lock) \
*(___ksymtab_gpl+nand_manuf_ids) \
*(___ksymtab_gpl+nand_release) \
*(___ksymtab_gpl+nand_scan) \
*(___ksymtab_gpl+nand_scan_bbt) \
*(___ksymtab_gpl+nand_scan_ident) \
*(___ksymtab_gpl+nand_scan_tail) \
*(___ksymtab_gpl+nand_unlock) \
*(___ksymtab_gpl+nand_wait_ready) \
*(___ksymtab_gpl+napi_by_id) \
*(___ksymtab_gpl+napi_get_frags) \
*(___ksymtab_gpl+napi_gro_flush) \
*(___ksymtab_gpl+napi_gro_frags) \
*(___ksymtab_gpl+napi_hash_add) \
*(___ksymtab_gpl+napi_hash_del) \
*(___ksymtab_gpl+ndo_dflt_bridge_getlink) \
*(___ksymtab_gpl+ndo_dflt_fdb_add) \
*(___ksymtab_gpl+ndo_dflt_fdb_del) \
*(___ksymtab_gpl+ndo_dflt_fdb_dump) \
*(___ksymtab_gpl+need_conntrack) \
*(___ksymtab_gpl+need_ipv4_conntrack) \
*(___ksymtab_gpl+neigh_compat_output) \
*(___ksymtab_gpl+neigh_event_ns) \
*(___ksymtab_gpl+neigh_for_each) \
*(___ksymtab_gpl+neigh_seq_next) \
*(___ksymtab_gpl+neigh_seq_start) \
*(___ksymtab_gpl+neigh_seq_stop) \
*(___ksymtab_gpl+net_disable_timestamp) \
*(___ksymtab_gpl+net_enable_timestamp) \
*(___ksymtab_gpl+net_namespace_list) \
*(___ksymtab_gpl+netdev_alert) \
*(___ksymtab_gpl+netdev_alloc_frag) \
*(___ksymtab_gpl+netdev_crit) \
*(___ksymtab_gpl+netdev_emerg) \
*(___ksymtab_gpl+netdev_features_change) \
*(___ksymtab_gpl+netdev_notify_peers) \
*(___ksymtab_gpl+netdev_refcnt_read) \
*(___ksymtab_gpl+netdev_rx_csum_fault) \
*(___ksymtab_gpl+netdev_stats_to_stats64) \
*(___ksymtab_gpl+netif_set_real_num_tx_queues) \
*(___ksymtab_gpl+netif_skb_features) \
*(___ksymtab_gpl+netif_stacked_transfer_operstate) \
*(___ksymtab_gpl+netlink_ack) \
*(___ksymtab_gpl+netlink_add_tap) \
*(___ksymtab_gpl+netlink_alloc_skb) \
*(___ksymtab_gpl+netlink_has_listeners) \
*(___ksymtab_gpl+netlink_rcv_skb) \
*(___ksymtab_gpl+netlink_remove_tap) \
*(___ksymtab_gpl+netlink_set_err) \
*(___ksymtab_gpl+nf_conntrack_alloc) \
*(___ksymtab_gpl+nf_conntrack_alter_reply) \
*(___ksymtab_gpl+nf_conntrack_broadcast_help) \
*(___ksymtab_gpl+nf_conntrack_flush) \
*(___ksymtab_gpl+nf_conntrack_flush_report) \
*(___ksymtab_gpl+nf_conntrack_free) \
*(___ksymtab_gpl+nf_conntrack_hash_check_insert) \
*(___ksymtab_gpl+nf_conntrack_hash_rnd) \
*(___ksymtab_gpl+nf_conntrack_htable_size) \
*(___ksymtab_gpl+nf_conntrack_in) \
*(___ksymtab_gpl+nf_conntrack_l3proto_generic) \
*(___ksymtab_gpl+nf_conntrack_l4proto_tcp4) \
*(___ksymtab_gpl+nf_conntrack_l4proto_tcp6) \
*(___ksymtab_gpl+nf_conntrack_l4proto_udp4) \
*(___ksymtab_gpl+nf_conntrack_l4proto_udp6) \
*(___ksymtab_gpl+nf_conntrack_lock) \
*(___ksymtab_gpl+nf_conntrack_max) \
*(___ksymtab_gpl+nf_conntrack_set_hashsize) \
*(___ksymtab_gpl+nf_ct_alloc_hashtable) \
*(___ksymtab_gpl+nf_ct_delete) \
*(___ksymtab_gpl+nf_ct_deliver_cached_events) \
*(___ksymtab_gpl+nf_ct_destroy) \
*(___ksymtab_gpl+nf_ct_expect_hsize) \
*(___ksymtab_gpl+nf_ct_expect_register_notifier) \
*(___ksymtab_gpl+nf_ct_expect_unregister_notifier) \
*(___ksymtab_gpl+nf_ct_extend_register) \
*(___ksymtab_gpl+nf_ct_extend_unregister) \
*(___ksymtab_gpl+nf_ct_free_hashtable) \
*(___ksymtab_gpl+nf_ct_helper_expectfn_find_by_name) \
*(___ksymtab_gpl+nf_ct_helper_expectfn_find_by_symbol) \
*(___ksymtab_gpl+nf_ct_helper_ext_add) \
*(___ksymtab_gpl+nf_ct_helper_hash) \
*(___ksymtab_gpl+nf_ct_helper_hsize) \
*(___ksymtab_gpl+nf_ct_l3proto_find_get) \
*(___ksymtab_gpl+nf_ct_l3proto_pernet_register) \
*(___ksymtab_gpl+nf_ct_l3proto_pernet_unregister) \
*(___ksymtab_gpl+nf_ct_l3proto_put) \
*(___ksymtab_gpl+nf_ct_l3protos) \
*(___ksymtab_gpl+nf_ct_l4proto_find_get) \
*(___ksymtab_gpl+nf_ct_l4proto_put) \
*(___ksymtab_gpl+nf_ct_seq_adjust) \
*(___ksymtab_gpl+nf_ct_seq_offset) \
*(___ksymtab_gpl+nf_ct_seqadj_init) \
*(___ksymtab_gpl+nf_ct_seqadj_set) \
*(___ksymtab_gpl+nf_ct_tcp_seqadj_set) \
*(___ksymtab_gpl+nf_ct_unlink_expect_report) \
*(___ksymtab_gpl+nf_ct_untracked_status_or) \
*(___ksymtab_gpl+nf_defrag_ipv4_enable) \
*(___ksymtab_gpl+nf_hooks) \
*(___ksymtab_gpl+nf_ip_checksum) \
*(___ksymtab_gpl+nf_log_bind_pf) \
*(___ksymtab_gpl+nf_log_unbind_pf) \
*(___ksymtab_gpl+nf_nat_decode_session_hook) \
*(___ksymtab_gpl+nf_nat_ftp_hook) \
*(___ksymtab_gpl+nf_nat_icmp_reply_translation) \
*(___ksymtab_gpl+nf_nat_irc_hook) \
*(___ksymtab_gpl+nf_nat_packet) \
*(___ksymtab_gpl+nf_nat_rtsp_hook) \
*(___ksymtab_gpl+nf_nat_rtsp_hook_expectfn) \
*(___ksymtab_gpl+nf_nat_sdp_addr_hook) \
*(___ksymtab_gpl+nf_nat_sdp_media_hook) \
*(___ksymtab_gpl+nf_nat_sdp_port_hook) \
*(___ksymtab_gpl+nf_nat_sdp_session_hook) \
*(___ksymtab_gpl+nf_nat_seq_adjust_hook) \
*(___ksymtab_gpl+nf_nat_sip_expect_hook) \
*(___ksymtab_gpl+nf_nat_sip_hook) \
*(___ksymtab_gpl+nf_nat_sip_seq_adjust_hook) \
*(___ksymtab_gpl+nf_nat_snmp_hook) \
*(___ksymtab_gpl+nf_nat_tftp_hook) \
*(___ksymtab_gpl+nf_queue_entry_get_refs) \
*(___ksymtab_gpl+nf_queue_entry_release_refs) \
*(___ksymtab_gpl+nf_register_hook) \
*(___ksymtab_gpl+nf_register_queue_handler) \
*(___ksymtab_gpl+nf_register_queue_imq_handler) \
*(___ksymtab_gpl+nf_reinject) \
*(___ksymtab_gpl+nf_unregister_hook) \
*(___ksymtab_gpl+nf_unregister_queue_handler) \
*(___ksymtab_gpl+nf_unregister_queue_imq_handler) \
*(___ksymtab_gpl+nf_xfrm_me_harder) \
*(___ksymtab_gpl+nfnetlink_alloc_skb) \
*(___ksymtab_gpl+nfnetlink_has_listeners) \
*(___ksymtab_gpl+nfnetlink_send) \
*(___ksymtab_gpl+nfnetlink_set_err) \
*(___ksymtab_gpl+nfnetlink_subsys_register) \
*(___ksymtab_gpl+nfnetlink_subsys_unregister) \
*(___ksymtab_gpl+nfnl_lock) \
*(___ksymtab_gpl+nfnl_unlock) \
*(___ksymtab_gpl+nfq_ct_hook) \
*(___ksymtab_gpl+nfq_ct_nat_hook) \
*(___ksymtab_gpl+nfulnl_log_packet) \
*(___ksymtab_gpl+nl_table) \
*(___ksymtab_gpl+nl_table_lock) \
*(___ksymtab_gpl+nla_append) \
*(___ksymtab_gpl+nla_policy_len) \
*(___ksymtab_gpl+nla_validate) \
*(___ksymtab_gpl+nlmsg_notify) \
*(___ksymtab_gpl+no_pci_devices) \
*(___ksymtab_gpl+nobh_truncate_page) \
*(___ksymtab_gpl+nobh_write_begin) \
*(___ksymtab_gpl+nobh_write_end) \
*(___ksymtab_gpl+nobh_writepage) \
*(___ksymtab_gpl+node_states) \
*(___ksymtab_gpl+noop_fsync) \
*(___ksymtab_gpl+notify_change) \
*(___ksymtab_gpl+nr_free_buffer_pages) \
*(___ksymtab_gpl+nr_irqs) \
*(___ksymtab_gpl+ns_to_timespec) \
*(___ksymtab_gpl+ns_to_timeval) \
*(___ksymtab_gpl+nvram_commit) \
*(___ksymtab_gpl+nvram_get) \
*(___ksymtab_gpl+nvram_get_size) \
*(___ksymtab_gpl+nvram_getall) \
*(___ksymtab_gpl+nvram_read_byte) \
*(___ksymtab_gpl+nvram_set) \
*(___ksymtab_gpl+nvram_sync) \
*(___ksymtab_gpl+nvram_unset) \
*(___ksymtab_gpl+nvram_write_byte) \
*(___ksymtab_gpl+of_alias_get_id) \
*(___ksymtab_gpl+of_allnodes) \
*(___ksymtab_gpl+of_can_translate_address) \
*(___ksymtab_gpl+of_count_phandle_with_args) \
*(___ksymtab_gpl+of_create_pci_dev) \
*(___ksymtab_gpl+of_dev_get) \
*(___ksymtab_gpl+of_dev_put) \
*(___ksymtab_gpl+of_device_alloc) \
*(___ksymtab_gpl+of_device_is_stdout_path) \
*(___ksymtab_gpl+of_dma_controller_free) \
*(___ksymtab_gpl+of_dma_controller_register) \
*(___ksymtab_gpl+of_dma_simple_xlate) \
*(___ksymtab_gpl+of_fdt_unflatten_tree) \
*(___ksymtab_gpl+of_find_all_nodes) \
*(___ksymtab_gpl+of_find_device_by_node) \
*(___ksymtab_gpl+of_find_i2c_adapter_by_node) \
*(___ksymtab_gpl+of_find_i2c_device_by_node) \
*(___ksymtab_gpl+of_find_matching_node_and_match) \
*(___ksymtab_gpl+of_find_node_by_name) \
*(___ksymtab_gpl+of_find_node_by_path) \
*(___ksymtab_gpl+of_find_node_by_phandle) \
*(___ksymtab_gpl+of_find_node_by_type) \
*(___ksymtab_gpl+of_find_node_with_property) \
*(___ksymtab_gpl+of_find_property) \
*(___ksymtab_gpl+of_get_address) \
*(___ksymtab_gpl+of_get_child_by_name) \
*(___ksymtab_gpl+of_get_cpu_node) \
*(___ksymtab_gpl+of_get_dma_window) \
*(___ksymtab_gpl+of_get_mac_address) \
*(___ksymtab_gpl+of_get_mac_address_mtd) \
*(___ksymtab_gpl+of_get_named_gpio_flags) \
*(___ksymtab_gpl+of_get_nand_bus_width) \
*(___ksymtab_gpl+of_get_nand_ecc_mode) \
*(___ksymtab_gpl+of_get_nand_on_flash_bbt) \
*(___ksymtab_gpl+of_get_next_available_child) \
*(___ksymtab_gpl+of_get_next_child) \
*(___ksymtab_gpl+of_get_next_parent) \
*(___ksymtab_gpl+of_get_parent) \
*(___ksymtab_gpl+of_get_pci_address) \
*(___ksymtab_gpl+of_get_phy_mode) \
*(___ksymtab_gpl+of_gpio_simple_xlate) \
*(___ksymtab_gpl+of_i8042_aux_irq) \
*(___ksymtab_gpl+of_i8042_kbd_irq) \
*(___ksymtab_gpl+of_irq_map_one) \
*(___ksymtab_gpl+of_irq_map_pci) \
*(___ksymtab_gpl+of_irq_map_raw) \
*(___ksymtab_gpl+of_irq_to_resource) \
*(___ksymtab_gpl+of_irq_to_resource_table) \
*(___ksymtab_gpl+of_machine_is_compatible) \
*(___ksymtab_gpl+of_match_node) \
*(___ksymtab_gpl+of_mdio_find_bus) \
*(___ksymtab_gpl+of_mm_gpiochip_add) \
*(___ksymtab_gpl+of_modalias_node) \
*(___ksymtab_gpl+of_n_addr_cells) \
*(___ksymtab_gpl+of_n_size_cells) \
*(___ksymtab_gpl+of_parse_phandle) \
*(___ksymtab_gpl+of_parse_phandle_with_args) \
*(___ksymtab_gpl+of_parse_phandle_with_fixed_args) \
*(___ksymtab_gpl+of_pci_address_to_resource) \
*(___ksymtab_gpl+of_pci_find_child_device) \
*(___ksymtab_gpl+of_pci_get_devfn) \
*(___ksymtab_gpl+of_pci_parse_bus_range) \
*(___ksymtab_gpl+of_pci_range_parser_init) \
*(___ksymtab_gpl+of_pci_range_parser_one) \
*(___ksymtab_gpl+of_phy_connect) \
*(___ksymtab_gpl+of_phy_connect_fixed_link) \
*(___ksymtab_gpl+of_phy_find_device) \
*(___ksymtab_gpl+of_platform_populate) \
*(___ksymtab_gpl+of_prop_next_string) \
*(___ksymtab_gpl+of_prop_next_u32) \
*(___ksymtab_gpl+of_property_count_strings) \
*(___ksymtab_gpl+of_property_match_string) \
*(___ksymtab_gpl+of_property_read_u16_array) \
*(___ksymtab_gpl+of_property_read_u32_array) \
*(___ksymtab_gpl+of_property_read_u32_index) \
*(___ksymtab_gpl+of_property_read_u64) \
*(___ksymtab_gpl+of_property_read_u8_array) \
*(___ksymtab_gpl+of_rescan_bus) \
*(___ksymtab_gpl+of_scan_bus) \
*(___ksymtab_gpl+of_scan_pci_bridge) \
*(___ksymtab_gpl+of_translate_address) \
*(___ksymtab_gpl+of_translate_dma_address) \
*(___ksymtab_gpl+of_usb_get_phy_mode) \
*(___ksymtab_gpl+on_each_cpu) \
*(___ksymtab_gpl+on_each_cpu_cond) \
*(___ksymtab_gpl+on_each_cpu_mask) \
*(___ksymtab_gpl+oops_in_progress) \
*(___ksymtab_gpl+open_exec) \
*(___ksymtab_gpl+orderly_poweroff) \
*(___ksymtab_gpl+out_of_line_wait_on_atomic_t) \
*(___ksymtab_gpl+override_creds) \
*(___ksymtab_gpl+page_cache_async_readahead) \
*(___ksymtab_gpl+page_cache_sync_readahead) \
*(___ksymtab_gpl+page_follow_link_light) \
*(___ksymtab_gpl+page_is_ram) \
*(___ksymtab_gpl+page_mkclean) \
*(___ksymtab_gpl+page_put_link) \
*(___ksymtab_gpl+page_readlink) \
*(___ksymtab_gpl+page_symlink) \
*(___ksymtab_gpl+page_symlink_inode_operations) \
*(___ksymtab_gpl+page_zero_new_buffers) \
*(___ksymtab_gpl+pagecache_write_begin) \
*(___ksymtab_gpl+pagecache_write_end) \
*(___ksymtab_gpl+par_io_config_pin) \
*(___ksymtab_gpl+par_io_data_set) \
*(___ksymtab_gpl+par_io_of_config) \
*(___ksymtab_gpl+param_get_bool) \
*(___ksymtab_gpl+param_get_byte) \
*(___ksymtab_gpl+param_get_charp) \
*(___ksymtab_gpl+param_get_int) \
*(___ksymtab_gpl+param_get_invbool) \
*(___ksymtab_gpl+param_get_long) \
*(___ksymtab_gpl+param_get_short) \
*(___ksymtab_gpl+param_get_string) \
*(___ksymtab_gpl+param_get_uint) \
*(___ksymtab_gpl+param_get_ulong) \
*(___ksymtab_gpl+param_get_ushort) \
*(___ksymtab_gpl+param_ops_bint) \
*(___ksymtab_gpl+param_ops_byte) \
*(___ksymtab_gpl+param_ops_invbool) \
*(___ksymtab_gpl+param_ops_long) \
*(___ksymtab_gpl+param_ops_short) \
*(___ksymtab_gpl+param_ops_ulong) \
*(___ksymtab_gpl+param_set_bint) \
*(___ksymtab_gpl+param_set_bool) \
*(___ksymtab_gpl+param_set_byte) \
*(___ksymtab_gpl+param_set_charp) \
*(___ksymtab_gpl+param_set_copystring) \
*(___ksymtab_gpl+param_set_int) \
*(___ksymtab_gpl+param_set_invbool) \
*(___ksymtab_gpl+param_set_long) \
*(___ksymtab_gpl+param_set_short) \
*(___ksymtab_gpl+param_set_uint) \
*(___ksymtab_gpl+param_set_ulong) \
*(___ksymtab_gpl+param_set_ushort) \
*(___ksymtab_gpl+part_round_stats) \
*(___ksymtab_gpl+path_get) \
*(___ksymtab_gpl+path_is_under) \
*(___ksymtab_gpl+path_put) \
*(___ksymtab_gpl+pci_add_dynid) \
*(___ksymtab_gpl+pci_add_new_bus) \
*(___ksymtab_gpl+pci_add_resource) \
*(___ksymtab_gpl+pci_add_resource_offset) \
*(___ksymtab_gpl+pci_address_to_pio) \
*(___ksymtab_gpl+pci_alloc_dev) \
*(___ksymtab_gpl+pci_assign_resource) \
*(___ksymtab_gpl+pci_assign_unassigned_bridge_resources) \
*(___ksymtab_gpl+pci_back_from_sleep) \
*(___ksymtab_gpl+pci_bus_add_device) \
*(___ksymtab_gpl+pci_bus_add_devices) \
*(___ksymtab_gpl+pci_bus_alloc_resource) \
*(___ksymtab_gpl+pci_bus_assign_resources) \
*(___ksymtab_gpl+pci_bus_find_capability) \
*(___ksymtab_gpl+pci_bus_get) \
*(___ksymtab_gpl+pci_bus_max_busnr) \
*(___ksymtab_gpl+pci_bus_put) \
*(___ksymtab_gpl+pci_bus_read_dev_vendor_id) \
*(___ksymtab_gpl+pci_bus_resource_n) \
*(___ksymtab_gpl+pci_bus_sem) \
*(___ksymtab_gpl+pci_bus_set_ops) \
*(___ksymtab_gpl+pci_bus_size_bridges) \
*(___ksymtab_gpl+pci_bus_type) \
*(___ksymtab_gpl+pci_bus_write_config_word) \
*(___ksymtab_gpl+pci_cfg_access_lock) \
*(___ksymtab_gpl+pci_cfg_access_trylock) \
*(___ksymtab_gpl+pci_cfg_access_unlock) \
*(___ksymtab_gpl+pci_check_and_mask_intx) \
*(___ksymtab_gpl+pci_check_and_unmask_intx) \
*(___ksymtab_gpl+pci_choose_state) \
*(___ksymtab_gpl+pci_claim_resource) \
*(___ksymtab_gpl+pci_clear_master) \
*(___ksymtab_gpl+pci_clear_mwi) \
*(___ksymtab_gpl+pci_create_slot) \
*(___ksymtab_gpl+pci_destroy_slot) \
*(___ksymtab_gpl+pci_dev_driver) \
*(___ksymtab_gpl+pci_dev_get) \
*(___ksymtab_gpl+pci_dev_present) \
*(___ksymtab_gpl+pci_device_from_OF_node) \
*(___ksymtab_gpl+pci_disable_ido) \
*(___ksymtab_gpl+pci_disable_ltr) \
*(___ksymtab_gpl+pci_disable_obff) \
*(___ksymtab_gpl+pci_disable_pcie_error_reporting) \
*(___ksymtab_gpl+pci_disable_rom) \
*(___ksymtab_gpl+pci_domain_nr) \
*(___ksymtab_gpl+pci_dram_offset) \
*(___ksymtab_gpl+pci_enable_ido) \
*(___ksymtab_gpl+pci_enable_ltr) \
*(___ksymtab_gpl+pci_enable_obff) \
*(___ksymtab_gpl+pci_enable_pcie_error_reporting) \
*(___ksymtab_gpl+pci_enable_rom) \
*(___ksymtab_gpl+pci_find_bus) \
*(___ksymtab_gpl+pci_find_ext_capability) \
*(___ksymtab_gpl+pci_find_ht_capability) \
*(___ksymtab_gpl+pci_find_next_bus) \
*(___ksymtab_gpl+pci_find_next_capability) \
*(___ksymtab_gpl+pci_find_next_ext_capability) \
*(___ksymtab_gpl+pci_find_next_ht_capability) \
*(___ksymtab_gpl+pci_find_parent_resource) \
*(___ksymtab_gpl+pci_free_resource_list) \
*(___ksymtab_gpl+pci_get_class) \
*(___ksymtab_gpl+pci_get_domain_bus_and_slot) \
*(___ksymtab_gpl+pci_get_subsys) \
*(___ksymtab_gpl+pci_intx) \
*(___ksymtab_gpl+pci_iomap) \
*(___ksymtab_gpl+pci_load_and_free_saved_state) \
*(___ksymtab_gpl+pci_load_saved_state) \
*(___ksymtab_gpl+pci_map_rom) \
*(___ksymtab_gpl+pci_msi_off) \
*(___ksymtab_gpl+pci_pci_problems) \
*(___ksymtab_gpl+pci_platform_rom) \
*(___ksymtab_gpl+pci_pme_active) \
*(___ksymtab_gpl+pci_power_names) \
*(___ksymtab_gpl+pci_prepare_to_sleep) \
*(___ksymtab_gpl+pci_probe_reset_bus) \
*(___ksymtab_gpl+pci_probe_reset_slot) \
*(___ksymtab_gpl+pci_read_vpd) \
*(___ksymtab_gpl+pci_reenable_device) \
*(___ksymtab_gpl+pci_release_region) \
*(___ksymtab_gpl+pci_release_regions) \
*(___ksymtab_gpl+pci_release_selected_regions) \
*(___ksymtab_gpl+pci_remove_bus) \
*(___ksymtab_gpl+pci_renumber_slot) \
*(___ksymtab_gpl+pci_request_region) \
*(___ksymtab_gpl+pci_request_region_exclusive) \
*(___ksymtab_gpl+pci_request_regions) \
*(___ksymtab_gpl+pci_request_regions_exclusive) \
*(___ksymtab_gpl+pci_request_selected_regions) \
*(___ksymtab_gpl+pci_request_selected_regions_exclusive) \
*(___ksymtab_gpl+pci_rescan_bus) \
*(___ksymtab_gpl+pci_reset_bridge_secondary_bus) \
*(___ksymtab_gpl+pci_reset_bus) \
*(___ksymtab_gpl+pci_reset_function) \
*(___ksymtab_gpl+pci_reset_slot) \
*(___ksymtab_gpl+pci_restore_state) \
*(___ksymtab_gpl+pci_root_buses) \
*(___ksymtab_gpl+pci_save_state) \
*(___ksymtab_gpl+pci_scan_bridge) \
*(___ksymtab_gpl+pci_scan_bus) \
*(___ksymtab_gpl+pci_scan_bus_parented) \
*(___ksymtab_gpl+pci_scan_child_bus) \
*(___ksymtab_gpl+pci_scan_root_bus) \
*(___ksymtab_gpl+pci_scan_single_device) \
*(___ksymtab_gpl+pci_scan_slot) \
*(___ksymtab_gpl+pci_select_bars) \
*(___ksymtab_gpl+pci_set_cacheline_size) \
*(___ksymtab_gpl+pci_set_dma_max_seg_size) \
*(___ksymtab_gpl+pci_set_dma_seg_boundary) \
*(___ksymtab_gpl+pci_set_ltr) \
*(___ksymtab_gpl+pci_set_pcie_reset_state) \
*(___ksymtab_gpl+pci_set_power_state) \
*(___ksymtab_gpl+pci_slots_kset) \
*(___ksymtab_gpl+pci_stop_and_remove_bus_device) \
*(___ksymtab_gpl+pci_store_saved_state) \
*(___ksymtab_gpl+pci_target_state) \
*(___ksymtab_gpl+pci_try_set_mwi) \
*(___ksymtab_gpl+pci_unmap_rom) \
*(___ksymtab_gpl+pci_user_read_config_byte) \
*(___ksymtab_gpl+pci_user_read_config_dword) \
*(___ksymtab_gpl+pci_user_read_config_word) \
*(___ksymtab_gpl+pci_user_write_config_byte) \
*(___ksymtab_gpl+pci_user_write_config_dword) \
*(___ksymtab_gpl+pci_user_write_config_word) \
*(___ksymtab_gpl+pci_vpd_find_info_keyword) \
*(___ksymtab_gpl+pci_vpd_find_tag) \
*(___ksymtab_gpl+pci_vpd_truncate) \
*(___ksymtab_gpl+pci_wait_for_pending_transaction) \
*(___ksymtab_gpl+pci_wake_from_d3) \
*(___ksymtab_gpl+pci_walk_bus) \
*(___ksymtab_gpl+pci_write_vpd) \
*(___ksymtab_gpl+pcibios_align_resource) \
*(___ksymtab_gpl+pcibios_bus_to_resource) \
*(___ksymtab_gpl+pcibios_finish_adding_to_bus) \
*(___ksymtab_gpl+pcibios_resource_to_bus) \
*(___ksymtab_gpl+pcie_bus_configure_settings) \
*(___ksymtab_gpl+pcie_capability_clear_and_set_dword) \
*(___ksymtab_gpl+pcie_capability_clear_and_set_word) \
*(___ksymtab_gpl+pcie_capability_read_dword) \
*(___ksymtab_gpl+pcie_capability_write_dword) \
*(___ksymtab_gpl+pcie_capability_write_word) \
*(___ksymtab_gpl+pcie_get_minimum_link) \
*(___ksymtab_gpl+pcie_get_readrq) \
*(___ksymtab_gpl+pcie_port_bus_type) \
*(___ksymtab_gpl+pcie_port_service_register) \
*(___ksymtab_gpl+pcie_port_service_unregister) \
*(___ksymtab_gpl+pcie_set_readrq) \
*(___ksymtab_gpl+pcim_iomap) \
*(___ksymtab_gpl+pcim_pin_device) \
*(___ksymtab_gpl+pcix_get_max_mmrbc) \
*(___ksymtab_gpl+pcix_get_mmrbc) \
*(___ksymtab_gpl+pcix_set_mmrbc) \
*(___ksymtab_gpl+pcpu_base_addr) \
*(___ksymtab_gpl+percpu_ida_alloc) \
*(___ksymtab_gpl+percpu_ida_destroy) \
*(___ksymtab_gpl+percpu_ida_free) \
*(___ksymtab_gpl+percpu_ida_init) \
*(___ksymtab_gpl+pfifo_qdisc_ops) \
*(___ksymtab_gpl+phy_attach) \
*(___ksymtab_gpl+phy_connect) \
*(___ksymtab_gpl+phy_connect_direct) \
*(___ksymtab_gpl+phy_detach) \
*(___ksymtab_gpl+phy_device_free) \
*(___ksymtab_gpl+phy_disconnect) \
*(___ksymtab_gpl+phy_drivers_register) \
*(___ksymtab_gpl+phy_drivers_unregister) \
*(___ksymtab_gpl+phy_ethtool_get_eee) \
*(___ksymtab_gpl+phy_ethtool_get_wol) \
*(___ksymtab_gpl+phy_ethtool_gset) \
*(___ksymtab_gpl+phy_ethtool_ioctl) \
*(___ksymtab_gpl+phy_ethtool_set_eee) \
*(___ksymtab_gpl+phy_ethtool_set_wol) \
*(___ksymtab_gpl+phy_ethtool_sset) \
*(___ksymtab_gpl+phy_find_first) \
*(___ksymtab_gpl+phy_get_eee_err) \
*(___ksymtab_gpl+phy_init_eee) \
*(___ksymtab_gpl+phy_mii_ioctl) \
*(___ksymtab_gpl+phy_print_status) \
*(___ksymtab_gpl+phy_start) \
*(___ksymtab_gpl+phy_start_aneg) \
*(___ksymtab_gpl+phy_stop) \
*(___ksymtab_gpl+phys_mem_access_prot) \
*(___ksymtab_gpl+pid_task) \
*(___ksymtab_gpl+pid_vnr) \
*(___ksymtab_gpl+ping_prot) \
*(___ksymtab_gpl+pipe_lock) \
*(___ksymtab_gpl+pipe_to_file) \
*(___ksymtab_gpl+pipe_unlock) \
*(___ksymtab_gpl+platform_add_devices) \
*(___ksymtab_gpl+platform_create_bundle) \
*(___ksymtab_gpl+platform_driver_probe) \
*(___ksymtab_gpl+pm_power_off) \
*(___ksymtab_gpl+pm_qos_add_request) \
*(___ksymtab_gpl+pm_qos_remove_request) \
*(___ksymtab_gpl+poll_freewait) \
*(___ksymtab_gpl+poll_initwait) \
*(___ksymtab_gpl+posix_clock_register) \
*(___ksymtab_gpl+posix_clock_unregister) \
*(___ksymtab_gpl+posix_timer_event) \
*(___ksymtab_gpl+posix_timers_register_clock) \
*(___ksymtab_gpl+powerpc_debugfs_root) \
*(___ksymtab_gpl+ppc_enable_pmcs) \
*(___ksymtab_gpl+ppc_md) \
*(___ksymtab_gpl+ppc_proc_freq) \
*(___ksymtab_gpl+ppc_tb_freq) \
*(___ksymtab_gpl+ppp_channel_index) \
*(___ksymtab_gpl+ppp_register_channel) \
*(___ksymtab_gpl+ppp_register_compressor) \
*(___ksymtab_gpl+ppp_unit_number) \
*(___ksymtab_gpl+ppp_unregister_channel) \
*(___ksymtab_gpl+ppp_unregister_compressor) \
*(___ksymtab_gpl+prandom_bytes) \
*(___ksymtab_gpl+prandom_bytes_state) \
*(___ksymtab_gpl+prepare_binprm) \
*(___ksymtab_gpl+prepare_creds) \
*(___ksymtab_gpl+prepare_kernel_cred) \
*(___ksymtab_gpl+probe_kernel_read) \
*(___ksymtab_gpl+probe_kernel_write) \
*(___ksymtab_gpl+proc_doulongvec_minmax) \
*(___ksymtab_gpl+proc_get_parent_data) \
*(___ksymtab_gpl+proc_set_size) \
*(___ksymtab_gpl+proc_set_user) \
*(___ksymtab_gpl+proc_symlink) \
*(___ksymtab_gpl+process_srcu) \
*(___ksymtab_gpl+program_check_exception) \
*(___ksymtab_gpl+psched_ratecfg_precompute) \
*(___ksymtab_gpl+put_io_context) \
*(___ksymtab_gpl+put_mtd_device) \
*(___ksymtab_gpl+put_unused_fd) \
*(___ksymtab_gpl+pvclock_gtod_register_notifier) \
*(___ksymtab_gpl+pvclock_gtod_unregister_notifier) \
*(___ksymtab_gpl+qdisc_class_hash_destroy) \
*(___ksymtab_gpl+qdisc_class_hash_grow) \
*(___ksymtab_gpl+qdisc_class_hash_init) \
*(___ksymtab_gpl+qdisc_class_hash_insert) \
*(___ksymtab_gpl+qdisc_class_hash_remove) \
*(___ksymtab_gpl+qdisc_create_dflt) \
*(___ksymtab_gpl+qdisc_destroy) \
*(___ksymtab_gpl+qdisc_get_rtab) \
*(___ksymtab_gpl+qdisc_list_del) \
*(___ksymtab_gpl+qdisc_put_rtab) \
*(___ksymtab_gpl+qdisc_put_stab) \
*(___ksymtab_gpl+qdisc_reset) \
*(___ksymtab_gpl+qdisc_warn_nonwc) \
*(___ksymtab_gpl+qdisc_watchdog_cancel) \
*(___ksymtab_gpl+qdisc_watchdog_init) \
*(___ksymtab_gpl+qe_clock_source) \
*(___ksymtab_gpl+qe_get_brg_clk) \
*(___ksymtab_gpl+qe_get_firmware_info) \
*(___ksymtab_gpl+qe_get_num_of_risc) \
*(___ksymtab_gpl+qe_get_num_of_snums) \
*(___ksymtab_gpl+qe_get_snum) \
*(___ksymtab_gpl+qe_immr) \
*(___ksymtab_gpl+qe_issue_cmd) \
*(___ksymtab_gpl+qe_pin_free) \
*(___ksymtab_gpl+qe_pin_request) \
*(___ksymtab_gpl+qe_pin_set_dedicated) \
*(___ksymtab_gpl+qe_pin_set_gpio) \
*(___ksymtab_gpl+qe_put_snum) \
*(___ksymtab_gpl+qe_setbrg) \
*(___ksymtab_gpl+queue_kthread_work) \
*(___ksymtab_gpl+radix_tree_delete) \
*(___ksymtab_gpl+radix_tree_insert) \
*(___ksymtab_gpl+radix_tree_maybe_preload) \
*(___ksymtab_gpl+radix_tree_next_chunk) \
*(___ksymtab_gpl+radix_tree_next_hole) \
*(___ksymtab_gpl+radix_tree_preload) \
*(___ksymtab_gpl+radix_tree_prev_hole) \
*(___ksymtab_gpl+radix_tree_range_tag_if_tagged) \
*(___ksymtab_gpl+radix_tree_tag_clear) \
*(___ksymtab_gpl+radix_tree_tag_get) \
*(___ksymtab_gpl+radix_tree_tag_set) \
*(___ksymtab_gpl+radix_tree_tagged) \
*(___ksymtab_gpl+raw_notifier_call_chain) \
*(___ksymtab_gpl+raw_notifier_chain_register) \
*(___ksymtab_gpl+raw_notifier_chain_unregister) \
*(___ksymtab_gpl+rcu_idle_enter) \
*(___ksymtab_gpl+rcu_idle_exit) \
*(___ksymtab_gpl+rcu_irq_enter) \
*(___ksymtab_gpl+rcu_irq_exit) \
*(___ksymtab_gpl+read_cache_page) \
*(___ksymtab_gpl+read_cache_page_gfp) \
*(___ksymtab_gpl+read_cache_pages) \
*(___ksymtab_gpl+read_code) \
*(___ksymtab_gpl+recalc_sigpending) \
*(___ksymtab_gpl+reciprocal_value) \
*(___ksymtab_gpl+ref_module) \
*(___ksymtab_gpl+refresh_mtd_partitions) \
*(___ksymtab_gpl+register_8022_client) \
*(___ksymtab_gpl+register_console) \
*(___ksymtab_gpl+register_die_notifier) \
*(___ksymtab_gpl+register_exec_domain) \
*(___ksymtab_gpl+register_gifconf) \
*(___ksymtab_gpl+register_inet6addr_notifier) \
*(___ksymtab_gpl+register_inetaddr_notifier) \
*(___ksymtab_gpl+register_module_notifier) \
*(___ksymtab_gpl+register_mtd_blktrans) \
*(___ksymtab_gpl+register_mtd_chip_driver) \
*(___ksymtab_gpl+register_mtd_parser) \
*(___ksymtab_gpl+register_mtd_user) \
*(___ksymtab_gpl+register_netevent_notifier) \
*(___ksymtab_gpl+register_nls) \
*(___ksymtab_gpl+register_oom_notifier) \
*(___ksymtab_gpl+register_reboot_notifier) \
*(___ksymtab_gpl+register_shrinker) \
*(___ksymtab_gpl+register_snap_client) \
*(___ksymtab_gpl+register_switch) \
*(___ksymtab_gpl+register_syscore_ops) \
*(___ksymtab_gpl+register_sysctl) \
*(___ksymtab_gpl+register_sysctl_paths) \
*(___ksymtab_gpl+register_tcf_proto_ops) \
*(___ksymtab_gpl+release_pages) \
*(___ksymtab_gpl+release_pmc_hardware) \
*(___ksymtab_gpl+release_resource) \
*(___ksymtab_gpl+remap_pfn_range) \
*(___ksymtab_gpl+remove_arg_zero) \
*(___ksymtab_gpl+remove_irq) \
*(___ksymtab_gpl+remove_proc_subtree) \
*(___ksymtab_gpl+replace_mount_options) \
*(___ksymtab_gpl+replace_page_cache_page) \
*(___ksymtab_gpl+request_any_context_irq) \
*(___ksymtab_gpl+request_dma) \
*(___ksymtab_gpl+request_firmware) \
*(___ksymtab_gpl+request_resource) \
*(___ksymtab_gpl+reserve_pmc_hardware) \
*(___ksymtab_gpl+reset_devices) \
*(___ksymtab_gpl+revert_creds) \
*(___ksymtab_gpl+rh_alloc) \
*(___ksymtab_gpl+rh_alloc_align) \
*(___ksymtab_gpl+rh_alloc_fixed) \
*(___ksymtab_gpl+rh_attach_region) \
*(___ksymtab_gpl+rh_create) \
*(___ksymtab_gpl+rh_destroy) \
*(___ksymtab_gpl+rh_detach_region) \
*(___ksymtab_gpl+rh_dump) \
*(___ksymtab_gpl+rh_dump_blk) \
*(___ksymtab_gpl+rh_free) \
*(___ksymtab_gpl+rh_get_stats) \
*(___ksymtab_gpl+rh_init) \
*(___ksymtab_gpl+rh_set_owner) \
*(___ksymtab_gpl+rt_mutex_destroy) \
*(___ksymtab_gpl+rt_mutex_timed_lock) \
*(___ksymtab_gpl+rtc_lock) \
*(___ksymtab_gpl+rtnl_configure_link) \
*(___ksymtab_gpl+rtnl_create_link) \
*(___ksymtab_gpl+rtnl_link_get_net) \
*(___ksymtab_gpl+rtnl_unregister) \
*(___ksymtab_gpl+rwsem_wake) \
*(___ksymtab_gpl+save_mount_options) \
*(___ksymtab_gpl+sb_min_blocksize) \
*(___ksymtab_gpl+sb_set_blocksize) \
*(___ksymtab_gpl+scatterwalk_bytes_sglen) \
*(___ksymtab_gpl+scatterwalk_copychunks) \
*(___ksymtab_gpl+scatterwalk_done) \
*(___ksymtab_gpl+scatterwalk_map) \
*(___ksymtab_gpl+scatterwalk_map_and_copy) \
*(___ksymtab_gpl+scatterwalk_start) \
*(___ksymtab_gpl+sched_clock) \
*(___ksymtab_gpl+scm_detach_fds) \
*(___ksymtab_gpl+scsi_cmd_ioctl) \
*(___ksymtab_gpl+search_binary_handler) \
*(___ksymtab_gpl+secure_ipv4_port_ephemeral) \
*(___ksymtab_gpl+secure_ipv6_port_ephemeral) \
*(___ksymtab_gpl+send_remote_softirq) \
*(___ksymtab_gpl+seq_bitmap) \
*(___ksymtab_gpl+seq_bitmap_list) \
*(___ksymtab_gpl+seq_escape) \
*(___ksymtab_gpl+seq_hlist_next) \
*(___ksymtab_gpl+seq_hlist_next_percpu) \
*(___ksymtab_gpl+seq_hlist_next_rcu) \
*(___ksymtab_gpl+seq_hlist_start) \
*(___ksymtab_gpl+seq_hlist_start_head) \
*(___ksymtab_gpl+seq_hlist_start_head_rcu) \
*(___ksymtab_gpl+seq_hlist_start_percpu) \
*(___ksymtab_gpl+seq_hlist_start_rcu) \
*(___ksymtab_gpl+seq_list_next) \
*(___ksymtab_gpl+seq_list_start) \
*(___ksymtab_gpl+seq_list_start_head) \
*(___ksymtab_gpl+seq_path) \
*(___ksymtab_gpl+seq_print_acct) \
*(___ksymtab_gpl+seq_put_decimal_ll) \
*(___ksymtab_gpl+seq_put_decimal_ull) \
*(___ksymtab_gpl+seq_vprintf) \
*(___ksymtab_gpl+seq_write) \
*(___ksymtab_gpl+serial8250_clear_and_reinit_fifos) \
*(___ksymtab_gpl+serial8250_do_pm) \
*(___ksymtab_gpl+serial8250_do_set_termios) \
*(___ksymtab_gpl+serial8250_handle_irq) \
*(___ksymtab_gpl+serial8250_modem_status) \
*(___ksymtab_gpl+serial8250_register_8250_port) \
*(___ksymtab_gpl+serial8250_resume_port) \
*(___ksymtab_gpl+serial8250_rx_chars) \
*(___ksymtab_gpl+serial8250_set_isa_configurator) \
*(___ksymtab_gpl+serial8250_suspend_port) \
*(___ksymtab_gpl+serial8250_tx_chars) \
*(___ksymtab_gpl+serial8250_unregister_port) \
*(___ksymtab_gpl+serio_close) \
*(___ksymtab_gpl+serio_open) \
*(___ksymtab_gpl+serio_reconnect) \
*(___ksymtab_gpl+serio_rescan) \
*(___ksymtab_gpl+serio_unregister_child_port) \
*(___ksymtab_gpl+serio_unregister_driver) \
*(___ksymtab_gpl+serio_unregister_port) \
*(___ksymtab_gpl+set_bdi_congested) \
*(___ksymtab_gpl+set_bh_page) \
*(___ksymtab_gpl+set_binfmt) \
*(___ksymtab_gpl+set_blocksize) \
*(___ksymtab_gpl+set_create_files_as) \
*(___ksymtab_gpl+set_device_ro) \
*(___ksymtab_gpl+set_normalized_timespec) \
*(___ksymtab_gpl+set_security_override) \
*(___ksymtab_gpl+set_security_override_from_ctx) \
*(___ksymtab_gpl+set_task_ioprio) \
*(___ksymtab_gpl+set_timer_slack) \
*(___ksymtab_gpl+sg_alloc_table) \
*(___ksymtab_gpl+sg_alloc_table_from_pages) \
*(___ksymtab_gpl+sg_copy_from_buffer) \
*(___ksymtab_gpl+sg_free_table) \
*(___ksymtab_gpl+sg_miter_next) \
*(___ksymtab_gpl+sg_miter_start) \
*(___ksymtab_gpl+sg_miter_stop) \
*(___ksymtab_gpl+sg_nents) \
*(___ksymtab_gpl+sg_pcopy_from_buffer) \
*(___ksymtab_gpl+shash_ahash_digest) \
*(___ksymtab_gpl+shash_attr_alg) \
*(___ksymtab_gpl+shmem_read_mapping_page_gfp) \
*(___ksymtab_gpl+shmem_set_file) \
*(___ksymtab_gpl+shmem_truncate_range) \
*(___ksymtab_gpl+should_remove_suid) \
*(___ksymtab_gpl+show_class_attr_string) \
*(___ksymtab_gpl+shrink_dcache_parent) \
*(___ksymtab_gpl+shrink_dcache_sb) \
*(___ksymtab_gpl+si_meminfo) \
*(___ksymtab_gpl+sigprocmask) \
*(___ksymtab_gpl+simple_attr_open) \
*(___ksymtab_gpl+simple_attr_read) \
*(___ksymtab_gpl+simple_attr_release) \
*(___ksymtab_gpl+simple_attr_write) \
*(___ksymtab_gpl+simple_empty) \
*(___ksymtab_gpl+simple_getattr) \
*(___ksymtab_gpl+simple_link) \
*(___ksymtab_gpl+simple_readpage) \
*(___ksymtab_gpl+simple_rename) \
*(___ksymtab_gpl+simple_rmdir) \
*(___ksymtab_gpl+simple_setattr) \
*(___ksymtab_gpl+simple_strtol) \
*(___ksymtab_gpl+simple_strtoll) \
*(___ksymtab_gpl+simple_transaction_get) \
*(___ksymtab_gpl+simple_transaction_read) \
*(___ksymtab_gpl+simple_transaction_release) \
*(___ksymtab_gpl+simple_transaction_set) \
*(___ksymtab_gpl+simple_unlink) \
*(___ksymtab_gpl+simple_write_begin) \
*(___ksymtab_gpl+simple_write_end) \
*(___ksymtab_gpl+simple_write_to_buffer) \
*(___ksymtab_gpl+single_step_exception) \
*(___ksymtab_gpl+sk_attach_filter) \
*(___ksymtab_gpl+sk_chk_filter) \
*(___ksymtab_gpl+sk_clear_memalloc) \
*(___ksymtab_gpl+sk_clone_lock) \
*(___ksymtab_gpl+sk_detach_filter) \
*(___ksymtab_gpl+sk_reset_timer) \
*(___ksymtab_gpl+sk_reset_txq) \
*(___ksymtab_gpl+sk_run_filter) \
*(___ksymtab_gpl+sk_set_memalloc) \
*(___ksymtab_gpl+sk_stop_timer) \
*(___ksymtab_gpl+sk_stream_error) \
*(___ksymtab_gpl+sk_stream_kill_queues) \
*(___ksymtab_gpl+sk_stream_wait_close) \
*(___ksymtab_gpl+sk_stream_wait_connect) \
*(___ksymtab_gpl+sk_stream_wait_memory) \
*(___ksymtab_gpl+sk_stream_write_space) \
*(___ksymtab_gpl+sk_unattached_filter_create) \
*(___ksymtab_gpl+sk_unattached_filter_destroy) \
*(___ksymtab_gpl+sk_wait_data) \
*(___ksymtab_gpl+skb_add_rx_frag) \
*(___ksymtab_gpl+skb_append) \
*(___ksymtab_gpl+skb_cow_data) \
*(___ksymtab_gpl+skb_find_text) \
*(___ksymtab_gpl+skb_gro_receive) \
*(___ksymtab_gpl+skb_insert) \
*(___ksymtab_gpl+skb_mac_gso_segment) \
*(___ksymtab_gpl+skb_orphan_partial) \
*(___ksymtab_gpl+skb_pad) \
*(___ksymtab_gpl+skb_partial_csum_set) \
*(___ksymtab_gpl+skb_queue_head) \
*(___ksymtab_gpl+skb_restore_cb) \
*(___ksymtab_gpl+skb_save_cb) \
*(___ksymtab_gpl+skb_segment) \
*(___ksymtab_gpl+skb_split) \
*(___ksymtab_gpl+skb_to_sgvec) \
*(___ksymtab_gpl+skb_tx_error) \
*(___ksymtab_gpl+skb_unlink) \
*(___ksymtab_gpl+skcipher_geniv_alloc) \
*(___ksymtab_gpl+skcipher_geniv_exit) \
*(___ksymtab_gpl+skcipher_geniv_free) \
*(___ksymtab_gpl+skcipher_geniv_init) \
*(___ksymtab_gpl+skip_spaces) \
*(___ksymtab_gpl+sleep_on) \
*(___ksymtab_gpl+sleep_on_timeout) \
*(___ksymtab_gpl+slhc_compress) \
*(___ksymtab_gpl+slhc_free) \
*(___ksymtab_gpl+slhc_init) \
*(___ksymtab_gpl+slhc_remember) \
*(___ksymtab_gpl+slhc_toss) \
*(___ksymtab_gpl+slhc_uncompress) \
*(___ksymtab_gpl+smp_call_function_single) \
*(___ksymtab_gpl+smpboot_register_percpu_thread) \
*(___ksymtab_gpl+smpboot_unregister_percpu_thread) \
*(___ksymtab_gpl+sock_alloc_file) \
*(___ksymtab_gpl+sock_alloc_send_pskb) \
*(___ksymtab_gpl+sock_create) \
*(___ksymtab_gpl+sock_create_lite) \
*(___ksymtab_gpl+sock_from_file) \
*(___ksymtab_gpl+sock_no_connect) \
*(___ksymtab_gpl+sock_no_getname) \
*(___ksymtab_gpl+sock_no_getsockopt) \
*(___ksymtab_gpl+sock_no_ioctl) \
*(___ksymtab_gpl+sock_no_poll) \
*(___ksymtab_gpl+sock_no_recvmsg) \
*(___ksymtab_gpl+sock_no_sendmsg) \
*(___ksymtab_gpl+sock_no_setsockopt) \
*(___ksymtab_gpl+sock_recv_errqueue) \
*(___ksymtab_gpl+sock_recvmsg) \
*(___ksymtab_gpl+sock_sendmsg) \
*(___ksymtab_gpl+sock_setsockopt) \
*(___ksymtab_gpl+sock_wake_async) \
*(___ksymtab_gpl+softirq_work_list) \
*(___ksymtab_gpl+softnet_data) \
*(___ksymtab_gpl+spi_add_device) \
*(___ksymtab_gpl+spi_alloc_device) \
*(___ksymtab_gpl+spi_alloc_master) \
*(___ksymtab_gpl+spi_async) \
*(___ksymtab_gpl+spi_async_locked) \
*(___ksymtab_gpl+spi_bitbang_start) \
*(___ksymtab_gpl+spi_bitbang_stop) \
*(___ksymtab_gpl+spi_bus_lock) \
*(___ksymtab_gpl+spi_bus_type) \
*(___ksymtab_gpl+spi_bus_unlock) \
*(___ksymtab_gpl+spi_busnum_to_master) \
*(___ksymtab_gpl+spi_finalize_current_message) \
*(___ksymtab_gpl+spi_get_next_queued_message) \
*(___ksymtab_gpl+spi_master_resume) \
*(___ksymtab_gpl+spi_master_suspend) \
*(___ksymtab_gpl+spi_new_device) \
*(___ksymtab_gpl+spi_register_driver) \
*(___ksymtab_gpl+spi_register_master) \
*(___ksymtab_gpl+spi_sync) \
*(___ksymtab_gpl+spi_sync_locked) \
*(___ksymtab_gpl+spi_unregister_master) \
*(___ksymtab_gpl+spi_write_then_read) \
*(___ksymtab_gpl+splice_direct_to_actor) \
*(___ksymtab_gpl+splice_from_pipe_begin) \
*(___ksymtab_gpl+splice_from_pipe_end) \
*(___ksymtab_gpl+splice_from_pipe_feed) \
*(___ksymtab_gpl+splice_from_pipe_next) \
*(___ksymtab_gpl+split_page) \
*(___ksymtab_gpl+sprint_symbol) \
*(___ksymtab_gpl+sprint_symbol_no_offset) \
*(___ksymtab_gpl+srcu_barrier) \
*(___ksymtab_gpl+srcu_init_notifier_head) \
*(___ksymtab_gpl+srcu_notifier_call_chain) \
*(___ksymtab_gpl+srcu_notifier_chain_register) \
*(___ksymtab_gpl+srcu_notifier_chain_unregister) \
*(___ksymtab_gpl+start_thread) \
*(___ksymtab_gpl+start_tty) \
*(___ksymtab_gpl+static_key_slow_dec) \
*(___ksymtab_gpl+static_key_slow_dec_deferred) \
*(___ksymtab_gpl+stop_tty) \
*(___ksymtab_gpl+strim) \
*(___ksymtab_gpl+string_unescape) \
*(___ksymtab_gpl+strlcat) \
*(___ksymtab_gpl+strncasecmp) \
*(___ksymtab_gpl+strnchr) \
*(___ksymtab_gpl+strnstr) \
*(___ksymtab_gpl+strstr) \
*(___ksymtab_gpl+strtobool) \
*(___ksymtab_gpl+submit_bh) \
*(___ksymtab_gpl+submit_bio) \
*(___ksymtab_gpl+submit_bio_wait) \
*(___ksymtab_gpl+subsys_dev_iter_exit) \
*(___ksymtab_gpl+subsys_dev_iter_init) \
*(___ksymtab_gpl+subsys_dev_iter_next) \
*(___ksymtab_gpl+subsys_find_device_by_id) \
*(___ksymtab_gpl+subsys_interface_register) \
*(___ksymtab_gpl+subsys_interface_unregister) \
*(___ksymtab_gpl+subsys_system_register) \
*(___ksymtab_gpl+subsys_virtual_register) \
*(___ksymtab_gpl+switch_mmu_context) \
*(___ksymtab_gpl+symbol_put_addr) \
*(___ksymtab_gpl+sync_blockdev) \
*(___ksymtab_gpl+sync_dirty_buffer) \
*(___ksymtab_gpl+sync_filesystem) \
*(___ksymtab_gpl+sync_inode) \
*(___ksymtab_gpl+sync_inode_metadata) \
*(___ksymtab_gpl+sync_inodes_sb) \
*(___ksymtab_gpl+sync_mapping_buffers) \
*(___ksymtab_gpl+synchronize_srcu) \
*(___ksymtab_gpl+synchronize_srcu_expedited) \
*(___ksymtab_gpl+sys_close) \
*(___ksymtab_gpl+sys_sigreturn) \
*(___ksymtab_gpl+sys_tz) \
*(___ksymtab_gpl+sysctl_local_reserved_ports) \
*(___ksymtab_gpl+sysctl_rmem_max) \
*(___ksymtab_gpl+sysctl_tcp_dma_copybreak) \
*(___ksymtab_gpl+sysctl_tcp_low_latency) \
*(___ksymtab_gpl+sysctl_tcp_reordering) \
*(___ksymtab_gpl+sysctl_vfs_cache_pressure) \
*(___ksymtab_gpl+sysctl_wmem_max) \
*(___ksymtab_gpl+sysfs_chmod_file) \
*(___ksymtab_gpl+sysfs_create_bin_file) \
*(___ksymtab_gpl+sysfs_create_file) \
*(___ksymtab_gpl+sysfs_create_files) \
*(___ksymtab_gpl+sysfs_format_mac) \
*(___ksymtab_gpl+sysfs_get) \
*(___ksymtab_gpl+sysfs_get_dirent) \
*(___ksymtab_gpl+sysfs_notify) \
*(___ksymtab_gpl+sysfs_notify_dirent) \
*(___ksymtab_gpl+sysfs_put) \
*(___ksymtab_gpl+sysfs_remove_bin_file) \
*(___ksymtab_gpl+sysfs_remove_file) \
*(___ksymtab_gpl+sysfs_remove_files) \
*(___ksymtab_gpl+sysfs_rename_link) \
*(___ksymtab_gpl+system_freezable_power_efficient_wq) \
*(___ksymtab_gpl+system_highpri_wq) \
*(___ksymtab_gpl+system_power_efficient_wq) \
*(___ksymtab_gpl+system_unbound_wq) \
*(___ksymtab_gpl+tag_pages_for_writeback) \
*(___ksymtab_gpl+task_current_syscall) \
*(___ksymtab_gpl+task_nice) \
*(___ksymtab_gpl+task_tgid_nr_ns) \
*(___ksymtab_gpl+task_user_regset_view) \
*(___ksymtab_gpl+tb_ticks_per_jiffy) \
*(___ksymtab_gpl+tb_ticks_per_sec) \
*(___ksymtab_gpl+tcf_action_dump_1) \
*(___ksymtab_gpl+tcf_action_exec) \
*(___ksymtab_gpl+tcf_exts_change) \
*(___ksymtab_gpl+tcf_exts_destroy) \
*(___ksymtab_gpl+tcf_exts_dump) \
*(___ksymtab_gpl+tcf_exts_dump_stats) \
*(___ksymtab_gpl+tcf_exts_validate) \
*(___ksymtab_gpl+tcf_generic_walker) \
*(___ksymtab_gpl+tcf_hash_check) \
*(___ksymtab_gpl+tcf_hash_create) \
*(___ksymtab_gpl+tcf_hash_destroy) \
*(___ksymtab_gpl+tcf_hash_insert) \
*(___ksymtab_gpl+tcf_hash_new_index) \
*(___ksymtab_gpl+tcf_hash_release) \
*(___ksymtab_gpl+tcf_hash_search) \
*(___ksymtab_gpl+tcf_register_action) \
*(___ksymtab_gpl+tcf_unregister_action) \
*(___ksymtab_gpl+tcp_cong_avoid_ai) \
*(___ksymtab_gpl+tcp_get_info) \
*(___ksymtab_gpl+tcp_gro_receive) \
*(___ksymtab_gpl+tcp_init_congestion_ops) \
*(___ksymtab_gpl+tcp_init_xmit_timers) \
*(___ksymtab_gpl+tcp_is_cwnd_limited) \
*(___ksymtab_gpl+tcp_read_sock) \
*(___ksymtab_gpl+tcp_register_congestion_control) \
*(___ksymtab_gpl+tcp_reno_cong_avoid) \
*(___ksymtab_gpl+tcp_reno_min_cwnd) \
*(___ksymtab_gpl+tcp_reno_ssthresh) \
*(___ksymtab_gpl+tcp_slow_start) \
*(___ksymtab_gpl+tcp_tso_segment) \
*(___ksymtab_gpl+tcp_unregister_congestion_control) \
*(___ksymtab_gpl+tcp_vegas_cwnd_event) \
*(___ksymtab_gpl+tcp_vegas_get_info) \
*(___ksymtab_gpl+tcp_vegas_init) \
*(___ksymtab_gpl+tcp_vegas_pkts_acked) \
*(___ksymtab_gpl+tcp_vegas_state) \
*(___ksymtab_gpl+test_taint) \
*(___ksymtab_gpl+textsearch_destroy) \
*(___ksymtab_gpl+textsearch_find_continuous) \
*(___ksymtab_gpl+textsearch_prepare) \
*(___ksymtab_gpl+textsearch_register) \
*(___ksymtab_gpl+textsearch_unregister) \
*(___ksymtab_gpl+thaw_bdev) \
*(___ksymtab_gpl+thermal_generate_netlink_event) \
*(___ksymtab_gpl+thermal_notify_framework) \
*(___ksymtab_gpl+thermal_zone_bind_cooling_device) \
*(___ksymtab_gpl+thermal_zone_get_temp) \
*(___ksymtab_gpl+thermal_zone_get_zone_by_name) \
*(___ksymtab_gpl+thermal_zone_unbind_cooling_device) \
*(___ksymtab_gpl+tick_nohz_idle_enter) \
*(___ksymtab_gpl+tick_nohz_idle_exit) \
*(___ksymtab_gpl+timecounter_cyc2time) \
*(___ksymtab_gpl+timecounter_init) \
*(___ksymtab_gpl+timecounter_read) \
*(___ksymtab_gpl+timekeeping_clocktai) \
*(___ksymtab_gpl+timekeeping_inject_offset) \
*(___ksymtab_gpl+timerqueue_add) \
*(___ksymtab_gpl+timerqueue_del) \
*(___ksymtab_gpl+timerqueue_iterate_next) \
*(___ksymtab_gpl+timespec_trunc) \
*(___ksymtab_gpl+to_tm) \
*(___ksymtab_gpl+totalram_pages) \
*(___ksymtab_gpl+touch_atime) \
*(___ksymtab_gpl+touch_buffer) \
*(___ksymtab_gpl+transfer_to_handler) \
*(___ksymtab_gpl+transport_class_register) \
*(___ksymtab_gpl+try_to_free_buffers) \
*(___ksymtab_gpl+try_to_release_page) \
*(___ksymtab_gpl+try_to_writeback_inodes_sb) \
*(___ksymtab_gpl+try_to_writeback_inodes_sb_nr) \
*(___ksymtab_gpl+tty_buffer_request_room) \
*(___ksymtab_gpl+tty_check_change) \
*(___ksymtab_gpl+tty_devnum) \
*(___ksymtab_gpl+tty_do_resize) \
*(___ksymtab_gpl+tty_driver_kref_put) \
*(___ksymtab_gpl+tty_free_termios) \
*(___ksymtab_gpl+tty_get_pgrp) \
*(___ksymtab_gpl+tty_init_termios) \
*(___ksymtab_gpl+tty_ldisc_deref) \
*(___ksymtab_gpl+tty_ldisc_flush) \
*(___ksymtab_gpl+tty_ldisc_ref) \
*(___ksymtab_gpl+tty_ldisc_ref_wait) \
*(___ksymtab_gpl+tty_lock) \
*(___ksymtab_gpl+tty_lock_pair) \
*(___ksymtab_gpl+tty_mode_ioctl) \
*(___ksymtab_gpl+tty_mutex) \
*(___ksymtab_gpl+tty_name) \
*(___ksymtab_gpl+tty_pair_get_pty) \
*(___ksymtab_gpl+tty_pair_get_tty) \
*(___ksymtab_gpl+tty_perform_flush) \
*(___ksymtab_gpl+tty_port_alloc_xmit_buf) \
*(___ksymtab_gpl+tty_port_block_til_ready) \
*(___ksymtab_gpl+tty_port_carrier_raised) \
*(___ksymtab_gpl+tty_port_free_xmit_buf) \
*(___ksymtab_gpl+tty_port_link_device) \
*(___ksymtab_gpl+tty_port_lower_dtr_rts) \
*(___ksymtab_gpl+tty_port_put) \
*(___ksymtab_gpl+tty_port_raise_dtr_rts) \
*(___ksymtab_gpl+tty_port_register_device) \
*(___ksymtab_gpl+tty_port_register_device_attr) \
*(___ksymtab_gpl+tty_port_tty_set) \
*(___ksymtab_gpl+tty_prepare_flip_string) \
*(___ksymtab_gpl+tty_prepare_flip_string_flags) \
*(___ksymtab_gpl+tty_put_char) \
*(___ksymtab_gpl+tty_set_termios) \
*(___ksymtab_gpl+tty_standard_install) \
*(___ksymtab_gpl+tty_termios_encode_baud_rate) \
*(___ksymtab_gpl+tty_termios_input_baud_rate) \
*(___ksymtab_gpl+tty_throttle) \
*(___ksymtab_gpl+tty_unlock) \
*(___ksymtab_gpl+tty_unlock_pair) \
*(___ksymtab_gpl+tty_unthrottle) \
*(___ksymtab_gpl+tty_wait_until_sent) \
*(___ksymtab_gpl+tty_write_room) \
*(___ksymtab_gpl+tun_get_socket) \
*(___ksymtab_gpl+uart_add_one_port) \
*(___ksymtab_gpl+uart_console_write) \
*(___ksymtab_gpl+uart_get_baud_rate) \
*(___ksymtab_gpl+uart_get_divisor) \
*(___ksymtab_gpl+uart_handle_cts_change) \
*(___ksymtab_gpl+uart_handle_dcd_change) \
*(___ksymtab_gpl+uart_insert_char) \
*(___ksymtab_gpl+uart_match_port) \
*(___ksymtab_gpl+uart_parse_options) \
*(___ksymtab_gpl+uart_register_driver) \
*(___ksymtab_gpl+uart_remove_one_port) \
*(___ksymtab_gpl+uart_resume_port) \
*(___ksymtab_gpl+uart_set_options) \
*(___ksymtab_gpl+uart_suspend_port) \
*(___ksymtab_gpl+uart_unregister_driver) \
*(___ksymtab_gpl+ucc_fast_disable) \
*(___ksymtab_gpl+ucc_fast_dump_regs) \
*(___ksymtab_gpl+ucc_fast_enable) \
*(___ksymtab_gpl+ucc_fast_free) \
*(___ksymtab_gpl+ucc_fast_get_qe_cr_subblock) \
*(___ksymtab_gpl+ucc_fast_init) \
*(___ksymtab_gpl+ucc_fast_transmit_on_demand) \
*(___ksymtab_gpl+ucc_set_qe_mux_mii_mng) \
*(___ksymtab_gpl+udp4_hwcsum) \
*(___ksymtab_gpl+udp_rcv) \
*(___ksymtab_gpl+uevent_next_seqnum) \
*(___ksymtab_gpl+uhci_check_and_reset_hc) \
*(___ksymtab_gpl+unblock_all_signals) \
*(___ksymtab_gpl+unix_inq_len) \
*(___ksymtab_gpl+unix_outq_len) \
*(___ksymtab_gpl+unix_peer_get) \
*(___ksymtab_gpl+unix_socket_table) \
*(___ksymtab_gpl+unix_table_lock) \
*(___ksymtab_gpl+unlock_buffer) \
*(___ksymtab_gpl+unlock_rename) \
*(___ksymtab_gpl+unmap_kernel_range) \
*(___ksymtab_gpl+unmap_kernel_range_noflush) \
*(___ksymtab_gpl+unmap_mapping_range) \
*(___ksymtab_gpl+unmap_underlying_metadata) \
*(___ksymtab_gpl+unregister_8022_client) \
*(___ksymtab_gpl+unregister_binfmt) \
*(___ksymtab_gpl+unregister_console) \
*(___ksymtab_gpl+unregister_die_notifier) \
*(___ksymtab_gpl+unregister_exec_domain) \
*(___ksymtab_gpl+unregister_inet6addr_notifier) \
*(___ksymtab_gpl+unregister_inetaddr_notifier) \
*(___ksymtab_gpl+unregister_module_notifier) \
*(___ksymtab_gpl+unregister_mtd_chip_driver) \
*(___ksymtab_gpl+unregister_mtd_user) \
*(___ksymtab_gpl+unregister_netevent_notifier) \
*(___ksymtab_gpl+unregister_nls) \
*(___ksymtab_gpl+unregister_oom_notifier) \
*(___ksymtab_gpl+unregister_reboot_notifier) \
*(___ksymtab_gpl+unregister_shrinker) \
*(___ksymtab_gpl+unregister_snap_client) \
*(___ksymtab_gpl+unregister_switch) \
*(___ksymtab_gpl+unregister_syscore_ops) \
*(___ksymtab_gpl+unregister_tcf_proto_ops) \
*(___ksymtab_gpl+unshare_fs_struct) \
*(___ksymtab_gpl+unuse_mm) \
*(___ksymtab_gpl+usb_disable_xhci_ports) \
*(___ksymtab_gpl+usb_enable_intel_xhci_ports) \
*(___ksymtab_gpl+use_mm) \
*(___ksymtab_gpl+user_path_at) \
*(___ksymtab_gpl+user_path_create) \
*(___ksymtab_gpl+usermodehelper_read_lock_wait) \
*(___ksymtab_gpl+usermodehelper_read_trylock) \
*(___ksymtab_gpl+usermodehelper_read_unlock) \
*(___ksymtab_gpl+utf32_to_utf8) \
*(___ksymtab_gpl+utf8_to_utf32) \
*(___ksymtab_gpl+uuid_be_gen) \
*(___ksymtab_gpl+uuid_le_gen) \
*(___ksymtab_gpl+validate_sp) \
*(___ksymtab_gpl+vfs_cancel_lock) \
*(___ksymtab_gpl+vfs_create) \
*(___ksymtab_gpl+vfs_fstat) \
*(___ksymtab_gpl+vfs_fstatat) \
*(___ksymtab_gpl+vfs_fsync) \
*(___ksymtab_gpl+vfs_fsync_range) \
*(___ksymtab_gpl+vfs_getattr) \
*(___ksymtab_gpl+vfs_getattr_nosec) \
*(___ksymtab_gpl+vfs_getxattr) \
*(___ksymtab_gpl+vfs_kern_mount) \
*(___ksymtab_gpl+vfs_link) \
*(___ksymtab_gpl+vfs_listxattr) \
*(___ksymtab_gpl+vfs_llseek) \
*(___ksymtab_gpl+vfs_lock_file) \
*(___ksymtab_gpl+vfs_lstat) \
*(___ksymtab_gpl+vfs_mkdir) \
*(___ksymtab_gpl+vfs_mknod) \
*(___ksymtab_gpl+vfs_read) \
*(___ksymtab_gpl+vfs_readlink) \
*(___ksymtab_gpl+vfs_readv) \
*(___ksymtab_gpl+vfs_removexattr) \
*(___ksymtab_gpl+vfs_rename) \
*(___ksymtab_gpl+vfs_rmdir) \
*(___ksymtab_gpl+vfs_setlease) \
*(___ksymtab_gpl+vfs_setpos) \
*(___ksymtab_gpl+vfs_setxattr) \
*(___ksymtab_gpl+vfs_stat) \
*(___ksymtab_gpl+vfs_statfs) \
*(___ksymtab_gpl+vfs_symlink) \
*(___ksymtab_gpl+vfs_test_lock) \
*(___ksymtab_gpl+vfs_truncate) \
*(___ksymtab_gpl+vfs_unlink) \
*(___ksymtab_gpl+vfs_write) \
*(___ksymtab_gpl+vfs_writev) \
*(___ksymtab_gpl+virq_to_hw) \
*(___ksymtab_gpl+vlan_dev_real_dev) \
*(___ksymtab_gpl+vlan_ioctl_set) \
*(___ksymtab_gpl+vlan_untag) \
*(___ksymtab_gpl+vm_brk) \
*(___ksymtab_gpl+vm_get_page_prot) \
*(___ksymtab_gpl+vm_insert_mixed) \
*(___ksymtab_gpl+vm_insert_page) \
*(___ksymtab_gpl+vm_insert_pfn) \
*(___ksymtab_gpl+vm_iomap_memory) \
*(___ksymtab_gpl+vm_map_ram) \
*(___ksymtab_gpl+vm_memory_committed) \
*(___ksymtab_gpl+vm_mmap) \
*(___ksymtab_gpl+vm_munmap) \
*(___ksymtab_gpl+vm_stat) \
*(___ksymtab_gpl+vm_unmap_aliases) \
*(___ksymtab_gpl+vm_unmap_ram) \
*(___ksymtab_gpl+vmap) \
*(___ksymtab_gpl+vunmap) \
*(___ksymtab_gpl+wait_for_device_probe) \
*(___ksymtab_gpl+wait_for_stable_page) \
*(___ksymtab_gpl+wait_iff_congested) \
*(___ksymtab_gpl+wake_bit_function) \
*(___ksymtab_gpl+walk_system_ram_range) \
*(___ksymtab_gpl+watchdog_init_timeout) \
*(___ksymtab_gpl+watchdog_register_device) \
*(___ksymtab_gpl+watchdog_unregister_device) \
*(___ksymtab_gpl+work_busy) \
*(___ksymtab_gpl+workqueue_congested) \
*(___ksymtab_gpl+workqueue_set_max_active) \
*(___ksymtab_gpl+would_dump) \
*(___ksymtab_gpl+write_cache_pages) \
*(___ksymtab_gpl+write_dirty_buffer) \
*(___ksymtab_gpl+write_inode_now) \
*(___ksymtab_gpl+write_one_page) \
*(___ksymtab_gpl+writeback_in_progress) \
*(___ksymtab_gpl+writeback_inodes_sb) \
*(___ksymtab_gpl+writeback_inodes_sb_nr) \
*(___ksymtab_gpl+xattr_getsecurity) \
*(___ksymtab_gpl+xfrm4_prepare_output) \
*(___ksymtab_gpl+xfrm4_rcv) \
*(___ksymtab_gpl+xfrm4_rcv_encap) \
*(___ksymtab_gpl+xfrm_alloc_spi) \
*(___ksymtab_gpl+xfrm_cfg_mutex) \
*(___ksymtab_gpl+xfrm_find_acq) \
*(___ksymtab_gpl+xfrm_find_acq_byseq) \
*(___ksymtab_gpl+xfrm_garbage_collect) \
*(___ksymtab_gpl+xfrm_get_acqseq) \
*(___ksymtab_gpl+xfrm_init_replay) \
*(___ksymtab_gpl+xfrm_init_state) \
*(___ksymtab_gpl+xfrm_policy_alloc) \
*(___ksymtab_gpl+xfrm_policy_byid) \
*(___ksymtab_gpl+xfrm_policy_bysel_ctx) \
*(___ksymtab_gpl+xfrm_policy_delete) \
*(___ksymtab_gpl+xfrm_policy_flush) \
*(___ksymtab_gpl+xfrm_policy_insert) \
*(___ksymtab_gpl+xfrm_policy_walk) \
*(___ksymtab_gpl+xfrm_policy_walk_done) \
*(___ksymtab_gpl+xfrm_policy_walk_init) \
*(___ksymtab_gpl+xfrm_register_km) \
*(___ksymtab_gpl+xfrm_register_type) \
*(___ksymtab_gpl+xfrm_sad_getinfo) \
*(___ksymtab_gpl+xfrm_spd_getinfo) \
*(___ksymtab_gpl+xfrm_state_add) \
*(___ksymtab_gpl+xfrm_state_alloc) \
*(___ksymtab_gpl+xfrm_state_delete) \
*(___ksymtab_gpl+xfrm_state_delete_tunnel) \
*(___ksymtab_gpl+xfrm_state_flush) \
*(___ksymtab_gpl+xfrm_state_insert) \
*(___ksymtab_gpl+xfrm_state_walk) \
*(___ksymtab_gpl+xfrm_state_walk_done) \
*(___ksymtab_gpl+xfrm_state_walk_init) \
*(___ksymtab_gpl+xfrm_stateonly_find) \
*(___ksymtab_gpl+xfrm_unregister_km) \
*(___ksymtab_gpl+xfrm_unregister_type) \
*(___ksymtab_gpl+xt_alloc_table_info) \
*(___ksymtab_gpl+xt_find_match) \
*(___ksymtab_gpl+xt_find_revision) \
*(___ksymtab_gpl+xt_find_table_lock) \
*(___ksymtab_gpl+xt_find_target) \
*(___ksymtab_gpl+xt_free_table_info) \
*(___ksymtab_gpl+xt_hook_link) \
*(___ksymtab_gpl+xt_hook_unlink) \
*(___ksymtab_gpl+xt_proto_fini) \
*(___ksymtab_gpl+xt_proto_init) \
*(___ksymtab_gpl+xt_recseq) \
*(___ksymtab_gpl+xt_register_table) \
*(___ksymtab_gpl+xt_replace_table) \
*(___ksymtab_gpl+xt_table_unlock) \
*(___ksymtab_gpl+xt_unregister_table) \
*(___ksymtab_gpl+xtnu_ip_route_me_harder) \
*(___ksymtab_gpl+xtnu_register_target) \
*(___ksymtab_gpl+xtnu_register_targets) \
*(___ksymtab_gpl+xtnu_request_find_match) \
*(___ksymtab_gpl+xtnu_unregister_target) \
*(___ksymtab_gpl+xtnu_unregister_targets) \
*(___ksymtab_gpl+zap_vma_ptes) \
*(___ksymtab_gpl+zero_fill_bio) \
*(___ksymtab_gpl+zerocopy_sg_from_iovec) \

