--- a/include/linux/serial_core.h	2008-09-08 20:40:20.000000000 +0300
+++ b/include/linux/serial_core.h	2008-11-07 10:45:18.000000000 +0200
@@ -169,6 +169,10 @@
 #include <linux/mutex.h>
 #include <linux/sysrq.h>
 
+#if defined(CONFIG_ARCH_KS8695_VSOPENRISC)
+#include <linux/vsopenrisc.h>
+#endif
+
 struct uart_port;
 struct uart_info;
 struct serial_struct;
@@ -241,6 +245,14 @@
 
 typedef unsigned int __bitwise__ upf_t;
 
+#if defined(CONFIG_ARCH_KS8695_VSOPENRISC)
+/* values for the 16C950 specific baudrate generation registers TCR and CPR */
+struct uart16C950_speed_regs{
+	unsigned tcr;
+	unsigned cpr;
+};
+#endif
+
 struct uart_port {
 	spinlock_t		lock;			/* port lock */
 	unsigned int		iobase;			/* in/out[bwl] */
@@ -310,6 +322,11 @@
 	unsigned char		suspended;
 	unsigned char		unused[2];
 	void			*private_data;		/* generic platform data pointer */
+#if defined(CONFIG_ARCH_KS8695_VSOPENRISC)
+	struct epld_struct epld;
+	unsigned short epld_capabilities;		/* EPLD capabilities */
+	struct uart16C950_speed_regs speed_regs;	/* values for TCR and CPR registers */
+#endif
 };
 
 /*
@@ -414,6 +431,27 @@
 			unsigned int count,
 			void (*putchar)(struct uart_port *, int));
 
+#if defined(CONFIG_ARCH_KS8695_VSOPENRISC)
+/*
+ * /proc functions for EPLD
+ */
+#define PROC_NAME_EPLD	"vsopenrisc/epld_ttyS"
+int proc_epld_read(char *buffer, char **buffer_location, off_t offset,
+					int buffer_length, int *eof, void *data);
+int proc_epld_write(struct file *file, const char *buffer, 
+					unsigned long count, void *data);
+
+/*
+ * EPLD IOCTLs
+ */
+int ioctl_epld(struct uart_port *port, struct epld_struct *epld, unsigned int cmd);
+
+/* 
+ * custom divisor calculation
+ */
+int serial16C950_get_divisors(unsigned long baudbase, unsigned long baud, unsigned *TCR, unsigned *CPR, unsigned short *Divisor);
+#endif
+
 /*
  * Port/driver registration/removal
  */
