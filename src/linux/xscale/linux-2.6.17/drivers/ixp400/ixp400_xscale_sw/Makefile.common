# This file is for common macros used in all Makefiles.
#
# @par
# IXP400 SW Release version  2.1
# 
# -- Intel Copyright Notice --
# 
# @par
# Copyright (c) 2002-2005 Intel Corporation All Rights Reserved.
# 
# @par
# The source code contained or described herein and all documents
# related to the source code ("Material") are owned by Intel Corporation
# or its suppliers or licensors.  Title to the Material remains with
# Intel Corporation or its suppliers and licensors.
# 
# @par
# The Material is protected by worldwide copyright and trade secret laws
# and treaty provisions. No part of the Material may be used, copied,
# reproduced, modified, published, uploaded, posted, transmitted,
# distributed, or disclosed in any way except in accordance with the
# applicable license agreement .
# 
# @par
# No license under any patent, copyright, trade secret or other
# intellectual property right is granted to or conferred upon you by
# disclosure or delivery of the Materials, either expressly, by
# implication, inducement, estoppel, except in accordance with the
# applicable license agreement.
# 
# @par
# Unless otherwise agreed by Intel in writing, you may not remove or
# alter this notice or any other notice embedded in Materials by Intel
# or Intel's suppliers or licensors in any way.
# 
# @par
# For further details, please see the file README.TXT distributed with
# this software.
# 
# @par
# -- End Intel Copyright Notice --
#
#########################################################################

.PHONY: force
force:

# Determine the build host OS

# In a Tornado environment, WIND_HOST_TYPE should be set
ifeq ($(WIND_HOST_TYPE), x86-win32)
    IX_HOST_OS := windows
else
  ifeq ($(WIND_HOST_TYPE), sun4-solaris2)
    IX_HOST_OS := solaris
  else
    # Otherwise, try OSTYPE
    IX_HOST_OS := $(OSTYPE)
  endif
endif

# If we don't have a valid OS name, try to use the Unix uname command
# to find it.
ifeq (,$(filter $(IX_HOST_OS), linux solaris windows))
  IX_HOST_OS := $(shell uname)
  IX_HOST_OS := $(subst Linux,linux,$(IX_HOST_OS))
  IX_HOST_OS := $(subst SunOS,solaris,$(IX_HOST_OS))
# We do not check for 'cygwin' here, as a windows box will often have
# a cygwin "uname" on its PATH even when not running in a true cygwin
# environment. We must rely on the OSTYPE environment variable to tell
# us if we're in a true cygwin environment.
endif
# If we still don't know, assume it's Windows
ifeq (,$(filter $(IX_HOST_OS), linux solaris windows))
  IX_HOST_OS := windows
endif

################################################################
# Target OS selection

ifneq (,$(filter $(IX_TARGET), linuxbe linuxle))
IX_TARGET_OS := linux
else
IX_TARGET_OS := vxworks
endif


# A command for printing trace messages in the makefile.
MAKEFILE_TRACE := @echo $(ECHO_QUOTE)--- Makefile: $(ECHO_QUOTE) # Use this setting to enable messages 
#MAKEFILE_TRACE = @\#  # Use this setting to disable messages

################################################################
# Build platform specific macros
#
# These are : CMD_SEP : the string we use to seperate multiple
#                       commands on a single line.
#             ECHO_QUOTE : to print leading whitespace with the unix
#                       shells' echo command, we need quotes.
#             SAFE_QUOTE : the qoute character needed to enclose a
#                       'sed' command.
#             ECHO_BLANKLINE : The command to print an empty line.
#             RM : unconditionally delete file(s)

ifeq ($(IX_HOST_OS),windows)
# Windows settings
CMD_SEP := &&
ECHO_QUOTE := # cmd.exe's echo command doesn't need quotes
ECHO_BACKSLASH := \# comment needed to keep \ away from end of line
SAFE_QUOTE := "# " this comment is here to fix emacs syntax highlighting
ECHO_BLANKLINE := @cmd.exe /c echo.
RM := vxrm
# Windows doesn't have a 'touch' command. Warning! Unlike Unix touch,
# this will overwrite the existing file!
TOUCH_EMPTY_FILE := echo. >
else
# Unix settings
CMD_SEP := ;
ECHO_QUOTE := "# " this comment is here to fix emacs syntax highlighting
ECHO_BACKSLASH := \\
SAFE_QUOTE := '# ' this comment is here to fix emacs syntax highlighting
ECHO_BLANKLINE := @echo
RM := rm -f
TOUCH_EMPTY_FILE := touch
endif

################################################################
# Input directory - mostly for passing to sub-makes
# For linux, this is defined in the environment, for vxWorks the
# name of the environment variable is different for historical
# reasons.
ifeq ($(IX_TARGET_OS),vxworks)
IX_XSCALE_SW := $(CSR_BASE)
endif

################################################################
# Output directories
#

ifeq ($(IX_DEVICE),ixp46X)
OBJ_DIR := $(IX_DEVICE)/lib/$(IX_TARGET)
else
OBJ_DIR := lib/$(IX_TARGET)
endif

METRICS_DIR := metrics

OUTPUT_DIRS := lib ixp46X ixp46X/lib $(OBJ_DIR) \
        $(foreach c, $(COMPONENTS), $(OBJ_DIR)/$c $(OBJ_DIR)/$c/test)
OUTPUT_DIRS += $(OBJ_DIR)/codelets \
        $(CODELETS_COMPONENTS:%=$(OBJ_DIR)/codelets/%)

###################################################################
# NPE related common  macros

#Location of the microcode header
NPE_PRODUCTION_HEADER := src/npeDl/IxNpeMicrocode.c
NPE_PRODUCTION_HEADERFILE := src/include/IxNpeMicrocode.h
NPE_PRODUCTION_HEADER_OBJ := $(OBJ_DIR)/npeDl/IxNpeMicrocode.o

