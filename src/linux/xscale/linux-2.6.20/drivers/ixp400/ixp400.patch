--- ixp400_xscale_sw/src/ethMii/IxEthMii.c	2007-02-25 22:59:28.000000000 -0800
+++ BSP0.7/linux-2.6.21.4/drivers/ixp400/ixp400_xscale_sw/src/ethMii/IxEthMii.c	2007-06-18 17:50:48.000000000 -0700
@@ -86,6 +86,26 @@
 	return IX_FAIL;
     }
 
+                /* Gateworks added code to handle KS8995 Switch, Forces Phy 1 and 5 to be associated with
+                         NPEA and NPEB respectively. This Code does not actually assign them as such, only tells
+                         the calling function that PHY 1 and PHY 5 are available for use
+                */
+                ixEthAccMiiReadRtn(1,  IX_ETH_MII_PHY_ID1_REG, &regvalId1);
+                ixEthAccMiiReadRtn(1,  IX_ETH_MII_PHY_ID1_REG, &regvalId1);
+                ixEthAccMiiReadRtn(1,  IX_ETH_MII_PHY_ID2_REG, &regvalId2);
+                if (((regvalId1 << IX_ETH_MII_REG_SHL) | regvalId2) == IX_ETH_MII_KS8995_PHY_ID)
+                {
+                        for (i=0; i <= IXP425_ETH_ACC_MII_MAX_ADDR; i++){
+                                phyPresent[i] = FALSE;
+                        }
+                        ixEthMiiPhyId[1] = (regvalId1 << IX_ETH_MII_REG_SHL) | regvalId2;
+                        ixEthMiiPhyId[5] = (regvalId1 << IX_ETH_MII_REG_SHL) | regvalId2;
+                        phyPresent[1] = TRUE;
+                        phyPresent[5] = TRUE;
+            return IX_SUCCESS;
+                }
+                /* End Gateworks Addition */
+
     /* fill the array */
     for(i=0;
         i<IXP400_ETH_ACC_MII_MAX_ADDR;
@@ -358,7 +378,7 @@
            BOOL *autoneg)
 {
     UINT16 ctrlRegval, statRegval, regval, regval4, regval5;
-
+	UINT16 K1, K2, K3, K4; /* Gateworks Added Variable to handle KS8995 Switch */
     /* check the parameters */
     if ((linkUp == NULL) || 
 	(speed100 == NULL) || 
@@ -410,6 +430,27 @@
 	    ixEthAccMiiReadRtn(phyAddr,  IX_ETH_MII_STAT_REG, &statRegval);
 	    
 	    *linkUp = ((statRegval & IX_ETH_MII_SR_LINK_STATUS) != 0);
+                        /* Gateworks added link Status indicator for KS8898 Switch */
+                        if ((ixEthMiiPhyId[phyAddr] == IX_ETH_MII_KS8995_PHY_ID) && (phyAddr == 1))
+                        {
+                                ixEthAccMiiReadRtn(1, IX_ETH_MII_STAT_REG, &K1);
+                                ixEthAccMiiReadRtn(2, IX_ETH_MII_STAT_REG, &K2);
+                                ixEthAccMiiReadRtn(3, IX_ETH_MII_STAT_REG, &K3);
+                                ixEthAccMiiReadRtn(4, IX_ETH_MII_STAT_REG, &K4);
+                                if (((K1 & IX_ETH_MII_SR_LINK_STATUS) != 0) ||
+                                        ((K2 & IX_ETH_MII_SR_LINK_STATUS) != 0) ||
+                                        ((K3 & IX_ETH_MII_SR_LINK_STATUS) != 0) ||
+                                        ((K4 & IX_ETH_MII_SR_LINK_STATUS) != 0))
+                                {
+                                        *linkUp = 1;
+                                }
+                                else
+                                {
+                                        *linkUp = 0;
+                                }
+                        }
+                        /* End Gateworks Addition */	
+
 	    if (*linkUp)
 	    {
 		*autoneg = ((ctrlRegval & IX_ETH_MII_CR_AUTO_EN) != 0) &&
