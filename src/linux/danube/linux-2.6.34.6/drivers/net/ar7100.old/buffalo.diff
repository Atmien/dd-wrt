Index: ag7100.c
===================================================================
--- ag7100.c	(revision 11678)
+++ ag7100.c	(working copy)
@@ -21,6 +21,17 @@
 #include "ag7100.h"
 #include "ag7100_phy.h"
 #include "ag7100_trc.h"
+#ifdef CONFIG_BUFFALO
+#include "rtl8366_smi.h"
+RTL8366_FUNCS rtl_funcs = 
+{
+	NULL,
+	NULL,
+	NULL,
+	NULL,
+	NULL
+};
+#endif //CONFIG_BUFFALO //
 
 static ag7100_mac_t *ag7100_macs[2];
 static void ag7100_hw_setup(ag7100_mac_t *mac);
@@ -89,6 +100,17 @@
 #ifndef CONFIG_AR9100
 int gige_pll = 0x0110000;
 #else
+#ifdef	CONFIG_BUFFALO
+unsigned int e1000sr_pll[2]	= { 0x1e000100ul, 0x1e000100ul };
+unsigned int e1000rb_pll[2]	= { 0x1f000000ul, 0x00000100ul };
+unsigned int e100sr_pll[2]	= { 0x13000a44ul, 0x13000a44ul };
+unsigned int e100rb_pll[2]	= { 0x13000a44ul, 0x13000a44ul };
+unsigned int e10sr_pll[2]	= { 0x13000a44ul, 0x00441099ul };
+unsigned int e10rb_pll[2]	= { 0x13000a44ul, 0x00441099ul };
+unsigned int * e1000_pll;
+unsigned int * e100_pll;
+unsigned int * e10_pll;
+#endif	// CONFIG_BUFFALO //
 #define SW_PLL 0x1f000000ul
 int gige_pll = 0x1a000000;
 #endif
@@ -597,6 +619,9 @@
 #endif
         ag7100_set_mac_if(mac, 1);
 #ifdef CONFIG_AR9100
+#ifdef	CONFIG_BUFFALO
+        ag7100_set_pll(mac, e1000_pll[mac->mac_unit ? 1 : 0]);
+#else
         if (mac->mac_unit == 0)
         { /* eth0 */
             ag7100_set_pll(mac, gige_pll);
@@ -609,6 +634,7 @@
             ag7100_set_pll(mac, SW_PLL);
 #endif
         }
+#endif
 #else
         ag7100_set_pll(mac, gige_pll);
 #endif
@@ -620,6 +646,9 @@
         ag7100_set_mac_speed(mac, 1);
 #ifndef CONFIG_AR7100_EMULATION
 #ifdef CONFIG_AR9100
+#ifdef	CONFIG_BUFFALO
+        ag7100_set_pll(mac, e100_pll[mac->mac_unit ? 1 : 0]);
+#else
         if (mac->mac_unit == 0)
         { /* eth0 */
             ag7100_set_pll(mac, 0x13000a44);
@@ -632,6 +661,7 @@
             ag7100_set_pll(mac, SW_PLL);
 #endif
         }
+#endif
 #else
         ag7100_set_pll(mac, 0x0001099);
 #endif
@@ -643,6 +673,9 @@
         ag7100_set_mac_if(mac, 0);
         ag7100_set_mac_speed(mac, 0);
 #ifdef CONFIG_AR9100
+#ifdef	CONFIG_BUFFALO
+        ag7100_set_pll(mac, e10_pll[mac->mac_unit ? 1 : 0]);
+#else
         if (mac->mac_unit == 0)
         { /* eth0 */
             ag7100_set_pll(mac, 0x00441099);
@@ -655,6 +688,7 @@
             ag7100_set_pll(mac, SW_PLL);
 #endif
         }
+#endif
 #else
         ag7100_set_pll(mac, 0x00991099);
 #endif
@@ -1961,6 +1995,32 @@
         dev->weight          =  AG7100_NAPI_WEIGHT;
         dev->tx_timeout      =  ag7100_tx_timeout;
         dev->priv            =  mac;
+#ifdef CONFIG_BUFFALO   // { append by BUFFALO 2008.09.19
+	switch(rtl_chip_type_select())
+	{
+		case CHIP_TYPE_RTL8366RB:
+			rtl_funcs.phy_setup = rtl8366rb_phy_setup;
+			rtl_funcs.phy_is_up = rtl8366rb_phy_is_up;
+			rtl_funcs.phy_speed = rtl8366rb_phy_speed;
+			rtl_funcs.phy_is_fdx = rtl8366rb_phy_is_fdx;
+			rtl_funcs.get_link_status = rtl8366rb_get_link_status;
+			e1000_pll = e1000rb_pll;
+			e100_pll = e100rb_pll;
+			e10_pll = e10rb_pll;
+			break;
+		case CHIP_TYPE_RTL8366SR:
+		default:
+			rtl_funcs.phy_setup = rtl8366sr_phy_setup;
+			rtl_funcs.phy_is_up = rtl8366sr_phy_is_up;
+			rtl_funcs.phy_speed = rtl8366sr_phy_speed;
+			rtl_funcs.phy_is_fdx = rtl8366sr_phy_is_fdx;
+			rtl_funcs.get_link_status = rtl8366sr_get_link_status;
+			e1000_pll = e1000sr_pll;
+			e100_pll = e100sr_pll;
+			e10_pll = e10sr_pll;
+			break;
+	}
+#endif //CONFIG_BUFFALO //
 
         ag7100_get_default_macaddr(mac, dev->dev_addr);
 
Index: athrf1_phy.c
===================================================================
--- athrf1_phy.c	(revision 11678)
+++ athrf1_phy.c	(working copy)
@@ -28,18 +28,17 @@
 #else
 #include <linux/kernel.h>
 #include <asm/delay.h>
-#include "ar7100.h"
-#ifdef CONFIG_CUS109_F1E_PHY
+//#ifdef CONFIG_CUS109_F1E_PHY
 #define mdelay(_x)         udelay((_x)*1000)
+//#endif
 #endif
 #endif
-#endif
 
 #ifndef VERBOSE
 #define  VERBOSE           0
 #endif
 
-#if 0
+#if 1
 #include <linux/kernel.h>
 #include <linux/autoconf.h>
 #include <linux/types.h>
@@ -50,6 +49,7 @@
 
 #include "ag7100.h"
 #include "ag7100_phy.h"
+#include "ar7100.h"
 
 #define MODULE_NAME "ATHRF1"
 
@@ -62,15 +62,15 @@
 athr_phy_t phy_info[] = {
     {is_enet_port: 1,
      mac_unit    : 0,
-#ifdef CONFIG_CUS109_F1E_PHY
+//#ifdef CONFIG_CUS109_F1E_PHY
      phy_addr    : 0x00},
 
     {is_enet_port: 1,
      mac_unit    : 1,
      phy_addr    : 0x01}
-#else		   
-     phy_addr    : 0x00}
-#endif
+//#else		   
+//     phy_addr    : 0x00}
+//#endif
 };
 
 static athr_phy_t *
@@ -113,19 +113,19 @@
     phy_reg_write(unit, phy->phy_addr, ATHR_1000BASET_CONTROL,
                   ATHR_ADVERTISE_1000FULL);
 
-#ifdef CONFIG_CUS109_F1E_PHY
+//#ifdef CONFIG_CUS109_F1E_PHY
     /* delay rx_clk */
     phy_reg_write(unit, phy->phy_addr, 0x1D, 0x0);
     phy_reg_write(unit, phy->phy_addr, 0x1E, 0x34E);
-#endif
+//#endif
 
     /* delay tx_clk */
     phy_reg_write(unit, phy->phy_addr, 0x1D, 0x5);
-#ifdef CONFIG_CUS109_F1E_PHY
+//#ifdef CONFIG_CUS109_F1E_PHY
     phy_reg_write(unit, phy->phy_addr, 0x1E, 0x3C47);
-#else
-    phy_reg_write(unit, phy->phy_addr, 0x1E, 0x100);
-#endif
+//#else
+//    phy_reg_write(unit, phy->phy_addr, 0x1E, 0x100);
+//#endif
 
     /* Reset PHYs*/
     phy_reg_write(unit, phy->phy_addr, ATHR_PHY_CONTROL,
Index: athrs26_phy.c
===================================================================
--- athrs26_phy.c	(revision 11678)
+++ athrs26_phy.c	(working copy)
@@ -118,7 +118,7 @@
     },
 };
 
-static uint8_t athr26_init_flag = 0;
+static uint8_t athr26_init_flag = 1;
 
 static cmd_resp_t cmd_resp;
 static DECLARE_WAIT_QUEUE_HEAD (hd_conf_wait);
Index: ag7100_phy.h
===================================================================
--- ag7100_phy.h	(revision 11678)
+++ ag7100_phy.h	(working copy)
@@ -78,9 +78,75 @@
 ** Implements various interfaces depending on the PHY selected.
 */
 
+#if defined (CONFIG_CAMEO_REALTEK_PHY)
+#include "rtl8366sr_phy.h"
 
-#if defined(CONFIG_VITESSE_PHY)
+#ifdef CONFIG_BUFFALO
+#include "rtl8366rb_phy.h"
 
+enum
+{
+	CHIP_TYPE_RTL8366SR,
+	CHIP_TYPE_RTL8366RB,
+	CHIP_TYPE_UNKNOWN
+};
+
+typedef struct
+{
+	BOOL (*phy_setup)(int);
+	int (*phy_is_up)(int);
+	int (*phy_speed)(int);
+	int (*phy_is_fdx)(int);
+	int (*get_link_status)(int, int *, int *, ag7100_phy_speed_t *);
+}
+RTL8366_FUNCS;
+
+extern RTL8366_FUNCS rtl_funcs;
+
+#define ag7100_phy_is_up(unit) rtl_funcs.phy_is_up(unit)
+#define ag7100_phy_speed(unit) rtl_funcs.phy_speed(unit)
+#define ag7100_phy_is_fdx(unit) rtl_funcs.phy_is_fdx(unit)
+
+static inline void
+ag7100_phy_setup(int unit)
+{
+	rtl_funcs.phy_setup(unit);
+}
+
+static inline unsigned int
+ag7100_get_link_status(int unit, int *link, int *fdx, ag7100_phy_speed_t *speed)
+{
+
+  rtl_funcs.get_link_status(unit, link, fdx, speed);
+  return 0;
+}
+#else
+
+#define ag7100_phy_is_up(unit)          rtl8366sr_phy_is_up(unit)
+#define ag7100_phy_speed(unit)          rtl8366sr_phy_speed(unit)
+#define ag7100_phy_is_fdx(unit)         rtl8366sr_phy_is_fdx(unit)
+
+static inline int
+ag7100_phy_setup(int unit)
+{
+  return rtl8366sr_phy_setup(unit); 
+}
+
+static inline unsigned int
+ag7100_get_link_status(int unit, int *link, int *fdx, ag7100_phy_speed_t *speed)
+{
+
+//  printk("linkstatus1: %d %d %d %d\n", unit, *link, *fdx, *speed);
+  *link=ag7100_phy_is_up(unit);
+  *fdx=ag7100_phy_is_fdx(unit);
+  *speed=ag7100_phy_speed(unit);
+  //printk("linkstatus2: %d %d %d %d\n", unit, *link, *fdx, *speed);
+  return 0;
+}
+#endif // CONFIG_BUFFALO //
+
+#elif defined(CONFIG_VITESSE_PHY)
+
 #include "vsc_phy.h"
 
 #define ag7100_phy_is_up(unit)          vsc_phy_is_up(unit)
@@ -306,7 +372,7 @@
   return -1;
 }
 
-#elif defined(CONFIG_ATHRF1_PHY)
+#elif defined(CONFIG_ATHRF1_PHY) || defined(CONFIG_ATHR_PHY)
 
 #include "athr_phy.h"
 
Index: Makefile
===================================================================
--- Makefile	(revision 11678)
+++ Makefile	(working copy)
@@ -17,7 +17,28 @@
 obj-phy-$(CONFIG_AG7100_GENERIC_PHY)    = generic_phy.o
 obj-phy-$(CONFIG_VITESSE_8601_PHY)      = vsc8601_phy.o
 obj-phy-$(CONFIG_VITESSE_8601_7395_PHY) = vsc8601_phy.o generic_i2c.o generic_spi.o vsc73xx.o
+obj-phy-$(CONFIG_CAMEO_REALTEK_PHY)   = rtl8366sr_phy.o
 
+# { append by BUFFALO
+RTL8366S_PATH=RTL8366S_DRIVER
+
+obj-phy-$(CONFIG_CAMEO_REALTEK_PHY) += \
+	$(RTL8366S_PATH)/rtl8366s_api.o \
+	$(RTL8366S_PATH)/rtl8366s_asicdrv.o \
+	$(RTL8366S_PATH)/rtl8366s_greenethernet.o 
+
+RTL8366RB_PATH=RTL8366RB_DRIVER
+
+obj-phy-$(CONFIG_CAMEO_REALTEK_PHY) += \
+	$(RTL8366RB_PATH)/rtl8366rb_api.o \
+	$(RTL8366RB_PATH)/rtl8368s_asicdrv.o
+
+obj-phy-$(CONFIG_CAMEO_REALTEK_PHY)     += \
+	rtl8366_smi.o rtl8366rb_phy.o
+
+
+#EXTRA_CFLAGS += -DCONFIG_BUFFALO
+
 ag7100_mod-objs			:=	$(obj-phy-y) ag7100.o
 
 ifeq ($(CONFIG_AP81_CARRIER_CUS109), 1)
@@ -27,3 +48,5 @@
 CFLAGS_athrf1_phy.o += -DCONFIG_CUS109_F1E_PHY
 CFLAGS_ag7100.o += -DCONFIG_DUAL_F1E_PHY
 endif
+
+
