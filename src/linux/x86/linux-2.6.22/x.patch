diff -urN dd-wrt/linux-2.6.20/init/do_mounts.c atheros/linux-2.6.20/init/do_mounts.c
--- dd-wrt/linux-2.6.20/init/do_mounts.c	2007-02-05 16:37:55.000000000 +0100
+++ atheros/linux-2.6.20/init/do_mounts.c	2007-01-02 07:44:45.000000000 +0100
@@ -21,10 +21,11 @@
 int __initdata rd_doload;	/* 1 = load RAM disk, 0 = don't load */
 
 int root_mountflags = MS_RDONLY | MS_SILENT;
-char * __initdata root_device_name;
+int root_devices=8;
+char * __initdata root_device_name[8]={"/dev/hda2","/dev/hdb2","/dev/hdc2","/dev/hdd2", "/dev/sda2","/dev/sdb2","/dev/sdc2","/dev/sdd2"};
 static char __initdata saved_root_name[64];
 
-dev_t ROOT_DEV;
+dev_t ROOT_DEV[8];
 
 static int __init load_ramdisk(char *str)
 {
@@ -273,7 +274,7 @@
 		return err;
 
 	sys_chdir("/root");
-	ROOT_DEV = current->fs->pwdmnt->mnt_sb->s_dev;
+	ROOT_DEV[0] = current->fs->pwdmnt->mnt_sb->s_dev;
 	printk("VFS: Mounted root (%s filesystem)%s.\n",
 	       current->fs->pwdmnt->mnt_sb->s_type->name,
 	       current->fs->pwdmnt->mnt_sb->s_flags & MS_RDONLY ? 
@@ -281,7 +282,7 @@
 	return 0;
 }
 
-void __init mount_block_root(char *name, int flags)
+int __init mount_block_root(char *name, int flags)
 {
 	char *fs_names = __getname();
 	char *p;
@@ -309,13 +310,14 @@
 		 * and bad superblock on root device.
 		 */
 #ifdef CONFIG_BLOCK
-		__bdevname(ROOT_DEV, b);
+//		__bdevname(ROOT_DEV, b);
 #endif
-		printk("VFS: Cannot open root device \"%s\" or %s\n",
-				root_device_name, b);
-		printk("Please append a correct \"root=\" boot option\n");
+//		printk("VFS: Cannot open root device \"%s\" or %s\n",
+//				root_device_name, b);
+//		printk("Please append a correct \"root=\" boot option\n");
 
-		panic("VFS: Unable to mount root fs on %s", b);
+//		panic("VFS: Unable to mount root fs on %s", b);
+		return -1;
 	}
 
 	printk("No filesystem could mount root, tried: ");
@@ -323,11 +325,13 @@
 		printk(" %s", p);
 	printk("\n");
 #ifdef CONFIG_BLOCK
-	__bdevname(ROOT_DEV, b);
+//	__bdevname(ROOT_DEV, b);
 #endif
-	panic("VFS: Unable to mount root fs on %s", b);
+//	panic("VFS: Unable to mount root fs on %s", b);
+	return -1;
 out:
 	putname(fs_names);
+	return 0;
 }
  
 #ifdef CONFIG_ROOT_NFS
@@ -335,7 +339,7 @@
 {
 	void *data = nfs_root_data();
 
-	create_dev("/dev/root", ROOT_DEV, root_device_name);
+	create_dev("/dev/root", ROOT_DEV[0], root_device_name);
 	if (data &&
 	    do_mount_root("/dev/root", "nfs", root_mountflags, data) == 0)
 		return 1;
@@ -376,29 +380,36 @@
 void __init mount_root(void)
 {
 #ifdef CONFIG_ROOT_NFS
-	if (MAJOR(ROOT_DEV) == UNNAMED_MAJOR) {
+	if (MAJOR(ROOT_DEV[0]) == UNNAMED_MAJOR) {
 		if (mount_nfs_root())
 			return;
 
 		printk(KERN_ERR "VFS: Unable to mount root fs via NFS, trying floppy.\n");
-		ROOT_DEV = Root_FD0;
+		ROOT_DEV[0] = Root_FD0;
 	}
 #endif
 #ifdef CONFIG_BLK_DEV_FD
-	if (MAJOR(ROOT_DEV) == FLOPPY_MAJOR) {
+	if (MAJOR(ROOT_DEV[0]) == FLOPPY_MAJOR) {
 		/* rd_doload is 2 for a dual initrd/ramload setup */
 		if (rd_doload==2) {
 			if (rd_load_disk(1)) {
-				ROOT_DEV = Root_RAM1;
-				root_device_name = NULL;
+				ROOT_DEV[0] = Root_RAM1;
+				root_device_name[0] = NULL;
 			}
 		} else
 			change_floppy("root floppy");
 	}
 #endif
 #ifdef CONFIG_BLOCK
-	create_dev("/dev/root", ROOT_DEV, root_device_name);
-	mount_block_root("/dev/root", root_mountflags);
+	int i;
+	for (i=0;i<root_devices;i++)
+	{
+	create_dev("/dev/root", ROOT_DEV[i], root_device_name[i]);
+	int ret = mount_block_root("/dev/root", root_mountflags);
+	if (ret==0)
+	    return;
+	}
+	panic("unable to mount root\n");
 #endif
 }
 
@@ -424,23 +435,22 @@
 	md_run_setup();
 
 	if (saved_root_name[0]) {
-		root_device_name = saved_root_name;
-		if (!strncmp(root_device_name, "mtd", 3)) {
-			mount_block_root(root_device_name, root_mountflags);
-			goto out;
+		int i;
+		for (i=0;i<root_devices;i++)
+		{
+		ROOT_DEV[i] = name_to_dev_t(root_device_name[i]);
+		if (strncmp(root_device_name[i], "/dev/", 5) == 0)
+			root_device_name[i] += 5;
 		}
-		ROOT_DEV = name_to_dev_t(root_device_name);
-		if (strncmp(root_device_name, "/dev/", 5) == 0)
-			root_device_name += 5;
 	}
 
-	is_floppy = MAJOR(ROOT_DEV) == FLOPPY_MAJOR;
+	is_floppy = MAJOR(ROOT_DEV[0]) == FLOPPY_MAJOR;
 
 	if (initrd_load())
 		goto out;
 
 	if (is_floppy && rd_doload && rd_load_disk(0))
-		ROOT_DEV = Root_RAM0;
+		ROOT_DEV[0] = Root_RAM0;
 
 	mount_root();
 out:
diff -urN dd-wrt/linux-2.6.20/init/do_mounts.h atheros/linux-2.6.20/init/do_mounts.h
--- dd-wrt/linux-2.6.20/init/do_mounts.h	2007-02-05 16:37:55.000000000 +0100
+++ atheros/linux-2.6.20/init/do_mounts.h	2007-01-02 07:42:02.000000000 +0100
@@ -9,10 +9,10 @@
 #include <linux/devfs_fs_kernel.h>
 
 void  change_floppy(char *fmt, ...);
-void  mount_block_root(char *name, int flags);
+int  mount_block_root(char *name, int flags);
 void  mount_root(void);
 extern int root_mountflags;
-extern char *root_device_name;
+extern char *root_device_name[];
 
 #ifdef CONFIG_DEVFS_FS
 
diff -urN dd-wrt/linux-2.6.20/init/main.c atheros/linux-2.6.20/init/main.c
--- dd-wrt/linux-2.6.20/init/main.c	2007-02-05 16:37:55.000000000 +0100
+++ atheros/linux-2.6.20/init/main.c	2007-03-15 17:40:51.000000000 +0100
@@ -786,11 +786,11 @@
 	 * The Bourne shell can be used instead of init if we are 
 	 * trying to recover a really broken machine.
 	 */
-	if (execute_command) {
+/*	if (execute_command) {
 		run_init_process(execute_command);
 		printk(KERN_WARNING "Failed to execute %s.  Attempting "
 					"defaults...\n", execute_command);
-	}
+	}*/
 	run_init_process("/sbin/init");
 	run_init_process("/etc/init");
 	run_init_process("/bin/init");
